/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { QueryMerchantResourceRequestRequestBody } from './QueryMerchantResourceRequestRequestBody';
import {
    validateQueryMerchantResourceRequestRequestBody,
    QueryMerchantResourceRequestRequestBodyFromJSON,
    QueryMerchantResourceRequestRequestBodyFromJSONTyped,
    QueryMerchantResourceRequestRequestBodyToJSON,
    QueryMerchantResourceRequestRequestBodyToJSONTyped,
} from './QueryMerchantResourceRequestRequestBody';
import type { QueryMerchantResourceRequestRequestHead } from './QueryMerchantResourceRequestRequestHead';
import {
    validateQueryMerchantResourceRequestRequestHead,
    QueryMerchantResourceRequestRequestHeadFromJSON,
    QueryMerchantResourceRequestRequestHeadFromJSONTyped,
    QueryMerchantResourceRequestRequestHeadToJSON,
    QueryMerchantResourceRequestRequestHeadToJSONTyped,
} from './QueryMerchantResourceRequestRequestHead';

/**
 * 
 * @export
 * @interface QueryMerchantResourceRequestRequest
 */
export interface QueryMerchantResourceRequestRequest {
    /**
     * 
     * @type {QueryMerchantResourceRequestRequestHead}
     * @memberof QueryMerchantResourceRequestRequest
     */
    head: QueryMerchantResourceRequestRequestHead;
    /**
     * 
     * @type {QueryMerchantResourceRequestRequestBody}
     * @memberof QueryMerchantResourceRequestRequest
     */
    body: QueryMerchantResourceRequestRequestBody;
}

/**
 * Check if a given object implements the QueryMerchantResourceRequestRequest interface.
 */
export function instanceOfQueryMerchantResourceRequestRequest(value: object): value is QueryMerchantResourceRequestRequest {
    if (!('head' in value) || value['head'] === undefined) return false;
    if (!('body' in value) || value['body'] === undefined) return false;
    return true;
}

export function QueryMerchantResourceRequestRequestFromJSON(json: any): QueryMerchantResourceRequestRequest {
    return QueryMerchantResourceRequestRequestFromJSONTyped(json, false);
}

export function QueryMerchantResourceRequestRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryMerchantResourceRequestRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'head': QueryMerchantResourceRequestRequestHeadFromJSON(json['head']),
        'body': QueryMerchantResourceRequestRequestBodyFromJSON(json['body']),
    };
}

export function QueryMerchantResourceRequestRequestToJSON(json: any): QueryMerchantResourceRequestRequest {
    return QueryMerchantResourceRequestRequestToJSONTyped(json, false);
}

export function QueryMerchantResourceRequestRequestToJSONTyped(value?: QueryMerchantResourceRequestRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'head': QueryMerchantResourceRequestRequestHeadToJSON(value['head']),
        'body': QueryMerchantResourceRequestRequestBodyToJSON(value['body']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateQueryMerchantResourceRequestRequest(value: QueryMerchantResourceRequestRequest): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateQueryMerchantResourceRequestRequestHead(value.head));

    validationErrorContexts.push(...validateQueryMerchantResourceRequestRequestBody(value.body));

    return validationErrorContexts;
}
