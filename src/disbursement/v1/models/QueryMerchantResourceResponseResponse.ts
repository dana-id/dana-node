/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { QueryMerchantResourceResponseResponseBody } from './QueryMerchantResourceResponseResponseBody';
import {
    validateQueryMerchantResourceResponseResponseBody,
    QueryMerchantResourceResponseResponseBodyFromJSON,
    QueryMerchantResourceResponseResponseBodyFromJSONTyped,
    QueryMerchantResourceResponseResponseBodyToJSON,
    QueryMerchantResourceResponseResponseBodyToJSONTyped,
} from './QueryMerchantResourceResponseResponseBody';
import type { QueryMerchantResourceResponseResponseHead } from './QueryMerchantResourceResponseResponseHead';
import {
    validateQueryMerchantResourceResponseResponseHead,
    QueryMerchantResourceResponseResponseHeadFromJSON,
    QueryMerchantResourceResponseResponseHeadFromJSONTyped,
    QueryMerchantResourceResponseResponseHeadToJSON,
    QueryMerchantResourceResponseResponseHeadToJSONTyped,
} from './QueryMerchantResourceResponseResponseHead';

/**
 * 
 * @export
 * @interface QueryMerchantResourceResponseResponse
 */
export interface QueryMerchantResourceResponseResponse {
    /**
     * 
     * @type {QueryMerchantResourceResponseResponseHead}
     * @memberof QueryMerchantResourceResponseResponse
     */
    head: QueryMerchantResourceResponseResponseHead;
    /**
     * 
     * @type {QueryMerchantResourceResponseResponseBody}
     * @memberof QueryMerchantResourceResponseResponse
     */
    body: QueryMerchantResourceResponseResponseBody;
}

/**
 * Check if a given object implements the QueryMerchantResourceResponseResponse interface.
 */
export function instanceOfQueryMerchantResourceResponseResponse(value: object): value is QueryMerchantResourceResponseResponse {
    if (!('head' in value) || value['head'] === undefined) return false;
    if (!('body' in value) || value['body'] === undefined) return false;
    return true;
}

export function QueryMerchantResourceResponseResponseFromJSON(json: any): QueryMerchantResourceResponseResponse {
    return QueryMerchantResourceResponseResponseFromJSONTyped(json, false);
}

export function QueryMerchantResourceResponseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryMerchantResourceResponseResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'head': QueryMerchantResourceResponseResponseHeadFromJSON(json['head']),
        'body': QueryMerchantResourceResponseResponseBodyFromJSON(json['body']),
    };
}

export function QueryMerchantResourceResponseResponseToJSON(json: any): QueryMerchantResourceResponseResponse {
    return QueryMerchantResourceResponseResponseToJSONTyped(json, false);
}

export function QueryMerchantResourceResponseResponseToJSONTyped(value?: QueryMerchantResourceResponseResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'head': QueryMerchantResourceResponseResponseHeadToJSON(value['head']),
        'body': QueryMerchantResourceResponseResponseBodyToJSON(value['body']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateQueryMerchantResourceResponseResponse(value: QueryMerchantResourceResponseResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateQueryMerchantResourceResponseResponseHead(value.head));

    validationErrorContexts.push(...validateQueryMerchantResourceResponseResponseBody(value.body));

    return validationErrorContexts;
}
