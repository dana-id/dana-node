/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { Money } from './Money';
import {
    validateMoney,
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    MoneyToJSONTyped,
} from './Money';

/**
 * Additional information
 * @export
 * @interface BankAccountInquiryResponseAdditionalInfo
 */
export interface BankAccountInquiryResponseAdditionalInfo {
    /**
     * Additional information of fee amount. Contains two sub-fields:<br>
     * 1. Value: Amount, including the cents<br>
     * 2. Currency: Currency code based on ISO
     * 
     * @type {Money}
     * @memberof BankAccountInquiryResponseAdditionalInfo
     */
    feeAmount: Money;
}

/**
 * Check if a given object implements the BankAccountInquiryResponseAdditionalInfo interface.
 */
export function instanceOfBankAccountInquiryResponseAdditionalInfo(value: object): value is BankAccountInquiryResponseAdditionalInfo {
    if (!('feeAmount' in value) || value['feeAmount'] === undefined) return false;
    return true;
}

export function BankAccountInquiryResponseAdditionalInfoFromJSON(json: any): BankAccountInquiryResponseAdditionalInfo {
    return BankAccountInquiryResponseAdditionalInfoFromJSONTyped(json, false);
}

export function BankAccountInquiryResponseAdditionalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccountInquiryResponseAdditionalInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'feeAmount': MoneyFromJSON(json['feeAmount']),
    };
}

export function BankAccountInquiryResponseAdditionalInfoToJSON(json: any): BankAccountInquiryResponseAdditionalInfo {
    return BankAccountInquiryResponseAdditionalInfoToJSONTyped(json, false);
}

export function BankAccountInquiryResponseAdditionalInfoToJSONTyped(value?: BankAccountInquiryResponseAdditionalInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'feeAmount': MoneyToJSON(value['feeAmount']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateBankAccountInquiryResponseAdditionalInfo(value: BankAccountInquiryResponseAdditionalInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateMoney(value.feeAmount));

    return validationErrorContexts;
}
