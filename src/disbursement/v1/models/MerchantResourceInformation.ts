/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface MerchantResourceInformation
 */
export interface MerchantResourceInformation {
    /**
     * Type of merchant resource
     * @type {string}
     * @memberof MerchantResourceInformation
     */
    resourceType: MerchantResourceInformationResourceTypeEnum;
    /**
     * JSON string containing amount and currency information
     * @type {string}
     * @memberof MerchantResourceInformation
     */
    value: string;
}


/**
 * @export
 */
export const MerchantResourceInformationResourceTypeEnum = {
    MerchantDepositBalance: 'MERCHANT_DEPOSIT_BALANCE',
    MerchantAvailableBalance: 'MERCHANT_AVAILABLE_BALANCE',
    MerchantTotalBalance: 'MERCHANT_TOTAL_BALANCE'
} as const;
export type MerchantResourceInformationResourceTypeEnum = typeof MerchantResourceInformationResourceTypeEnum[keyof typeof MerchantResourceInformationResourceTypeEnum];


/**
 * Check if a given object implements the MerchantResourceInformation interface.
 */
export function instanceOfMerchantResourceInformation(value: object): value is MerchantResourceInformation {
    if (!('resourceType' in value) || value['resourceType'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function MerchantResourceInformationFromJSON(json: any): MerchantResourceInformation {
    return MerchantResourceInformationFromJSONTyped(json, false);
}

export function MerchantResourceInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): MerchantResourceInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'resourceType': json['resourceType'],
        'value': json['value'],
    };
}

export function MerchantResourceInformationToJSON(json: any): MerchantResourceInformation {
    return MerchantResourceInformationToJSONTyped(json, false);
}

export function MerchantResourceInformationToJSONTyped(value?: MerchantResourceInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resourceType': value['resourceType'],
        'value': value['value'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateMerchantResourceInformation(value: MerchantResourceInformation): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    return validationErrorContexts;
}
