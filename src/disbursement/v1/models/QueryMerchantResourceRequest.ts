/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { QueryMerchantResourceRequestRequest } from './QueryMerchantResourceRequestRequest';
import {
    validateQueryMerchantResourceRequestRequest,
    QueryMerchantResourceRequestRequestFromJSON,
    QueryMerchantResourceRequestRequestFromJSONTyped,
    QueryMerchantResourceRequestRequestToJSON,
    QueryMerchantResourceRequestRequestToJSONTyped,
} from './QueryMerchantResourceRequestRequest';

/**
 * 
 * @export
 * @interface QueryMerchantResourceRequest
 */
export interface QueryMerchantResourceRequest {
    /**
     * 
     * @type {QueryMerchantResourceRequestRequest}
     * @memberof QueryMerchantResourceRequest
     */
    request: QueryMerchantResourceRequestRequest;
    /**
     * Signature string for request validation
     * @type {string}
     * @memberof QueryMerchantResourceRequest
     */
    signature: string;
}

/**
 * Check if a given object implements the QueryMerchantResourceRequest interface.
 */
export function instanceOfQueryMerchantResourceRequest(value: object): value is QueryMerchantResourceRequest {
    if (!('request' in value) || value['request'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    return true;
}

export function QueryMerchantResourceRequestFromJSON(json: any): QueryMerchantResourceRequest {
    return QueryMerchantResourceRequestFromJSONTyped(json, false);
}

export function QueryMerchantResourceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryMerchantResourceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'request': QueryMerchantResourceRequestRequestFromJSON(json['request']),
        'signature': json['signature'],
    };
}

export function QueryMerchantResourceRequestToJSON(json: any): QueryMerchantResourceRequest {
    return QueryMerchantResourceRequestToJSONTyped(json, false);
}

export function QueryMerchantResourceRequestToJSONTyped(value?: QueryMerchantResourceRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'request': QueryMerchantResourceRequestRequestToJSON(value['request']),
        'signature': value['signature'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateQueryMerchantResourceRequest(value: QueryMerchantResourceRequest): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateQueryMerchantResourceRequestRequest(value.request));

    return validationErrorContexts;
}
