/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../runtime';
import { mapValues, ValidationUtil } from '../../runtime';
/**
 * 
 * @export
 * @interface FinishNotifyResponse
 */
export interface FinishNotifyResponse {
    /**
     * Response code. Refer to https://dashboard.dana.id/api-docs/read/123#HTML-API-FinishNotify-ResponseCodeandMessage
     * @type {string}
     * @memberof FinishNotifyResponse
     */
    responseCode: string;
    /**
     * Response message. Refer to https://dashboard.dana.id/api-docs/read/123#HTML-API-FinishNotify-ResponseCodeandMessage
     * @type {string}
     * @memberof FinishNotifyResponse
     */
    responseMessage: string;
}

/**
 * Check if a given object implements the FinishNotifyResponse interface.
 */
export function instanceOfFinishNotifyResponse(value: object): value is FinishNotifyResponse {
    if (!('responseCode' in value) || value['responseCode'] === undefined) return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined) return false;
    return true;
}

export function FinishNotifyResponseFromJSON(json: any): FinishNotifyResponse {
    return FinishNotifyResponseFromJSONTyped(json, false);
}

export function FinishNotifyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinishNotifyResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
    };
}

export function FinishNotifyResponseToJSON(json: any): FinishNotifyResponse {
    return FinishNotifyResponseToJSONTyped(json, false);
}

export function FinishNotifyResponseToJSONTyped(value?: FinishNotifyResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
}

export function validateFinishNotifyResponse(value: FinishNotifyResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));

    return validationErrorContexts;
}
