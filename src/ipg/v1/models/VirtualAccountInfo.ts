/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface VirtualAccountInfo
 */
export interface VirtualAccountInfo {
    /**
     * Virtual account code (required if payMethod is VIRTUAL_ACCOUNT)
     * @type {string}
     * @memberof VirtualAccountInfo
     */
    virtualAccountCode: string;
    /**
     * Expiry time of virtual account in format YYYY-MM-DDTHH:mm:ss+07:00 (Jakarta time)
     * @type {string}
     * @memberof VirtualAccountInfo
     */
    virtualAccountExpiryTime: string;
    /**
     * Signature of virtual account
     * @type {string}
     * @memberof VirtualAccountInfo
     */
    signature: string;
}

/**
 * Check if a given object implements the VirtualAccountInfo interface.
 */
export function instanceOfVirtualAccountInfo(value: object): value is VirtualAccountInfo {
    if (!('virtualAccountCode' in value) || value['virtualAccountCode'] === undefined) return false;
    if (!('virtualAccountExpiryTime' in value) || value['virtualAccountExpiryTime'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    return true;
}

export function VirtualAccountInfoFromJSON(json: any): VirtualAccountInfo {
    return VirtualAccountInfoFromJSONTyped(json, false);
}

export function VirtualAccountInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VirtualAccountInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'virtualAccountCode': json['virtualAccountCode'],
        'virtualAccountExpiryTime': json['virtualAccountExpiryTime'],
        'signature': json['signature'],
    };
}

export function VirtualAccountInfoToJSON(json: any): VirtualAccountInfo {
    return VirtualAccountInfoToJSONTyped(json, false);
}

export function VirtualAccountInfoToJSONTyped(value?: VirtualAccountInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'virtualAccountCode': value['virtualAccountCode'],
        'virtualAccountExpiryTime': value['virtualAccountExpiryTime'],
        'signature': value['signature'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    virtualAccountCode: {
        maxLength: 64,
    },
    virtualAccountExpiryTime: {
        maxLength: 25,
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
}

export function validateVirtualAccountInfo(value: VirtualAccountInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('virtualAccountCode', value.virtualAccountCode, propertyValidationAttributesMap['virtualAccountCode']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('virtualAccountExpiryTime', value.virtualAccountExpiryTime, propertyValidationAttributesMap['virtualAccountExpiryTime']));

    return validationErrorContexts;
}
