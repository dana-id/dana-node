/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface ApplyOTTResponseUserResourcesInner
 */
export interface ApplyOTTResponseUserResourcesInner {
    /**
     * Information of resource type. List of resource retrieved - OTT
     * @type {string}
     * @memberof ApplyOTTResponseUserResourcesInner
     */
    resourceType?: string;
    /**
     * Value of OTT
     * @type {string}
     * @memberof ApplyOTTResponseUserResourcesInner
     */
    value?: string;
}

/**
 * Check if a given object implements the ApplyOTTResponseUserResourcesInner interface.
 */
export function instanceOfApplyOTTResponseUserResourcesInner(value: object): value is ApplyOTTResponseUserResourcesInner {
    return true;
}

export function ApplyOTTResponseUserResourcesInnerFromJSON(json: any): ApplyOTTResponseUserResourcesInner {
    return ApplyOTTResponseUserResourcesInnerFromJSONTyped(json, false);
}

export function ApplyOTTResponseUserResourcesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplyOTTResponseUserResourcesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'resourceType': json['resourceType'] == null ? undefined : json['resourceType'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function ApplyOTTResponseUserResourcesInnerToJSON(json: any): ApplyOTTResponseUserResourcesInner {
    return ApplyOTTResponseUserResourcesInnerToJSONTyped(json, false);
}

export function ApplyOTTResponseUserResourcesInnerToJSONTyped(value?: ApplyOTTResponseUserResourcesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resourceType': value['resourceType'],
        'value': value['value'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    resourceType: {
        maxLength: 32,
    },
    value: {
        maxLength: 64,
    },
}

export function validateApplyOTTResponseUserResourcesInner(value: ApplyOTTResponseUserResourcesInner): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('resourceType', value.resourceType, propertyValidationAttributesMap['resourceType']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('value', value.value, propertyValidationAttributesMap['value']));

    return validationErrorContexts;
}
