/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { ApplyTokenResponseAdditionalInfoUserInfo } from './ApplyTokenResponseAdditionalInfoUserInfo';
import {
    validateApplyTokenResponseAdditionalInfoUserInfo,
    ApplyTokenResponseAdditionalInfoUserInfoFromJSON,
    ApplyTokenResponseAdditionalInfoUserInfoFromJSONTyped,
    ApplyTokenResponseAdditionalInfoUserInfoToJSON,
    ApplyTokenResponseAdditionalInfoUserInfoToJSONTyped,
} from './ApplyTokenResponseAdditionalInfoUserInfo';

/**
 * 
 * @export
 * @interface ApplyTokenResponseAdditionalInfo
 */
export interface ApplyTokenResponseAdditionalInfo {
    /**
     * 
     * @type {ApplyTokenResponseAdditionalInfoUserInfo}
     * @memberof ApplyTokenResponseAdditionalInfo
     */
    userInfo?: ApplyTokenResponseAdditionalInfoUserInfo;
}

/**
 * Check if a given object implements the ApplyTokenResponseAdditionalInfo interface.
 */
export function instanceOfApplyTokenResponseAdditionalInfo(value: object): value is ApplyTokenResponseAdditionalInfo {
    return true;
}

export function ApplyTokenResponseAdditionalInfoFromJSON(json: any): ApplyTokenResponseAdditionalInfo {
    return ApplyTokenResponseAdditionalInfoFromJSONTyped(json, false);
}

export function ApplyTokenResponseAdditionalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplyTokenResponseAdditionalInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'userInfo': json['userInfo'] == null ? undefined : ApplyTokenResponseAdditionalInfoUserInfoFromJSON(json['userInfo']),
    };
}

export function ApplyTokenResponseAdditionalInfoToJSON(json: any): ApplyTokenResponseAdditionalInfo {
    return ApplyTokenResponseAdditionalInfoToJSONTyped(json, false);
}

export function ApplyTokenResponseAdditionalInfoToJSONTyped(value?: ApplyTokenResponseAdditionalInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userInfo': ApplyTokenResponseAdditionalInfoUserInfoToJSON(value['userInfo']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateApplyTokenResponseAdditionalInfo(value: ApplyTokenResponseAdditionalInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateApplyTokenResponseAdditionalInfoUserInfo(value.userInfo));

    return validationErrorContexts;
}
