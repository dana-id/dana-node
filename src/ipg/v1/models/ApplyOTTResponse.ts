/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { ApplyOTTResponseUserResourcesInner } from './ApplyOTTResponseUserResourcesInner';
import {
    validateApplyOTTResponseUserResourcesInner,
    ApplyOTTResponseUserResourcesInnerFromJSON,
    ApplyOTTResponseUserResourcesInnerFromJSONTyped,
    ApplyOTTResponseUserResourcesInnerToJSON,
    ApplyOTTResponseUserResourcesInnerToJSONTyped,
} from './ApplyOTTResponseUserResourcesInner';

/**
 * 
 * @export
 * @interface ApplyOTTResponse
 */
export interface ApplyOTTResponse {
    /**
     * Response code. https://dashboard.dana.id/api-docs/read/109#HTML-API-ApplyOTT-ResponseCodeandMessage
     * @type {string}
     * @memberof ApplyOTTResponse
     */
    responseCode: string;
    /**
     * Response message. https://dashboard.dana.id/api-docs/read/109#HTML-API-ApplyOTT-ResponseCodeandMessage
     * @type {string}
     * @memberof ApplyOTTResponse
     */
    responseMessage: string;
    /**
     * User resources
     * @type {Array<ApplyOTTResponseUserResourcesInner>}
     * @memberof ApplyOTTResponse
     */
    userResources: Array<ApplyOTTResponseUserResourcesInner>;
    /**
     * Additional information
     * @type {object}
     * @memberof ApplyOTTResponse
     */
    additionalInfo?: object;
}

/**
 * Check if a given object implements the ApplyOTTResponse interface.
 */
export function instanceOfApplyOTTResponse(value: object): value is ApplyOTTResponse {
    if (!('responseCode' in value) || value['responseCode'] === undefined) return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined) return false;
    if (!('userResources' in value) || value['userResources'] === undefined) return false;
    return true;
}

export function ApplyOTTResponseFromJSON(json: any): ApplyOTTResponse {
    return ApplyOTTResponseFromJSONTyped(json, false);
}

export function ApplyOTTResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplyOTTResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'userResources': ((json['userResources'] as Array<any>).map(ApplyOTTResponseUserResourcesInnerFromJSON)),
        'additionalInfo': json['additionalInfo'] == null ? undefined : json['additionalInfo'],
    };
}

export function ApplyOTTResponseToJSON(json: any): ApplyOTTResponse {
    return ApplyOTTResponseToJSONTyped(json, false);
}

export function ApplyOTTResponseToJSONTyped(value?: ApplyOTTResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'userResources': ((value['userResources'] as Array<any>).map(ApplyOTTResponseUserResourcesInnerToJSON)),
        'additionalInfo': value['additionalInfo'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
}

export function validateApplyOTTResponse(value: ApplyOTTResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));

    return validationErrorContexts;
}
