/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface MobileNoInfo
 */
export interface MobileNoInfo {
    /**
     * Mobile number. Accepted formats: 0xxxxxxxx, 62xxxxxxx, 62-xxxxxxx, +62xxxxxx
     * @type {string}
     * @memberof MobileNoInfo
     */
    mobileNo?: string;
    /**
     * Mobile ID
     * @type {string}
     * @memberof MobileNoInfo
     */
    mobileId?: string;
    /**
     * Verification status
     * @type {string}
     * @memberof MobileNoInfo
     */
    verified?: MobileNoInfoVerifiedEnum;
}


/**
 * @export
 */
export const MobileNoInfoVerifiedEnum = {
    True: 'true',
    False: 'false'
} as const;
export type MobileNoInfoVerifiedEnum = typeof MobileNoInfoVerifiedEnum[keyof typeof MobileNoInfoVerifiedEnum] | '';


/**
 * Check if a given object implements the MobileNoInfo interface.
 */
export function instanceOfMobileNoInfo(value: object): value is MobileNoInfo {
    return true;
}

export function MobileNoInfoFromJSON(json: any): MobileNoInfo {
    return MobileNoInfoFromJSONTyped(json, false);
}

export function MobileNoInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MobileNoInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'mobileNo': json['mobileNo'] == null ? undefined : json['mobileNo'],
        'mobileId': json['mobileId'] == null ? undefined : json['mobileId'],
        'verified': json['verified'] == null ? undefined : json['verified'],
    };
}

export function MobileNoInfoToJSON(json: any): MobileNoInfo {
    return MobileNoInfoToJSONTyped(json, false);
}

export function MobileNoInfoToJSONTyped(value?: MobileNoInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mobileNo': value['mobileNo'],
        'mobileId': value['mobileId'],
        'verified': value['verified'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateMobileNoInfo(value: MobileNoInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    return validationErrorContexts;
}
