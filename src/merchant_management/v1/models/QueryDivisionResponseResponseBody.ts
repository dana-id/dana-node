/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { DivisionResourceInfo } from './DivisionResourceInfo';
import {
    validateDivisionResourceInfo,
    DivisionResourceInfoFromJSON,
    DivisionResourceInfoFromJSONTyped,
    DivisionResourceInfoToJSON,
    DivisionResourceInfoToJSONTyped,
} from './DivisionResourceInfo';
import type { ResultInfo } from './ResultInfo';
import {
    validateResultInfo,
    ResultInfoFromJSON,
    ResultInfoFromJSONTyped,
    ResultInfoToJSON,
    ResultInfoToJSONTyped,
} from './ResultInfo';

/**
 * 
 * @export
 * @interface QueryDivisionResponseResponseBody
 */
export interface QueryDivisionResponseResponseBody {
    /**
     * 
     * @type {ResultInfo}
     * @memberof QueryDivisionResponseResponseBody
     */
    resultInfo: ResultInfo;
    /**
     * 
     * @type {DivisionResourceInfo}
     * @memberof QueryDivisionResponseResponseBody
     */
    divisionResourceInfo?: DivisionResourceInfo;
}

/**
 * Check if a given object implements the QueryDivisionResponseResponseBody interface.
 */
export function instanceOfQueryDivisionResponseResponseBody(value: object): value is QueryDivisionResponseResponseBody {
    if (!('resultInfo' in value) || value['resultInfo'] === undefined) return false;
    return true;
}

export function QueryDivisionResponseResponseBodyFromJSON(json: any): QueryDivisionResponseResponseBody {
    return QueryDivisionResponseResponseBodyFromJSONTyped(json, false);
}

export function QueryDivisionResponseResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryDivisionResponseResponseBody {
    if (json == null) {
        return json;
    }
    return {
        
        'resultInfo': ResultInfoFromJSON(json['resultInfo']),
        'divisionResourceInfo': json['divisionResourceInfo'] == null ? undefined : DivisionResourceInfoFromJSON(json['divisionResourceInfo']),
    };
}

export function QueryDivisionResponseResponseBodyToJSON(json: any): QueryDivisionResponseResponseBody {
    return QueryDivisionResponseResponseBodyToJSONTyped(json, false);
}

export function QueryDivisionResponseResponseBodyToJSONTyped(value?: QueryDivisionResponseResponseBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resultInfo': ResultInfoToJSON(value['resultInfo']),
        'divisionResourceInfo': DivisionResourceInfoToJSON(value['divisionResourceInfo']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateQueryDivisionResponseResponseBody(value: QueryDivisionResponseResponseBody): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateResultInfo(value.resultInfo));

    validationErrorContexts.push(...validateDivisionResourceInfo(value.divisionResourceInfo));

    return validationErrorContexts;
}
