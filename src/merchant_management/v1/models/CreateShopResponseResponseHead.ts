/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface CreateShopResponseResponseHead
 */
export interface CreateShopResponseResponseHead {
    /**
     * API version
     * @type {string}
     * @memberof CreateShopResponseResponseHead
     */
    version?: string;
    /**
     * API interface
     * @type {string}
     * @memberof CreateShopResponseResponseHead
     */
    _function?: CreateShopResponseResponseHeadFunctionEnum;
    /**
     * Client ID provided by DANA, used to identify partner and application system
     * @type {string}
     * @memberof CreateShopResponseResponseHead
     */
    clientId?: string;
    /**
     * DateTime with timezone, which follows the ISO-8601 standard. Refer to RFC 3339 Section 5.6
     * @type {string}
     * @memberof CreateShopResponseResponseHead
     */
    respTime?: string;
    /**
     * Request message ID
     * @type {string}
     * @memberof CreateShopResponseResponseHead
     */
    reqMsgId?: string;
}


/**
 * @export
 */
export const CreateShopResponseResponseHeadFunctionEnum = {
    DanaMerchantShopCreateShop: 'dana.merchant.shop.createShop'
} as const;
export type CreateShopResponseResponseHeadFunctionEnum = typeof CreateShopResponseResponseHeadFunctionEnum[keyof typeof CreateShopResponseResponseHeadFunctionEnum] | '';


/**
 * Check if a given object implements the CreateShopResponseResponseHead interface.
 */
export function instanceOfCreateShopResponseResponseHead(value: object): value is CreateShopResponseResponseHead {
    return true;
}

export function CreateShopResponseResponseHeadFromJSON(json: any): CreateShopResponseResponseHead {
    return CreateShopResponseResponseHeadFromJSONTyped(json, false);
}

export function CreateShopResponseResponseHeadFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateShopResponseResponseHead {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'] == null ? undefined : json['version'],
        '_function': json['function'] == null ? undefined : json['function'],
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'respTime': json['respTime'] == null ? undefined : json['respTime'],
        'reqMsgId': json['reqMsgId'] == null ? undefined : json['reqMsgId'],
    };
}

export function CreateShopResponseResponseHeadToJSON(json: any): CreateShopResponseResponseHead {
    return CreateShopResponseResponseHeadToJSONTyped(json, false);
}

export function CreateShopResponseResponseHeadToJSONTyped(value?: CreateShopResponseResponseHead | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'function': value['_function'],
        'clientId': value['clientId'],
        'respTime': value['respTime'],
        'reqMsgId': value['reqMsgId'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    version: {
        maxLength: 8,
    },
    _function: {
        maxLength: 128,
    },
    clientId: {
        maxLength: 32,
    },
    reqMsgId: {
        maxLength: 64,
    },
}

export function validateCreateShopResponseResponseHead(value: CreateShopResponseResponseHead): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('version', value.version, propertyValidationAttributesMap['version']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('_function', value._function, propertyValidationAttributesMap['_function']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('clientId', value.clientId, propertyValidationAttributesMap['clientId']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('reqMsgId', value.reqMsgId, propertyValidationAttributesMap['reqMsgId']));

    return validationErrorContexts;
}
