/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface PicInfo
 */
export interface PicInfo {
    /**
     * PIC name
     * @type {string}
     * @memberof PicInfo
     */
    picName?: string;
    /**
     * PIC position
     * @type {string}
     * @memberof PicInfo
     */
    picPosition?: string;
}

/**
 * Check if a given object implements the PicInfo interface.
 */
export function instanceOfPicInfo(value: object): value is PicInfo {
    return true;
}

export function PicInfoFromJSON(json: any): PicInfo {
    return PicInfoFromJSONTyped(json, false);
}

export function PicInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PicInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'picName': json['picName'] == null ? undefined : json['picName'],
        'picPosition': json['picPosition'] == null ? undefined : json['picPosition'],
    };
}

export function PicInfoToJSON(json: any): PicInfo {
    return PicInfoToJSONTyped(json, false);
}

export function PicInfoToJSONTyped(value?: PicInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'picName': value['picName'],
        'picPosition': value['picPosition'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validatePicInfo(value: PicInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    return validationErrorContexts;
}
