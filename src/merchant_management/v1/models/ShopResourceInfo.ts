/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { AddressInfo } from './AddressInfo';
import {
    validateAddressInfo,
    AddressInfoFromJSON,
    AddressInfoFromJSONTyped,
    AddressInfoToJSON,
    AddressInfoToJSONTyped,
} from './AddressInfo';

/**
 * 
 * @export
 * @interface ShopResourceInfo
 */
export interface ShopResourceInfo {
    /**
     * Merchant identifier
     * @type {string}
     * @memberof ShopResourceInfo
     */
    merchantId?: string;
    /**
     * Parent division identifier
     * @type {string}
     * @memberof ShopResourceInfo
     */
    parentDivisionId?: string;
    /**
     * Parent role type
     * @type {string}
     * @memberof ShopResourceInfo
     */
    parentRoleType?: string;
    /**
     * Shop name
     * @type {string}
     * @memberof ShopResourceInfo
     */
    mainName?: string;
    /**
     * Size type
     * @type {string}
     * @memberof ShopResourceInfo
     */
    sizeType?: string;
    /**
     * 
     * @type {AddressInfo}
     * @memberof ShopResourceInfo
     */
    shopAddress?: AddressInfo;
    /**
     * External shop identifier
     * @type {string}
     * @memberof ShopResourceInfo
     */
    externalShopId?: string;
    /**
     * Logo URL map with base64 encoded images
     * @type {{ [key: string]: string; }}
     * @memberof ShopResourceInfo
     */
    logoUrlMap?: { [key: string]: string; };
    /**
     * Extended information
     * @type {object}
     * @memberof ShopResourceInfo
     */
    extInfo?: object;
    /**
     * Longitude
     * @type {string}
     * @memberof ShopResourceInfo
     */
    ln?: string;
    /**
     * Latitude
     * @type {string}
     * @memberof ShopResourceInfo
     */
    lat?: string;
    /**
     * Network merchant identifier
     * @type {string}
     * @memberof ShopResourceInfo
     */
    nmid?: string;
}

/**
 * Check if a given object implements the ShopResourceInfo interface.
 */
export function instanceOfShopResourceInfo(value: object): value is ShopResourceInfo {
    return true;
}

export function ShopResourceInfoFromJSON(json: any): ShopResourceInfo {
    return ShopResourceInfoFromJSONTyped(json, false);
}

export function ShopResourceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopResourceInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'merchantId': json['merchantId'] == null ? undefined : json['merchantId'],
        'parentDivisionId': json['parentDivisionId'] == null ? undefined : json['parentDivisionId'],
        'parentRoleType': json['parentRoleType'] == null ? undefined : json['parentRoleType'],
        'mainName': json['mainName'] == null ? undefined : json['mainName'],
        'sizeType': json['sizeType'] == null ? undefined : json['sizeType'],
        'shopAddress': json['shopAddress'] == null ? undefined : AddressInfoFromJSON(json['shopAddress']),
        'externalShopId': json['externalShopId'] == null ? undefined : json['externalShopId'],
        'logoUrlMap': json['logoUrlMap'] == null ? undefined : json['logoUrlMap'],
        'extInfo': json['extInfo'] == null ? undefined : json['extInfo'],
        'ln': json['ln'] == null ? undefined : json['ln'],
        'lat': json['lat'] == null ? undefined : json['lat'],
        'nmid': json['nmid'] == null ? undefined : json['nmid'],
    };
}

export function ShopResourceInfoToJSON(json: any): ShopResourceInfo {
    return ShopResourceInfoToJSONTyped(json, false);
}

export function ShopResourceInfoToJSONTyped(value?: ShopResourceInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'merchantId': value['merchantId'],
        'parentDivisionId': value['parentDivisionId'],
        'parentRoleType': value['parentRoleType'],
        'mainName': value['mainName'],
        'sizeType': value['sizeType'],
        'shopAddress': AddressInfoToJSON(value['shopAddress']),
        'externalShopId': value['externalShopId'],
        'logoUrlMap': value['logoUrlMap'],
        'extInfo': value['extInfo'],
        'ln': value['ln'],
        'lat': value['lat'],
        'nmid': value['nmid'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateShopResourceInfo(value: ShopResourceInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateAddressInfo(value.shopAddress));

    return validationErrorContexts;
}
