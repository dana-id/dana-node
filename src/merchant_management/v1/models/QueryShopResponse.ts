/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { QueryShopResponseResponse } from './QueryShopResponseResponse';
import {
    validateQueryShopResponseResponse,
    QueryShopResponseResponseFromJSON,
    QueryShopResponseResponseFromJSONTyped,
    QueryShopResponseResponseToJSON,
    QueryShopResponseResponseToJSONTyped,
} from './QueryShopResponseResponse';

/**
 * 
 * @export
 * @interface QueryShopResponse
 */
export interface QueryShopResponse {
    /**
     * 
     * @type {QueryShopResponseResponse}
     * @memberof QueryShopResponse
     */
    response: QueryShopResponseResponse;
    /**
     * Signature
     * @type {string}
     * @memberof QueryShopResponse
     */
    signature?: string;
}

/**
 * Check if a given object implements the QueryShopResponse interface.
 */
export function instanceOfQueryShopResponse(value: object): value is QueryShopResponse {
    if (!('response' in value) || value['response'] === undefined) return false;
    return true;
}

export function QueryShopResponseFromJSON(json: any): QueryShopResponse {
    return QueryShopResponseFromJSONTyped(json, false);
}

export function QueryShopResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryShopResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'response': QueryShopResponseResponseFromJSON(json['response']),
        'signature': json['signature'] == null ? undefined : json['signature'],
    };
}

export function QueryShopResponseToJSON(json: any): QueryShopResponse {
    return QueryShopResponseToJSONTyped(json, false);
}

export function QueryShopResponseToJSONTyped(value?: QueryShopResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'response': QueryShopResponseResponseToJSON(value['response']),
        'signature': value['signature'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateQueryShopResponse(value: QueryShopResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateQueryShopResponseResponse(value.response));

    return validationErrorContexts;
}
