/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { QueryShopResponseResponseBody } from './QueryShopResponseResponseBody';
import {
    validateQueryShopResponseResponseBody,
    QueryShopResponseResponseBodyFromJSON,
    QueryShopResponseResponseBodyFromJSONTyped,
    QueryShopResponseResponseBodyToJSON,
    QueryShopResponseResponseBodyToJSONTyped,
} from './QueryShopResponseResponseBody';
import type { QueryShopResponseResponseHead } from './QueryShopResponseResponseHead';
import {
    validateQueryShopResponseResponseHead,
    QueryShopResponseResponseHeadFromJSON,
    QueryShopResponseResponseHeadFromJSONTyped,
    QueryShopResponseResponseHeadToJSON,
    QueryShopResponseResponseHeadToJSONTyped,
} from './QueryShopResponseResponseHead';

/**
 * 
 * @export
 * @interface QueryShopResponseResponse
 */
export interface QueryShopResponseResponse {
    /**
     * 
     * @type {QueryShopResponseResponseHead}
     * @memberof QueryShopResponseResponse
     */
    head: QueryShopResponseResponseHead;
    /**
     * 
     * @type {QueryShopResponseResponseBody}
     * @memberof QueryShopResponseResponse
     */
    body: QueryShopResponseResponseBody;
}

/**
 * Check if a given object implements the QueryShopResponseResponse interface.
 */
export function instanceOfQueryShopResponseResponse(value: object): value is QueryShopResponseResponse {
    if (!('head' in value) || value['head'] === undefined) return false;
    if (!('body' in value) || value['body'] === undefined) return false;
    return true;
}

export function QueryShopResponseResponseFromJSON(json: any): QueryShopResponseResponse {
    return QueryShopResponseResponseFromJSONTyped(json, false);
}

export function QueryShopResponseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryShopResponseResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'head': QueryShopResponseResponseHeadFromJSON(json['head']),
        'body': QueryShopResponseResponseBodyFromJSON(json['body']),
    };
}

export function QueryShopResponseResponseToJSON(json: any): QueryShopResponseResponse {
    return QueryShopResponseResponseToJSONTyped(json, false);
}

export function QueryShopResponseResponseToJSONTyped(value?: QueryShopResponseResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'head': QueryShopResponseResponseHeadToJSON(value['head']),
        'body': QueryShopResponseResponseBodyToJSON(value['body']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateQueryShopResponseResponse(value: QueryShopResponseResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateQueryShopResponseResponseHead(value.head));

    validationErrorContexts.push(...validateQueryShopResponseResponseBody(value.body));

    return validationErrorContexts;
}
