/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { CreateDivisionResponseResponse } from './CreateDivisionResponseResponse';
import {
    validateCreateDivisionResponseResponse,
    CreateDivisionResponseResponseFromJSON,
    CreateDivisionResponseResponseFromJSONTyped,
    CreateDivisionResponseResponseToJSON,
    CreateDivisionResponseResponseToJSONTyped,
} from './CreateDivisionResponseResponse';

/**
 * 
 * @export
 * @interface CreateDivisionResponse
 */
export interface CreateDivisionResponse {
    /**
     * 
     * @type {CreateDivisionResponseResponse}
     * @memberof CreateDivisionResponse
     */
    response: CreateDivisionResponseResponse;
    /**
     * Signature
     * @type {string}
     * @memberof CreateDivisionResponse
     */
    signature?: string;
}

/**
 * Check if a given object implements the CreateDivisionResponse interface.
 */
export function instanceOfCreateDivisionResponse(value: object): value is CreateDivisionResponse {
    if (!('response' in value) || value['response'] === undefined) return false;
    return true;
}

export function CreateDivisionResponseFromJSON(json: any): CreateDivisionResponse {
    return CreateDivisionResponseFromJSONTyped(json, false);
}

export function CreateDivisionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDivisionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'response': CreateDivisionResponseResponseFromJSON(json['response']),
        'signature': json['signature'] == null ? undefined : json['signature'],
    };
}

export function CreateDivisionResponseToJSON(json: any): CreateDivisionResponse {
    return CreateDivisionResponseToJSONTyped(json, false);
}

export function CreateDivisionResponseToJSONTyped(value?: CreateDivisionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'response': CreateDivisionResponseResponseToJSON(value['response']),
        'signature': value['signature'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateCreateDivisionResponse(value: CreateDivisionResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateCreateDivisionResponseResponse(value.response));

    return validationErrorContexts;
}
