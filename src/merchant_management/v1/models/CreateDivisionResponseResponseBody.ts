/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { ResultInfo } from './ResultInfo';
import {
    validateResultInfo,
    ResultInfoFromJSON,
    ResultInfoFromJSONTyped,
    ResultInfoToJSON,
    ResultInfoToJSONTyped,
} from './ResultInfo';

/**
 * 
 * @export
 * @interface CreateDivisionResponseResponseBody
 */
export interface CreateDivisionResponseResponseBody {
    /**
     * 
     * @type {ResultInfo}
     * @memberof CreateDivisionResponseResponseBody
     */
    resultInfo: ResultInfo;
    /**
     * Division identifier. Present when successfully processed
     * @type {string}
     * @memberof CreateDivisionResponseResponseBody
     */
    divisionId?: string;
}

/**
 * Check if a given object implements the CreateDivisionResponseResponseBody interface.
 */
export function instanceOfCreateDivisionResponseResponseBody(value: object): value is CreateDivisionResponseResponseBody {
    if (!('resultInfo' in value) || value['resultInfo'] === undefined) return false;
    return true;
}

export function CreateDivisionResponseResponseBodyFromJSON(json: any): CreateDivisionResponseResponseBody {
    return CreateDivisionResponseResponseBodyFromJSONTyped(json, false);
}

export function CreateDivisionResponseResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDivisionResponseResponseBody {
    if (json == null) {
        return json;
    }
    return {
        
        'resultInfo': ResultInfoFromJSON(json['resultInfo']),
        'divisionId': json['divisionId'] == null ? undefined : json['divisionId'],
    };
}

export function CreateDivisionResponseResponseBodyToJSON(json: any): CreateDivisionResponseResponseBody {
    return CreateDivisionResponseResponseBodyToJSONTyped(json, false);
}

export function CreateDivisionResponseResponseBodyToJSONTyped(value?: CreateDivisionResponseResponseBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resultInfo': ResultInfoToJSON(value['resultInfo']),
        'divisionId': value['divisionId'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    divisionId: {
        maxLength: 21,
    },
}

export function validateCreateDivisionResponseResponseBody(value: CreateDivisionResponseResponseBody): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateResultInfo(value.resultInfo));

    validationErrorContexts.push(...ValidationUtil.validateProperty('divisionId', value.divisionId, propertyValidationAttributesMap['divisionId']));

    return validationErrorContexts;
}
