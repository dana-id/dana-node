/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { CreateShopResponseResponse } from './CreateShopResponseResponse';
import {
    validateCreateShopResponseResponse,
    CreateShopResponseResponseFromJSON,
    CreateShopResponseResponseFromJSONTyped,
    CreateShopResponseResponseToJSON,
    CreateShopResponseResponseToJSONTyped,
} from './CreateShopResponseResponse';

/**
 * 
 * @export
 * @interface CreateShopResponse
 */
export interface CreateShopResponse {
    /**
     * 
     * @type {CreateShopResponseResponse}
     * @memberof CreateShopResponse
     */
    response: CreateShopResponseResponse;
}

/**
 * Check if a given object implements the CreateShopResponse interface.
 */
export function instanceOfCreateShopResponse(value: object): value is CreateShopResponse {
    if (!('response' in value) || value['response'] === undefined) return false;
    return true;
}

export function CreateShopResponseFromJSON(json: any): CreateShopResponse {
    return CreateShopResponseFromJSONTyped(json, false);
}

export function CreateShopResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateShopResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'response': CreateShopResponseResponseFromJSON(json['response']),
    };
}

export function CreateShopResponseToJSON(json: any): CreateShopResponse {
    return CreateShopResponseToJSONTyped(json, false);
}

export function CreateShopResponseToJSONTyped(value?: CreateShopResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'response': CreateShopResponseResponseToJSON(value['response']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateCreateShopResponse(value: CreateShopResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateCreateShopResponseResponse(value.response));

    return validationErrorContexts;
}
