/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { PromoInfo } from './PromoInfo';
import {
    validatePromoInfo,
    PromoInfoFromJSON,
    PromoInfoFromJSONTyped,
    PromoInfoToJSON,
    PromoInfoToJSONTyped,
} from './PromoInfo';

/**
 * 
 * @export
 * @interface PayOptionAdditionalInfo
 */
export interface PayOptionAdditionalInfo {
    /**
     * User's phone number
     * @type {string}
     * @memberof PayOptionAdditionalInfo
     */
    phoneNumber?: string;
    /**
     * Payment code that used for payment with virtual account
     * @type {string}
     * @memberof PayOptionAdditionalInfo
     */
    paymentCode?: string;
    /**
     * 
     * @type {Array<PromoInfo>}
     * @memberof PayOptionAdditionalInfo
     */
    promoInfos?: Array<PromoInfo>;
}

/**
 * Check if a given object implements the PayOptionAdditionalInfo interface.
 */
export function instanceOfPayOptionAdditionalInfo(value: object): value is PayOptionAdditionalInfo {
    return true;
}

export function PayOptionAdditionalInfoFromJSON(json: any): PayOptionAdditionalInfo {
    return PayOptionAdditionalInfoFromJSONTyped(json, false);
}

export function PayOptionAdditionalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayOptionAdditionalInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'paymentCode': json['paymentCode'] == null ? undefined : json['paymentCode'],
        'promoInfos': json['promoInfos'] == null ? undefined : ((json['promoInfos'] as Array<any>).map(PromoInfoFromJSON)),
    };
}

export function PayOptionAdditionalInfoToJSON(json: any): PayOptionAdditionalInfo {
    return PayOptionAdditionalInfoToJSONTyped(json, false);
}

export function PayOptionAdditionalInfoToJSONTyped(value?: PayOptionAdditionalInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'phoneNumber': value['phoneNumber'],
        'paymentCode': value['paymentCode'],
        'promoInfos': value['promoInfos'] == null ? undefined : ((value['promoInfos'] as Array<any>).map(PromoInfoToJSON)),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    phoneNumber: {
        maxLength: 15,
    },
}

export function validatePayOptionAdditionalInfo(value: PayOptionAdditionalInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('phoneNumber', value.phoneNumber, propertyValidationAttributesMap['phoneNumber']));

    return validationErrorContexts;
}
