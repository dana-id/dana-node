/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { Buyer } from './Buyer';
import {
    validateBuyer,
    BuyerFromJSON,
    BuyerFromJSONTyped,
    BuyerToJSON,
    BuyerToJSONTyped,
} from './Buyer';
import type { EnvInfo } from './EnvInfo';
import {
    validateEnvInfo,
    EnvInfoFromJSON,
    EnvInfoFromJSONTyped,
    EnvInfoToJSON,
    EnvInfoToJSONTyped,
} from './EnvInfo';

/**
 * 
 * @export
 * @interface ConsultPayRequestAdditionalInfo
 */
export interface ConsultPayRequestAdditionalInfo {
    /**
     * Additional information of buyer
     * @type {Buyer}
     * @memberof ConsultPayRequestAdditionalInfo
     */
    buyer: Buyer;
    /**
     * Additional information of environment info
     * @type {EnvInfo}
     * @memberof ConsultPayRequestAdditionalInfo
     */
    envInfo: EnvInfo;
    /**
     * Additional information of merchant transaction type
     * @type {string}
     * @memberof ConsultPayRequestAdditionalInfo
     */
    merchantTransType?: string;
}

/**
 * Check if a given object implements the ConsultPayRequestAdditionalInfo interface.
 */
export function instanceOfConsultPayRequestAdditionalInfo(value: object): value is ConsultPayRequestAdditionalInfo {
    if (!('buyer' in value) || value['buyer'] === undefined) return false;
    if (!('envInfo' in value) || value['envInfo'] === undefined) return false;
    return true;
}

export function ConsultPayRequestAdditionalInfoFromJSON(json: any): ConsultPayRequestAdditionalInfo {
    return ConsultPayRequestAdditionalInfoFromJSONTyped(json, false);
}

export function ConsultPayRequestAdditionalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsultPayRequestAdditionalInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'buyer': BuyerFromJSON(json['buyer']),
        'envInfo': EnvInfoFromJSON(json['envInfo']),
        'merchantTransType': json['merchantTransType'] == null ? undefined : json['merchantTransType'],
    };
}

export function ConsultPayRequestAdditionalInfoToJSON(json: any): ConsultPayRequestAdditionalInfo {
    return ConsultPayRequestAdditionalInfoToJSONTyped(json, false);
}

export function ConsultPayRequestAdditionalInfoToJSONTyped(value?: ConsultPayRequestAdditionalInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'buyer': BuyerToJSON(value['buyer']),
        'envInfo': EnvInfoToJSON(value['envInfo']),
        'merchantTransType': value['merchantTransType'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    merchantTransType: {
        maxLength: 64,
    },
}

export function validateConsultPayRequestAdditionalInfo(value: ConsultPayRequestAdditionalInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...validateBuyer(value.buyer));

    validationErrorContexts.push(...validateEnvInfo(value.envInfo));

    validationErrorContexts.push(...ValidationUtil.validateProperty('merchantTransType', value.merchantTransType, propertyValidationAttributesMap['merchantTransType']));

    return validationErrorContexts;
}
