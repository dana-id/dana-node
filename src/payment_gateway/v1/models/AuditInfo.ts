/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface AuditInfo
 */
export interface AuditInfo {
    /**
     * Action trigger reason
     * @type {string}
     * @memberof AuditInfo
     */
    actionReason?: string;
    /**
     * Third party client identifier
     * @type {string}
     * @memberof AuditInfo
     */
    thirdClientId?: string;
}

/**
 * Check if a given object implements the AuditInfo interface.
 */
export function instanceOfAuditInfo(value: object): value is AuditInfo {
    return true;
}

export function AuditInfoFromJSON(json: any): AuditInfo {
    return AuditInfoFromJSONTyped(json, false);
}

export function AuditInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'actionReason': json['actionReason'] == null ? undefined : json['actionReason'],
        'thirdClientId': json['thirdClientId'] == null ? undefined : json['thirdClientId'],
    };
}

export function AuditInfoToJSON(json: any): AuditInfo {
    return AuditInfoToJSONTyped(json, false);
}

export function AuditInfoToJSONTyped(value?: AuditInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actionReason': value['actionReason'],
        'thirdClientId': value['thirdClientId'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    actionReason: {
        maxLength: 256,
    },
    thirdClientId: {
        maxLength: 32,
    },
}

export function validateAuditInfo(value: AuditInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('actionReason', value.actionReason, propertyValidationAttributesMap['actionReason']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('thirdClientId', value.thirdClientId, propertyValidationAttributesMap['thirdClientId']));

    return validationErrorContexts;
}
