/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { ConsultPayPaymentInfo } from './ConsultPayPaymentInfo';
import {
    validateConsultPayPaymentInfo,
    ConsultPayPaymentInfoFromJSON,
    ConsultPayPaymentInfoFromJSONTyped,
    ConsultPayPaymentInfoToJSON,
    ConsultPayPaymentInfoToJSONTyped,
} from './ConsultPayPaymentInfo';

/**
 * 
 * @export
 * @interface ConsultPayResponse
 */
export interface ConsultPayResponse {
    /**
     * Response code. Refer to https://dashboard.dana.id/api-docs/read/237#paymentgatewayprod-ConsultPay-ResponseCodeandMessage
     * @type {string}
     * @memberof ConsultPayResponse
     */
    responseCode?: string;
    /**
     * Response message. Refer to https://dashboard.dana.id/api-docs/read/237#paymentgatewayprod-ConsultPay-ResponseCodeandMessage
     * @type {string}
     * @memberof ConsultPayResponse
     */
    responseMessage?: string;
    /**
     * Define list of payment information that includes payment method and payment option for transaction
     * @type {Array<ConsultPayPaymentInfo>}
     * @memberof ConsultPayResponse
     */
    paymentInfos?: Array<ConsultPayPaymentInfo>;
}

/**
 * Check if a given object implements the ConsultPayResponse interface.
 */
export function instanceOfConsultPayResponse(value: object): value is ConsultPayResponse {
    return true;
}

export function ConsultPayResponseFromJSON(json: any): ConsultPayResponse {
    return ConsultPayResponseFromJSONTyped(json, false);
}

export function ConsultPayResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsultPayResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'responseCode': json['responseCode'] == null ? undefined : json['responseCode'],
        'responseMessage': json['responseMessage'] == null ? undefined : json['responseMessage'],
        'paymentInfos': json['paymentInfos'] == null ? undefined : ((json['paymentInfos'] as Array<any>).map(ConsultPayPaymentInfoFromJSON)),
    };
}

export function ConsultPayResponseToJSON(json: any): ConsultPayResponse {
    return ConsultPayResponseToJSONTyped(json, false);
}

export function ConsultPayResponseToJSONTyped(value?: ConsultPayResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'paymentInfos': value['paymentInfos'] == null ? undefined : ((value['paymentInfos'] as Array<any>).map(ConsultPayPaymentInfoToJSON)),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
}

export function validateConsultPayResponse(value: ConsultPayResponse): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));

    validationErrorContexts.push(...ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));

    return validationErrorContexts;
}
