/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { Money } from './Money';
import {
    validateMoney,
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    MoneyToJSONTyped,
} from './Money';
import type { ConsultPayRequestAdditionalInfo } from './ConsultPayRequestAdditionalInfo';
import {
    validateConsultPayRequestAdditionalInfo,
    ConsultPayRequestAdditionalInfoFromJSON,
    ConsultPayRequestAdditionalInfoFromJSONTyped,
    ConsultPayRequestAdditionalInfoToJSON,
    ConsultPayRequestAdditionalInfoToJSONTyped,
} from './ConsultPayRequestAdditionalInfo';

/**
 * 
 * @export
 * @interface ConsultPayRequest
 */
export interface ConsultPayRequest {
    /**
     * Merchant identifier that is unique per each merchant
     * @type {string}
     * @memberof ConsultPayRequest
     */
    merchantId: string;
    /**
     * 
     * @type {Money}
     * @memberof ConsultPayRequest
     */
    amount: Money;
    /**
     * 
     * @type {ConsultPayRequestAdditionalInfo}
     * @memberof ConsultPayRequest
     */
    additionalInfo: ConsultPayRequestAdditionalInfo;
}

/**
 * Check if a given object implements the ConsultPayRequest interface.
 */
export function instanceOfConsultPayRequest(value: object): value is ConsultPayRequest {
    if (!('merchantId' in value) || value['merchantId'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('additionalInfo' in value) || value['additionalInfo'] === undefined) return false;
    return true;
}

export function ConsultPayRequestFromJSON(json: any): ConsultPayRequest {
    return ConsultPayRequestFromJSONTyped(json, false);
}

export function ConsultPayRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsultPayRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'merchantId': json['merchantId'],
        'amount': MoneyFromJSON(json['amount']),
        'additionalInfo': ConsultPayRequestAdditionalInfoFromJSON(json['additionalInfo']),
    };
}

export function ConsultPayRequestToJSON(json: any): ConsultPayRequest {
    return ConsultPayRequestToJSONTyped(json, false);
}

export function ConsultPayRequestToJSONTyped(value?: ConsultPayRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'merchantId': value['merchantId'],
        'amount': MoneyToJSON(value['amount']),
        'additionalInfo': ConsultPayRequestAdditionalInfoToJSON(value['additionalInfo']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    merchantId: {
        maxLength: 64,
    },
}

export function validateConsultPayRequest(value: ConsultPayRequest): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('merchantId', value.merchantId, propertyValidationAttributesMap['merchantId']));

    validationErrorContexts.push(...validateMoney(value.amount));

    validationErrorContexts.push(...validateConsultPayRequestAdditionalInfo(value.additionalInfo));

    return validationErrorContexts;
}
