/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * Define the detail of exchange rate information
 * @export
 * @interface InternationalOrderInfoExchangeRate
 */
export interface InternationalOrderInfoExchangeRate {
    /**
     * Rate of exchange value represents the relation between two currencies. For example, 15917.2690 indicates that one USD is equivalent to 15917.2690 IDR
     * @type {string}
     * @memberof InternationalOrderInfoExchangeRate
     */
    rate?: string;
    /**
     * Exchange rate between two currencies. For example USD/IDR, refers to how much of one currency (in this case, Indonesian Rupiah or IDR) can be exchanged for one unit of another currency (in this case, US Dollar or USD)
     * @type {string}
     * @memberof InternationalOrderInfoExchangeRate
     */
    exchangeRelation?: string;
}

/**
 * Check if a given object implements the InternationalOrderInfoExchangeRate interface.
 */
export function instanceOfInternationalOrderInfoExchangeRate(value: object): value is InternationalOrderInfoExchangeRate {
    return true;
}

export function InternationalOrderInfoExchangeRateFromJSON(json: any): InternationalOrderInfoExchangeRate {
    return InternationalOrderInfoExchangeRateFromJSONTyped(json, false);
}

export function InternationalOrderInfoExchangeRateFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternationalOrderInfoExchangeRate {
    if (json == null) {
        return json;
    }
    return {
        
        'rate': json['rate'] == null ? undefined : json['rate'],
        'exchangeRelation': json['exchangeRelation'] == null ? undefined : json['exchangeRelation'],
    };
}

export function InternationalOrderInfoExchangeRateToJSON(json: any): InternationalOrderInfoExchangeRate {
    return InternationalOrderInfoExchangeRateToJSONTyped(json, false);
}

export function InternationalOrderInfoExchangeRateToJSONTyped(value?: InternationalOrderInfoExchangeRate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'rate': value['rate'],
        'exchangeRelation': value['exchangeRelation'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
}

export function validateInternationalOrderInfoExchangeRate(value: InternationalOrderInfoExchangeRate): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    return validationErrorContexts;
}
