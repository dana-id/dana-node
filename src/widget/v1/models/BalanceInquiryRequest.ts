/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
import type { BalanceInquiryRequestAdditionalInfo } from './BalanceInquiryRequestAdditionalInfo';
import {
    validateBalanceInquiryRequestAdditionalInfo,
    BalanceInquiryRequestAdditionalInfoFromJSON,
    BalanceInquiryRequestAdditionalInfoFromJSONTyped,
    BalanceInquiryRequestAdditionalInfoToJSON,
    BalanceInquiryRequestAdditionalInfoToJSONTyped,
} from './BalanceInquiryRequestAdditionalInfo';

/**
 * 
 * @export
 * @interface BalanceInquiryRequest
 */
export interface BalanceInquiryRequest {
    /**
     * Unique transaction identifier on partner system which assigned to each transaction<br>
     * Notes:<br>
     * If the partner receives a timeout or an unexpected response from DANA and partner expects to perform retry request to DANA, please use the partnerReferenceNo that is the same as the one used in the transaction request process before
     * 
     * @type {string}
     * @memberof BalanceInquiryRequest
     */
    partnerReferenceNo?: string;
    /**
     * Information of balance types to specify which balance type expected to be returned. Will return all available balance type if this parameter empty
     * @type {Array<string>}
     * @memberof BalanceInquiryRequest
     */
    balanceTypes?: Array<string>;
    /**
     * 
     * @type {BalanceInquiryRequestAdditionalInfo}
     * @memberof BalanceInquiryRequest
     */
    additionalInfo?: BalanceInquiryRequestAdditionalInfo;
}

/**
 * Check if a given object implements the BalanceInquiryRequest interface.
 */
export function instanceOfBalanceInquiryRequest(value: object): value is BalanceInquiryRequest {
    return true;
}

export function BalanceInquiryRequestFromJSON(json: any): BalanceInquiryRequest {
    return BalanceInquiryRequestFromJSONTyped(json, false);
}

export function BalanceInquiryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BalanceInquiryRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'partnerReferenceNo': json['partnerReferenceNo'] == null ? undefined : json['partnerReferenceNo'],
        'balanceTypes': json['balanceTypes'] == null ? undefined : json['balanceTypes'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : BalanceInquiryRequestAdditionalInfoFromJSON(json['additionalInfo']),
    };
}

export function BalanceInquiryRequestToJSON(json: any): BalanceInquiryRequest {
    return BalanceInquiryRequestToJSONTyped(json, false);
}

export function BalanceInquiryRequestToJSONTyped(value?: BalanceInquiryRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'partnerReferenceNo': value['partnerReferenceNo'],
        'balanceTypes': value['balanceTypes'],
        'additionalInfo': BalanceInquiryRequestAdditionalInfoToJSON(value['additionalInfo']),
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    partnerReferenceNo: {
        maxLength: 64,
    },
}

export function validateBalanceInquiryRequest(value: BalanceInquiryRequest): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('partnerReferenceNo', value.partnerReferenceNo, propertyValidationAttributesMap['partnerReferenceNo']));

    validationErrorContexts.push(...validateBalanceInquiryRequestAdditionalInfo(value.additionalInfo));

    return validationErrorContexts;
}
