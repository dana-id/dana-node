/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */

import type { PropertyValidationAttribute, ValidationErrorContext } from '../../../runtime';
import { mapValues, ValidationUtil } from '../../../runtime';
/**
 * 
 * @export
 * @interface ServiceInfo
 */
export interface ServiceInfo {
    /**
     * 
     * @type {string}
     * @memberof ServiceInfo
     */
    serviceType?: ServiceInfoServiceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ServiceInfo
     */
    serviceScenario?: ServiceInfoServiceScenarioEnum;
    /**
     * Extend information
     * @type {string}
     * @memberof ServiceInfo
     */
    extendInfo?: string;
}


/**
 * @export
 */
export const ServiceInfoServiceTypeEnum = {
    Parking: 'PARKING',
    Investment: 'INVESTMENT'
} as const;
export type ServiceInfoServiceTypeEnum = typeof ServiceInfoServiceTypeEnum[keyof typeof ServiceInfoServiceTypeEnum];

/**
 * @export
 */
export const ServiceInfoServiceScenarioEnum = {
    ScanAndPay: 'SCAN_AND_PAY',
    ExitAndPay: 'EXIT_AND_PAY',
    EmasPurchase: 'EMAS_PURCHASE'
} as const;
export type ServiceInfoServiceScenarioEnum = typeof ServiceInfoServiceScenarioEnum[keyof typeof ServiceInfoServiceScenarioEnum];


/**
 * Check if a given object implements the ServiceInfo interface.
 */
export function instanceOfServiceInfo(value: object): value is ServiceInfo {
    return true;
}

export function ServiceInfoFromJSON(json: any): ServiceInfo {
    return ServiceInfoFromJSONTyped(json, false);
}

export function ServiceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceType': json['serviceType'] == null ? undefined : json['serviceType'],
        'serviceScenario': json['serviceScenario'] == null ? undefined : json['serviceScenario'],
        'extendInfo': json['extendInfo'] == null ? undefined : json['extendInfo'],
    };
}

export function ServiceInfoToJSON(json: any): ServiceInfo {
    return ServiceInfoToJSONTyped(json, false);
}

export function ServiceInfoToJSONTyped(value?: ServiceInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'serviceType': value['serviceType'],
        'serviceScenario': value['serviceScenario'],
        'extendInfo': value['extendInfo'],
    };
}

const propertyValidationAttributesMap: { [property: string]: PropertyValidationAttribute } = {
    extendInfo: {
        maxLength: 4096,
    },
}

export function validateServiceInfo(value: ServiceInfo): ValidationErrorContext[] {
    const validationErrorContexts: ValidationErrorContext[] = [];

    if (value == null) {
        return validationErrorContexts;
    }

    validationErrorContexts.push(...ValidationUtil.validateProperty('extendInfo', value.extendInfo, propertyValidationAttributesMap['extendInfo']));

    return validationErrorContexts;
}
