/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { BusinessDocs } from './BusinessDocs';
import type { UserName } from './UserName';
import type { CreateDivisionRequestExtInfo } from './CreateDivisionRequestExtInfo';
import type { MobileNoInfo } from './MobileNoInfo';
import type { PicInfo } from './PicInfo';
import type { AddressInfo } from './AddressInfo';
/**
 *
 * @export
 * @interface CreateDivisionRequest
 */
export interface CreateDivisionRequest {
    /**
     * API Version. As per the respective API reference. Must be > 2
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    apiVersion: string;
    /**
     * Merchant identifier
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    merchantId: string;
    /**
     * Parent division identifier. Required when parentRoleType is DIVISION or EXTERNAL_DIVISION. Length depends on parentRoleType - DIVISION (21 max), EXTERNAL_DIVISION (64 max)
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    parentDivisionId?: string;
    /**
     * Type of parent role
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    parentRoleType: CreateDivisionRequestParentRoleTypeEnum;
    /**
     * Division name
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    divisionName: string;
    /**
     *
     * @type {AddressInfo}
     * @memberof CreateDivisionRequest
     */
    divisionAddress: AddressInfo;
    /**
     * Division description
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    divisionDescription?: string;
    /**
     * Division type
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    divisionType: CreateDivisionRequestDivisionTypeEnum;
    /**
     * External division identifier
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    externalDivisionId: string;
    /**
     * Logo URL map with base64 encoded images. Keys can be LOGO, PC_LOGO, MOBILE_LOGO
     * @type {{ [key: string]: string; }}
     * @memberof CreateDivisionRequest
     */
    logoUrlMap?: {
        [key: string]: string;
    };
    /**
     *
     * @type {CreateDivisionRequestExtInfo}
     * @memberof CreateDivisionRequest
     */
    extInfo: CreateDivisionRequestExtInfo;
    /**
     * Merchant category codes
     * @type {Array<string>}
     * @memberof CreateDivisionRequest
     */
    mccCodes: Array<string>;
    /**
     * Business documents. "individu" entity can only use KTP and SIM. Other entities can use SIUP and NIB
     * @type {Array<BusinessDocs>}
     * @memberof CreateDivisionRequest
     */
    businessDocs: Array<BusinessDocs>;
    /**
     * Business entity type
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    businessEntity: CreateDivisionRequestBusinessEntityEnum;
    /**
     *
     * @type {UserName}
     * @memberof CreateDivisionRequest
     */
    ownerName: UserName;
    /**
     *
     * @type {MobileNoInfo}
     * @memberof CreateDivisionRequest
     */
    ownerPhoneNumber: MobileNoInfo;
    /**
     * Owner identifier type
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    ownerIdType: CreateDivisionRequestOwnerIdTypeEnum;
    /**
     * Owner identifier number. Length depends on ownerIdType - KTP (16), SIM (12-14), Passport (8), NIB (>=13), SIUP (free text)
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    ownerIdNo: string;
    /**
     *
     * @type {AddressInfo}
     * @memberof CreateDivisionRequest
     */
    ownerAddress: AddressInfo;
    /**
     * Director as a PIC of sub merchant
     * @type {Array<PicInfo>}
     * @memberof CreateDivisionRequest
     */
    directorPics: Array<PicInfo>;
    /**
     * Non director which become a PIC of sub merchant
     * @type {Array<PicInfo>}
     * @memberof CreateDivisionRequest
     */
    nonDirectorPics: Array<PicInfo>;
    /**
     * Size type
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    sizeType: CreateDivisionRequestSizeTypeEnum;
    /**
     * Flag if division is type PG
     * @type {string}
     * @memberof CreateDivisionRequest
     */
    pgDivisionFlag?: CreateDivisionRequestPgDivisionFlagEnum;
}
/**
 * @export
 */
export declare const CreateDivisionRequestParentRoleTypeEnum: {
    readonly Merchant: "MERCHANT";
    readonly Division: "DIVISION";
    readonly ExternalDivision: "EXTERNAL_DIVISION";
};
export type CreateDivisionRequestParentRoleTypeEnum = typeof CreateDivisionRequestParentRoleTypeEnum[keyof typeof CreateDivisionRequestParentRoleTypeEnum] | '';
/**
 * @export
 */
export declare const CreateDivisionRequestDivisionTypeEnum: {
    readonly Region: "REGION";
    readonly Area: "AREA";
    readonly Branch: "BRANCH";
    readonly Outlet: "OUTLET";
    readonly Store: "STORE";
    readonly Kiosk: "KIOSK";
    readonly Stall: "STALL";
    readonly Counter: "COUNTER";
    readonly Booth: "BOOTH";
    readonly PointOfSale: "POINT_OF_SALE";
    readonly VendingMachine: "VENDING_MACHINE";
};
export type CreateDivisionRequestDivisionTypeEnum = typeof CreateDivisionRequestDivisionTypeEnum[keyof typeof CreateDivisionRequestDivisionTypeEnum] | '';
/**
 * @export
 */
export declare const CreateDivisionRequestBusinessEntityEnum: {
    readonly Pt: "pt";
    readonly Cv: "cv";
    readonly Individu: "individu";
    readonly UsahaDagang: "usaha_dagang";
    readonly Yayasan: "yayasan";
    readonly Koperasi: "koperasi";
};
export type CreateDivisionRequestBusinessEntityEnum = typeof CreateDivisionRequestBusinessEntityEnum[keyof typeof CreateDivisionRequestBusinessEntityEnum] | '';
/**
 * @export
 */
export declare const CreateDivisionRequestOwnerIdTypeEnum: {
    readonly Ktp: "KTP";
    readonly Sim: "SIM";
    readonly Passport: "PASSPORT";
    readonly Siup: "SIUP";
    readonly Nib: "NIB";
};
export type CreateDivisionRequestOwnerIdTypeEnum = typeof CreateDivisionRequestOwnerIdTypeEnum[keyof typeof CreateDivisionRequestOwnerIdTypeEnum] | '';
/**
 * @export
 */
export declare const CreateDivisionRequestSizeTypeEnum: {
    readonly Umi: "UMI";
    readonly Uke: "UKE";
    readonly Ume: "UME";
    readonly Ube: "UBE";
    readonly Ure: "URE";
};
export type CreateDivisionRequestSizeTypeEnum = typeof CreateDivisionRequestSizeTypeEnum[keyof typeof CreateDivisionRequestSizeTypeEnum] | '';
/**
 * @export
 */
export declare const CreateDivisionRequestPgDivisionFlagEnum: {
    readonly True: "true";
    readonly False: "false";
};
export type CreateDivisionRequestPgDivisionFlagEnum = typeof CreateDivisionRequestPgDivisionFlagEnum[keyof typeof CreateDivisionRequestPgDivisionFlagEnum] | '';
/**
 * Check if a given object implements the CreateDivisionRequest interface.
 */
export declare function instanceOfCreateDivisionRequest(value: object): value is CreateDivisionRequest;
export declare function CreateDivisionRequestFromJSON(json: any): CreateDivisionRequest;
export declare function CreateDivisionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDivisionRequest;
export declare function CreateDivisionRequestToJSON(json: any): CreateDivisionRequest;
export declare function CreateDivisionRequestToJSONTyped(value?: CreateDivisionRequest | null, ignoreDiscriminator?: boolean): any;
export declare function validateCreateDivisionRequest(value: CreateDivisionRequest): ValidationErrorContext[];
