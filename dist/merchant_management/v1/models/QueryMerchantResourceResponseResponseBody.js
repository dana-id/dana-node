"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryMerchantResourceResponseResponseBody = instanceOfQueryMerchantResourceResponseResponseBody;
exports.QueryMerchantResourceResponseResponseBodyFromJSON = QueryMerchantResourceResponseResponseBodyFromJSON;
exports.QueryMerchantResourceResponseResponseBodyFromJSONTyped = QueryMerchantResourceResponseResponseBodyFromJSONTyped;
exports.QueryMerchantResourceResponseResponseBodyToJSON = QueryMerchantResourceResponseResponseBodyToJSON;
exports.QueryMerchantResourceResponseResponseBodyToJSONTyped = QueryMerchantResourceResponseResponseBodyToJSONTyped;
exports.validateQueryMerchantResourceResponseResponseBody = validateQueryMerchantResourceResponseResponseBody;
const ResultInfo_1 = require("./ResultInfo");
const MerchantResourceInformation_1 = require("./MerchantResourceInformation");
/**
 * Check if a given object implements the QueryMerchantResourceResponseResponseBody interface.
 */
function instanceOfQueryMerchantResourceResponseResponseBody(value) {
    if (!('resultInfo' in value) || value['resultInfo'] === undefined)
        return false;
    return true;
}
function QueryMerchantResourceResponseResponseBodyFromJSON(json) {
    return QueryMerchantResourceResponseResponseBodyFromJSONTyped(json, false);
}
function QueryMerchantResourceResponseResponseBodyFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'resultInfo': (0, ResultInfo_1.ResultInfoFromJSON)(json['resultInfo']),
        'merchantResourceInformations': json['merchantResourceInformations'] == null ? undefined : (json['merchantResourceInformations'].map(MerchantResourceInformation_1.MerchantResourceInformationFromJSON)),
    };
}
function QueryMerchantResourceResponseResponseBodyToJSON(json) {
    return QueryMerchantResourceResponseResponseBodyToJSONTyped(json, false);
}
function QueryMerchantResourceResponseResponseBodyToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'resultInfo': (0, ResultInfo_1.ResultInfoToJSON)(value['resultInfo']),
        'merchantResourceInformations': value['merchantResourceInformations'] == null ? undefined : (value['merchantResourceInformations'].map(MerchantResourceInformation_1.MerchantResourceInformationToJSON)),
    };
}
const propertyValidationAttributesMap = {};
function validateQueryMerchantResourceResponseResponseBody(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, ResultInfo_1.validateResultInfo)(value.resultInfo));
    return validationErrorContexts;
}
