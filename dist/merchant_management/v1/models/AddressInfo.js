"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAddressInfo = instanceOfAddressInfo;
exports.AddressInfoFromJSON = AddressInfoFromJSON;
exports.AddressInfoFromJSONTyped = AddressInfoFromJSONTyped;
exports.AddressInfoToJSON = AddressInfoToJSON;
exports.AddressInfoToJSONTyped = AddressInfoToJSONTyped;
exports.validateAddressInfo = validateAddressInfo;
/**
 * Check if a given object implements the AddressInfo interface.
 */
function instanceOfAddressInfo(value) {
    return true;
}
function AddressInfoFromJSON(json) {
    return AddressInfoFromJSONTyped(json, false);
}
function AddressInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'country': json['country'] == null ? undefined : json['country'],
        'province': json['province'] == null ? undefined : json['province'],
        'city': json['city'] == null ? undefined : json['city'],
        'area': json['area'] == null ? undefined : json['area'],
        'address1': json['address1'] == null ? undefined : json['address1'],
        'address2': json['address2'] == null ? undefined : json['address2'],
        'postcode': json['postcode'] == null ? undefined : json['postcode'],
        'subDistrict': json['subDistrict'] == null ? undefined : json['subDistrict'],
    };
}
function AddressInfoToJSON(json) {
    return AddressInfoToJSONTyped(json, false);
}
function AddressInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'country': value['country'],
        'province': value['province'],
        'city': value['city'],
        'area': value['area'],
        'address1': value['address1'],
        'address2': value['address2'],
        'postcode': value['postcode'],
        'subDistrict': value['subDistrict'],
    };
}
const propertyValidationAttributesMap = {};
function validateAddressInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    return validationErrorContexts;
}
