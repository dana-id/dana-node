"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryShopResponse = instanceOfQueryShopResponse;
exports.QueryShopResponseFromJSON = QueryShopResponseFromJSON;
exports.QueryShopResponseFromJSONTyped = QueryShopResponseFromJSONTyped;
exports.QueryShopResponseToJSON = QueryShopResponseToJSON;
exports.QueryShopResponseToJSONTyped = QueryShopResponseToJSONTyped;
exports.validateQueryShopResponse = validateQueryShopResponse;
const QueryShopResponseResponse_1 = require("./QueryShopResponseResponse");
/**
 * Check if a given object implements the QueryShopResponse interface.
 */
function instanceOfQueryShopResponse(value) {
    if (!('response' in value) || value['response'] === undefined)
        return false;
    return true;
}
function QueryShopResponseFromJSON(json) {
    return QueryShopResponseFromJSONTyped(json, false);
}
function QueryShopResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'response': (0, QueryShopResponseResponse_1.QueryShopResponseResponseFromJSON)(json['response']),
        'signature': json['signature'] == null ? undefined : json['signature'],
    };
}
function QueryShopResponseToJSON(json) {
    return QueryShopResponseToJSONTyped(json, false);
}
function QueryShopResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'response': (0, QueryShopResponseResponse_1.QueryShopResponseResponseToJSON)(value['response']),
        'signature': value['signature'],
    };
}
const propertyValidationAttributesMap = {};
function validateQueryShopResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, QueryShopResponseResponse_1.validateQueryShopResponseResponse)(value.response));
    return validationErrorContexts;
}
