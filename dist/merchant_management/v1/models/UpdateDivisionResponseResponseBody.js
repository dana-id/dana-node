"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfUpdateDivisionResponseResponseBody = instanceOfUpdateDivisionResponseResponseBody;
exports.UpdateDivisionResponseResponseBodyFromJSON = UpdateDivisionResponseResponseBodyFromJSON;
exports.UpdateDivisionResponseResponseBodyFromJSONTyped = UpdateDivisionResponseResponseBodyFromJSONTyped;
exports.UpdateDivisionResponseResponseBodyToJSON = UpdateDivisionResponseResponseBodyToJSON;
exports.UpdateDivisionResponseResponseBodyToJSONTyped = UpdateDivisionResponseResponseBodyToJSONTyped;
exports.validateUpdateDivisionResponseResponseBody = validateUpdateDivisionResponseResponseBody;
const ResultInfo_1 = require("./ResultInfo");
/**
 * Check if a given object implements the UpdateDivisionResponseResponseBody interface.
 */
function instanceOfUpdateDivisionResponseResponseBody(value) {
    if (!('resultInfo' in value) || value['resultInfo'] === undefined)
        return false;
    return true;
}
function UpdateDivisionResponseResponseBodyFromJSON(json) {
    return UpdateDivisionResponseResponseBodyFromJSONTyped(json, false);
}
function UpdateDivisionResponseResponseBodyFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'resultInfo': (0, ResultInfo_1.ResultInfoFromJSON)(json['resultInfo']),
    };
}
function UpdateDivisionResponseResponseBodyToJSON(json) {
    return UpdateDivisionResponseResponseBodyToJSONTyped(json, false);
}
function UpdateDivisionResponseResponseBodyToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'resultInfo': (0, ResultInfo_1.ResultInfoToJSON)(value['resultInfo']),
    };
}
const propertyValidationAttributesMap = {};
function validateUpdateDivisionResponseResponseBody(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, ResultInfo_1.validateResultInfo)(value.resultInfo));
    return validationErrorContexts;
}
