/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { BusinessDocs } from './BusinessDocs';
import type { UserName } from './UserName';
import type { MobileNoInfo } from './MobileNoInfo';
import type { PicInfo } from './PicInfo';
import type { AddressInfo } from './AddressInfo';
/**
 *
 * @export
 * @interface UpdateDivisionRequest
 */
export interface UpdateDivisionRequest {
    /**
     * Merchant identifier
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    merchantId: string;
    /**
     * Division identifier. Required when divisionIdType is INNER_ID
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    divisionId?: string;
    /**
     * Division name
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    divisionName: string;
    /**
     *
     * @type {AddressInfo}
     * @memberof UpdateDivisionRequest
     */
    divisionAddress: AddressInfo;
    /**
     * Division description
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    divisionDescription?: string;
    /**
     * Division type
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    divisionType: UpdateDivisionRequestDivisionTypeEnum;
    /**
     * Division identifier type
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    divisionIdType: UpdateDivisionRequestDivisionIdTypeEnum;
    /**
     * External division identifier. Required when divisionIdType is EXTERNAL_ID
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    externalDivisionId?: string;
    /**
     * New external division identifier
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    newExternalDivisionId: string;
    /**
     * Logo URL map with base64 encoded images. Keys can be LOGO, PC_LOGO, MOBILE_LOGO
     * @type {{ [key: string]: string; }}
     * @memberof UpdateDivisionRequest
     */
    logoUrlMap?: {
        [key: string]: string;
    };
    /**
     * Merchant category codes
     * @type {Array<string>}
     * @memberof UpdateDivisionRequest
     */
    mccCodes: Array<string>;
    /**
     * Extended information
     * @type {{ [key: string]: any; }}
     * @memberof UpdateDivisionRequest
     */
    extInfo: {
        [key: string]: any;
    };
    /**
     * API version flag. Use > 2 for new attributes
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    apiVersion?: string;
    /**
     * Business documents. Required when apiVersion > 2. "individu" entity can only use KTP and SIM. Other entities can use SIUP and NIB
     * @type {Array<BusinessDocs>}
     * @memberof UpdateDivisionRequest
     */
    businessDocs?: Array<BusinessDocs>;
    /**
     * Business entity type. Required when apiVersion > 2
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    businessEntity?: UpdateDivisionRequestBusinessEntityEnum;
    /**
     * Business end date, in format YYYY-MM-DD. Required when apiVersion > 2
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    businessEndDate?: string;
    /**
     *
     * @type {UserName}
     * @memberof UpdateDivisionRequest
     */
    ownerName?: UserName;
    /**
     *
     * @type {MobileNoInfo}
     * @memberof UpdateDivisionRequest
     */
    ownerPhoneNumber?: MobileNoInfo;
    /**
     * Owner identifier type. Required when apiVersion > 2
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    ownerIdType?: UpdateDivisionRequestOwnerIdTypeEnum;
    /**
     * Owner identifier number. Required when apiVersion > 2. Length depends on ownerIdType - KTP (16), SIM (12-14), Passport (8), NIB (>=13), SIUP (free text)
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    ownerIdNo?: string;
    /**
     *
     * @type {AddressInfo}
     * @memberof UpdateDivisionRequest
     */
    ownerAddress?: AddressInfo;
    /**
     * Director as a PIC of sub merchant. Required when apiVersion > 2
     * @type {Array<PicInfo>}
     * @memberof UpdateDivisionRequest
     */
    directorPics?: Array<PicInfo>;
    /**
     * Non director which become a PIC of sub merchant. Required when apiVersion > 2
     * @type {Array<PicInfo>}
     * @memberof UpdateDivisionRequest
     */
    nonDirectorPics?: Array<PicInfo>;
    /**
     * Size type. Required when apiVersion > 2
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    sizeType?: UpdateDivisionRequestSizeTypeEnum;
    /**
     * Flag if division is type PG
     * @type {string}
     * @memberof UpdateDivisionRequest
     */
    pgDivisionFlag?: UpdateDivisionRequestPgDivisionFlagEnum;
}
/**
 * @export
 */
export declare const UpdateDivisionRequestDivisionTypeEnum: {
    readonly Region: "REGION";
    readonly Area: "AREA";
    readonly Branch: "BRANCH";
    readonly Outlet: "OUTLET";
    readonly Store: "STORE";
    readonly Kiosk: "KIOSK";
    readonly Stall: "STALL";
    readonly Counter: "COUNTER";
    readonly Booth: "BOOTH";
    readonly PointOfSale: "POINT_OF_SALE";
    readonly VendingMachine: "VENDING_MACHINE";
};
export type UpdateDivisionRequestDivisionTypeEnum = typeof UpdateDivisionRequestDivisionTypeEnum[keyof typeof UpdateDivisionRequestDivisionTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateDivisionRequestDivisionIdTypeEnum: {
    readonly InnerId: "INNER_ID";
    readonly ExternalId: "EXTERNAL_ID";
};
export type UpdateDivisionRequestDivisionIdTypeEnum = typeof UpdateDivisionRequestDivisionIdTypeEnum[keyof typeof UpdateDivisionRequestDivisionIdTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateDivisionRequestBusinessEntityEnum: {
    readonly Pt: "pt";
    readonly Cv: "cv";
    readonly Individu: "individu";
    readonly UsahaDagang: "usaha_dagang";
    readonly Yayasan: "yayasan";
    readonly Koperasi: "koperasi";
};
export type UpdateDivisionRequestBusinessEntityEnum = typeof UpdateDivisionRequestBusinessEntityEnum[keyof typeof UpdateDivisionRequestBusinessEntityEnum] | '';
/**
 * @export
 */
export declare const UpdateDivisionRequestOwnerIdTypeEnum: {
    readonly Ktp: "KTP";
    readonly Sim: "SIM";
    readonly Passport: "PASSPORT";
    readonly Siup: "SIUP";
    readonly Nib: "NIB";
};
export type UpdateDivisionRequestOwnerIdTypeEnum = typeof UpdateDivisionRequestOwnerIdTypeEnum[keyof typeof UpdateDivisionRequestOwnerIdTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateDivisionRequestSizeTypeEnum: {
    readonly Umi: "UMI";
    readonly Uke: "UKE";
    readonly Ume: "UME";
    readonly Ube: "UBE";
    readonly Ure: "URE";
};
export type UpdateDivisionRequestSizeTypeEnum = typeof UpdateDivisionRequestSizeTypeEnum[keyof typeof UpdateDivisionRequestSizeTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateDivisionRequestPgDivisionFlagEnum: {
    readonly True: "true";
    readonly False: "false";
};
export type UpdateDivisionRequestPgDivisionFlagEnum = typeof UpdateDivisionRequestPgDivisionFlagEnum[keyof typeof UpdateDivisionRequestPgDivisionFlagEnum] | '';
/**
 * Check if a given object implements the UpdateDivisionRequest interface.
 */
export declare function instanceOfUpdateDivisionRequest(value: object): value is UpdateDivisionRequest;
export declare function UpdateDivisionRequestFromJSON(json: any): UpdateDivisionRequest;
export declare function UpdateDivisionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDivisionRequest;
export declare function UpdateDivisionRequestToJSON(json: any): UpdateDivisionRequest;
export declare function UpdateDivisionRequestToJSONTyped(value?: UpdateDivisionRequest | null, ignoreDiscriminator?: boolean): any;
export declare function validateUpdateDivisionRequest(value: UpdateDivisionRequest): ValidationErrorContext[];
