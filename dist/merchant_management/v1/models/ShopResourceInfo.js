"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfShopResourceInfo = instanceOfShopResourceInfo;
exports.ShopResourceInfoFromJSON = ShopResourceInfoFromJSON;
exports.ShopResourceInfoFromJSONTyped = ShopResourceInfoFromJSONTyped;
exports.ShopResourceInfoToJSON = ShopResourceInfoToJSON;
exports.ShopResourceInfoToJSONTyped = ShopResourceInfoToJSONTyped;
exports.validateShopResourceInfo = validateShopResourceInfo;
const AddressInfo_1 = require("./AddressInfo");
/**
 * Check if a given object implements the ShopResourceInfo interface.
 */
function instanceOfShopResourceInfo(value) {
    return true;
}
function ShopResourceInfoFromJSON(json) {
    return ShopResourceInfoFromJSONTyped(json, false);
}
function ShopResourceInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'merchantId': json['merchantId'] == null ? undefined : json['merchantId'],
        'parentDivisionId': json['parentDivisionId'] == null ? undefined : json['parentDivisionId'],
        'parentRoleType': json['parentRoleType'] == null ? undefined : json['parentRoleType'],
        'mainName': json['mainName'] == null ? undefined : json['mainName'],
        'sizeType': json['sizeType'] == null ? undefined : json['sizeType'],
        'shopAddress': json['shopAddress'] == null ? undefined : (0, AddressInfo_1.AddressInfoFromJSON)(json['shopAddress']),
        'externalShopId': json['externalShopId'] == null ? undefined : json['externalShopId'],
        'logoUrlMap': json['logoUrlMap'] == null ? undefined : json['logoUrlMap'],
        'extInfo': json['extInfo'] == null ? undefined : json['extInfo'],
        'ln': json['ln'] == null ? undefined : json['ln'],
        'lat': json['lat'] == null ? undefined : json['lat'],
        'nmid': json['nmid'] == null ? undefined : json['nmid'],
    };
}
function ShopResourceInfoToJSON(json) {
    return ShopResourceInfoToJSONTyped(json, false);
}
function ShopResourceInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'merchantId': value['merchantId'],
        'parentDivisionId': value['parentDivisionId'],
        'parentRoleType': value['parentRoleType'],
        'mainName': value['mainName'],
        'sizeType': value['sizeType'],
        'shopAddress': (0, AddressInfo_1.AddressInfoToJSON)(value['shopAddress']),
        'externalShopId': value['externalShopId'],
        'logoUrlMap': value['logoUrlMap'],
        'extInfo': value['extInfo'],
        'ln': value['ln'],
        'lat': value['lat'],
        'nmid': value['nmid'],
    };
}
const propertyValidationAttributesMap = {};
function validateShopResourceInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, AddressInfo_1.validateAddressInfo)(value.shopAddress));
    return validationErrorContexts;
}
