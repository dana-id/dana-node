"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateShopRequestShopOwningEnum = exports.CreateShopRequestOwnerIdTypeEnum = exports.CreateShopRequestBusinessEntityEnum = exports.CreateShopRequestLoyaltyEnum = exports.CreateShopRequestSizeTypeEnum = exports.CreateShopRequestShopParentTypeEnum = void 0;
exports.instanceOfCreateShopRequest = instanceOfCreateShopRequest;
exports.CreateShopRequestFromJSON = CreateShopRequestFromJSON;
exports.CreateShopRequestFromJSONTyped = CreateShopRequestFromJSONTyped;
exports.CreateShopRequestToJSON = CreateShopRequestToJSON;
exports.CreateShopRequestToJSONTyped = CreateShopRequestToJSONTyped;
exports.validateCreateShopRequest = validateCreateShopRequest;
const runtime_1 = require("../../../runtime");
const BusinessDocs_1 = require("./BusinessDocs");
const UserName_1 = require("./UserName");
const MobileNoInfo_1 = require("./MobileNoInfo");
const PicInfo_1 = require("./PicInfo");
const AddressInfo_1 = require("./AddressInfo");
/**
 * @export
 */
exports.CreateShopRequestShopParentTypeEnum = {
    Merchant: 'MERCHANT',
    Division: 'DIVISION',
    ExternalDivision: 'EXTERNAL_DIVISION'
};
/**
 * @export
 */
exports.CreateShopRequestSizeTypeEnum = {
    Umi: 'UMI',
    Uke: 'UKE',
    Ume: 'UME',
    Ube: 'UBE'
};
/**
 * @export
 */
exports.CreateShopRequestLoyaltyEnum = {
    True: 'true',
    False: 'false'
};
/**
 * @export
 */
exports.CreateShopRequestBusinessEntityEnum = {
    Pt: 'pt',
    Cv: 'cv',
    Individu: 'individu',
    UsahaDagang: 'usaha_dagang',
    Yayasan: 'yayasan',
    Koperasi: 'koperasi'
};
/**
 * @export
 */
exports.CreateShopRequestOwnerIdTypeEnum = {
    Ktp: 'KTP',
    Sim: 'SIM',
    Passport: 'PASSPORT',
    Siup: 'SIUP',
    Nib: 'NIB'
};
/**
 * @export
 */
exports.CreateShopRequestShopOwningEnum = {
    DirectOwned: 'DIRECT_OWNED',
    Franchised: 'FRANCHISED'
};
/**
 * Check if a given object implements the CreateShopRequest interface.
 */
function instanceOfCreateShopRequest(value) {
    if (!('merchantId' in value) || value['merchantId'] === undefined)
        return false;
    if (!('shopParentType' in value) || value['shopParentType'] === undefined)
        return false;
    if (!('mainName' in value) || value['mainName'] === undefined)
        return false;
    if (!('externalShopId' in value) || value['externalShopId'] === undefined)
        return false;
    if (!('sizeType' in value) || value['sizeType'] === undefined)
        return false;
    return true;
}
function CreateShopRequestFromJSON(json) {
    return CreateShopRequestFromJSONTyped(json, false);
}
function CreateShopRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'merchantId': json['merchantId'],
        'parentDivisionId': json['parentDivisionId'] == null ? undefined : json['parentDivisionId'],
        'shopParentType': json['shopParentType'],
        'mainName': json['mainName'],
        'shopAddress': json['shopAddress'] == null ? undefined : (0, AddressInfo_1.AddressInfoFromJSON)(json['shopAddress']),
        'shopDesc': json['shopDesc'] == null ? undefined : json['shopDesc'],
        'externalShopId': json['externalShopId'],
        'logoUrlMap': json['logoUrlMap'] == null ? undefined : json['logoUrlMap'],
        'mccCodes': json['mccCodes'] == null ? undefined : json['mccCodes'],
        'sizeType': json['sizeType'],
        'ln': json['ln'] == null ? undefined : json['ln'],
        'lat': json['lat'] == null ? undefined : json['lat'],
        'taxNo': json['taxNo'] == null ? undefined : json['taxNo'],
        'brandName': json['brandName'] == null ? undefined : json['brandName'],
        'taxAddress': json['taxAddress'] == null ? undefined : (0, AddressInfo_1.AddressInfoFromJSON)(json['taxAddress']),
        'loyalty': json['loyalty'] == null ? undefined : json['loyalty'],
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'businessEntity': json['businessEntity'] == null ? undefined : json['businessEntity'],
        'businessDocs': json['businessDocs'] == null ? undefined : (json['businessDocs'].map(BusinessDocs_1.BusinessDocsFromJSON)),
        'ownerName': json['ownerName'] == null ? undefined : (0, UserName_1.UserNameFromJSON)(json['ownerName']),
        'ownerIdType': json['ownerIdType'] == null ? undefined : json['ownerIdType'],
        'ownerIdNo': json['ownerIdNo'] == null ? undefined : json['ownerIdNo'],
        'ownerAddress': json['ownerAddress'] == null ? undefined : (0, AddressInfo_1.AddressInfoFromJSON)(json['ownerAddress']),
        'ownerPhoneNumber': json['ownerPhoneNumber'] == null ? undefined : (0, MobileNoInfo_1.MobileNoInfoFromJSON)(json['ownerPhoneNumber']),
        'shopOwning': json['shopOwning'] == null ? undefined : json['shopOwning'],
        'deviceNumber': json['deviceNumber'] == null ? undefined : json['deviceNumber'],
        'posNumber': json['posNumber'] == null ? undefined : json['posNumber'],
        'directorPics': json['directorPics'] == null ? undefined : (json['directorPics'].map(PicInfo_1.PicInfoFromJSON)),
        'nonDirectorPics': json['nonDirectorPics'] == null ? undefined : (json['nonDirectorPics'].map(PicInfo_1.PicInfoFromJSON)),
        'shopBizType': json['shopBizType'] == null ? undefined : json['shopBizType'],
        'extInfo': json['extInfo'] == null ? undefined : json['extInfo'],
    };
}
function CreateShopRequestToJSON(json) {
    return CreateShopRequestToJSONTyped(json, false);
}
function CreateShopRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'merchantId': value['merchantId'],
        'parentDivisionId': value['parentDivisionId'],
        'shopParentType': value['shopParentType'],
        'mainName': value['mainName'],
        'shopAddress': (0, AddressInfo_1.AddressInfoToJSON)(value['shopAddress']),
        'shopDesc': value['shopDesc'],
        'externalShopId': value['externalShopId'],
        'logoUrlMap': value['logoUrlMap'],
        'mccCodes': value['mccCodes'],
        'sizeType': value['sizeType'],
        'ln': value['ln'],
        'lat': value['lat'],
        'taxNo': value['taxNo'],
        'brandName': value['brandName'],
        'taxAddress': (0, AddressInfo_1.AddressInfoToJSON)(value['taxAddress']),
        'loyalty': value['loyalty'],
        'apiVersion': value['apiVersion'],
        'businessEntity': value['businessEntity'],
        'businessDocs': value['businessDocs'] == null ? undefined : (value['businessDocs'].map(BusinessDocs_1.BusinessDocsToJSON)),
        'ownerName': (0, UserName_1.UserNameToJSON)(value['ownerName']),
        'ownerIdType': value['ownerIdType'],
        'ownerIdNo': value['ownerIdNo'],
        'ownerAddress': (0, AddressInfo_1.AddressInfoToJSON)(value['ownerAddress']),
        'ownerPhoneNumber': (0, MobileNoInfo_1.MobileNoInfoToJSON)(value['ownerPhoneNumber']),
        'shopOwning': value['shopOwning'],
        'deviceNumber': value['deviceNumber'],
        'posNumber': value['posNumber'],
        'directorPics': value['directorPics'] == null ? undefined : (value['directorPics'].map(PicInfo_1.PicInfoToJSON)),
        'nonDirectorPics': value['nonDirectorPics'] == null ? undefined : (value['nonDirectorPics'].map(PicInfo_1.PicInfoToJSON)),
        'shopBizType': value['shopBizType'],
        'extInfo': value['extInfo'],
    };
}
const propertyValidationAttributesMap = {
    merchantId: {
        maxLength: 21,
    },
    mainName: {
        maxLength: 256,
    },
    externalShopId: {
        maxLength: 64,
    },
    taxNo: {
        pattern: new RegExp('/^[0-9]{15}$/'.slice(1, -1)),
    },
};
function validateCreateShopRequest(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('merchantId', value.merchantId, propertyValidationAttributesMap['merchantId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('mainName', value.mainName, propertyValidationAttributesMap['mainName']));
    validationErrorContexts.push(...(0, AddressInfo_1.validateAddressInfo)(value.shopAddress));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('externalShopId', value.externalShopId, propertyValidationAttributesMap['externalShopId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('taxNo', value.taxNo, propertyValidationAttributesMap['taxNo']));
    validationErrorContexts.push(...(0, AddressInfo_1.validateAddressInfo)(value.taxAddress));
    validationErrorContexts.push(...(0, UserName_1.validateUserName)(value.ownerName));
    validationErrorContexts.push(...(0, AddressInfo_1.validateAddressInfo)(value.ownerAddress));
    validationErrorContexts.push(...(0, MobileNoInfo_1.validateMobileNoInfo)(value.ownerPhoneNumber));
    return validationErrorContexts;
}
