"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DivisionResourceInfoPgDivisionFlagEnum = exports.DivisionResourceInfoDivisionTypeEnum = exports.DivisionResourceInfoParentRoleTypeEnum = void 0;
exports.instanceOfDivisionResourceInfo = instanceOfDivisionResourceInfo;
exports.DivisionResourceInfoFromJSON = DivisionResourceInfoFromJSON;
exports.DivisionResourceInfoFromJSONTyped = DivisionResourceInfoFromJSONTyped;
exports.DivisionResourceInfoToJSON = DivisionResourceInfoToJSON;
exports.DivisionResourceInfoToJSONTyped = DivisionResourceInfoToJSONTyped;
exports.validateDivisionResourceInfo = validateDivisionResourceInfo;
const AddressInfo_1 = require("./AddressInfo");
/**
 * @export
 */
exports.DivisionResourceInfoParentRoleTypeEnum = {
    Merchant: 'MERCHANT',
    Division: 'DIVISION',
    ExternalDivision: 'EXTERNAL_DIVISION'
};
/**
 * @export
 */
exports.DivisionResourceInfoDivisionTypeEnum = {
    Region: 'REGION',
    Area: 'AREA',
    Branch: 'BRANCH',
    Outlet: 'OUTLET',
    Store: 'STORE',
    Kiosk: 'KIOSK',
    Stall: 'STALL',
    Counter: 'COUNTER',
    Booth: 'BOOTH',
    PointOfSale: 'POINT_OF_SALE',
    VendingMachine: 'VENDING_MACHINE'
};
/**
 * @export
 */
exports.DivisionResourceInfoPgDivisionFlagEnum = {
    True: 'true',
    False: 'false'
};
/**
 * Check if a given object implements the DivisionResourceInfo interface.
 */
function instanceOfDivisionResourceInfo(value) {
    return true;
}
function DivisionResourceInfoFromJSON(json) {
    return DivisionResourceInfoFromJSONTyped(json, false);
}
function DivisionResourceInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'divisionId': json['divisionId'] == null ? undefined : json['divisionId'],
        'merchantId': json['merchantId'] == null ? undefined : json['merchantId'],
        'parentRoleType': json['parentRoleType'] == null ? undefined : json['parentRoleType'],
        'contactAddress': json['contactAddress'] == null ? undefined : (0, AddressInfo_1.AddressInfoFromJSON)(json['contactAddress']),
        'divisionDescription': json['divisionDescription'] == null ? undefined : json['divisionDescription'],
        'divisionType': json['divisionType'] == null ? undefined : json['divisionType'],
        'divisionName': json['divisionName'] == null ? undefined : json['divisionName'],
        'externalDivisionId': json['externalDivisionId'] == null ? undefined : json['externalDivisionId'],
        'pgDivisionFlag': json['pgDivisionFlag'] == null ? undefined : json['pgDivisionFlag'],
    };
}
function DivisionResourceInfoToJSON(json) {
    return DivisionResourceInfoToJSONTyped(json, false);
}
function DivisionResourceInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'divisionId': value['divisionId'],
        'merchantId': value['merchantId'],
        'parentRoleType': value['parentRoleType'],
        'contactAddress': (0, AddressInfo_1.AddressInfoToJSON)(value['contactAddress']),
        'divisionDescription': value['divisionDescription'],
        'divisionType': value['divisionType'],
        'divisionName': value['divisionName'],
        'externalDivisionId': value['externalDivisionId'],
        'pgDivisionFlag': value['pgDivisionFlag'],
    };
}
const propertyValidationAttributesMap = {};
function validateDivisionResourceInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, AddressInfo_1.validateAddressInfo)(value.contactAddress));
    return validationErrorContexts;
}
