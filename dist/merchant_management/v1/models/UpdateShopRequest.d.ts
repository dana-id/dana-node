/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { BusinessDocs } from './BusinessDocs';
import type { UserName } from './UserName';
import type { MobileNoInfo } from './MobileNoInfo';
import type { PicInfo } from './PicInfo';
import type { AddressInfo } from './AddressInfo';
/**
 *
 * @export
 * @interface UpdateShopRequest
 */
export interface UpdateShopRequest {
    /**
     * Shop identifier. Length depends on shopIdType - INNER_ID (21 max), EXTERNAL_ID (64 max)
     * @type {string}
     * @memberof UpdateShopRequest
     */
    shopId: string;
    /**
     * Merchant identifier
     * @type {string}
     * @memberof UpdateShopRequest
     */
    merchantId: string;
    /**
     * Shop identifier type
     * @type {string}
     * @memberof UpdateShopRequest
     */
    shopIdType: UpdateShopRequestShopIdTypeEnum;
    /**
     * Shop name
     * @type {string}
     * @memberof UpdateShopRequest
     */
    mainName?: string;
    /**
     *
     * @type {AddressInfo}
     * @memberof UpdateShopRequest
     */
    shopAddress: AddressInfo;
    /**
     * Shop description
     * @type {string}
     * @memberof UpdateShopRequest
     */
    shopDesc?: string;
    /**
     * New external shop identifier
     * @type {string}
     * @memberof UpdateShopRequest
     */
    newExternalShopId?: string;
    /**
     * Merchant category code
     * @type {Array<string>}
     * @memberof UpdateShopRequest
     */
    mccCodes?: Array<string>;
    /**
     * Logo URL map with base64 encoded images. Keys can be LOGO, PC_LOGO, MOBILE_LOGO
     * @type {{ [key: string]: string; }}
     * @memberof UpdateShopRequest
     */
    logoUrlMap?: {
        [key: string]: string;
    };
    /**
     * Extend information
     * @type {{ [key: string]: any; }}
     * @memberof UpdateShopRequest
     */
    extInfo?: {
        [key: string]: any;
    };
    /**
     * Size type
     * @type {string}
     * @memberof UpdateShopRequest
     */
    sizeType?: UpdateShopRequestSizeTypeEnum;
    /**
     * Longitude of shop's location
     * @type {string}
     * @memberof UpdateShopRequest
     */
    ln?: string;
    /**
     * Latitude of shop's location
     * @type {string}
     * @memberof UpdateShopRequest
     */
    lat?: string;
    /**
     * Flag for loyalty category
     * @type {string}
     * @memberof UpdateShopRequest
     */
    loyalty?: UpdateShopRequestLoyaltyEnum;
    /**
     *
     * @type {AddressInfo}
     * @memberof UpdateShopRequest
     */
    ownerAddress?: AddressInfo;
    /**
     *
     * @type {UserName}
     * @memberof UpdateShopRequest
     */
    ownerName?: UserName;
    /**
     *
     * @type {MobileNoInfo}
     * @memberof UpdateShopRequest
     */
    ownerPhoneNumber?: MobileNoInfo;
    /**
     * Owner identifier type
     * @type {string}
     * @memberof UpdateShopRequest
     */
    ownerIdType?: UpdateShopRequestOwnerIdTypeEnum;
    /**
     * Owner identifier number. Length depends on ownerIdType - KTP (16), SIM (12-14), Passport (8), NIB (>=13), SIUP (free text)
     * @type {string}
     * @memberof UpdateShopRequest
     */
    ownerIdNo?: string;
    /**
     * Device number
     * @type {string}
     * @memberof UpdateShopRequest
     */
    deviceNumber?: string;
    /**
     * POS number
     * @type {string}
     * @memberof UpdateShopRequest
     */
    posNumber?: string;
    /**
     * API version flag. Use > 2 for new attributes
     * @type {string}
     * @memberof UpdateShopRequest
     */
    apiVersion?: string;
    /**
     * Business entity type
     * @type {string}
     * @memberof UpdateShopRequest
     */
    businessEntity?: UpdateShopRequestBusinessEntityEnum;
    /**
     * Shop owning information
     * @type {string}
     * @memberof UpdateShopRequest
     */
    shopOwning?: UpdateShopRequestShopOwningEnum;
    /**
     * Shop business type
     * @type {string}
     * @memberof UpdateShopRequest
     */
    shopBizType?: UpdateShopRequestShopBizTypeEnum;
    /**
     * Business documents. "individu" entity can only use KTP and SIM. Other entities can use SIUP and NIB
     * @type {Array<BusinessDocs>}
     * @memberof UpdateShopRequest
     */
    businessDocs?: Array<BusinessDocs>;
    /**
     * Business end date, in format YYYY-MM-dd
     * @type {string}
     * @memberof UpdateShopRequest
     */
    businessEndDate?: string;
    /**
     * Tax number (NPWP). Must be 15 digits
     * @type {string}
     * @memberof UpdateShopRequest
     */
    taxNo?: string;
    /**
     *
     * @type {AddressInfo}
     * @memberof UpdateShopRequest
     */
    taxAddress?: AddressInfo;
    /**
     * Brand name on legal name or tax name
     * @type {string}
     * @memberof UpdateShopRequest
     */
    brandName?: string;
    /**
     * Director as a PIC of shop
     * @type {Array<PicInfo>}
     * @memberof UpdateShopRequest
     */
    directorPics?: Array<PicInfo>;
    /**
     * Non director which become an PIC of shop
     * @type {Array<PicInfo>}
     * @memberof UpdateShopRequest
     */
    nonDirectorPics?: Array<PicInfo>;
}
/**
 * @export
 */
export declare const UpdateShopRequestShopIdTypeEnum: {
    readonly InnerId: "INNER_ID";
    readonly ExternalId: "EXTERNAL_ID";
};
export type UpdateShopRequestShopIdTypeEnum = typeof UpdateShopRequestShopIdTypeEnum[keyof typeof UpdateShopRequestShopIdTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateShopRequestSizeTypeEnum: {
    readonly Umi: "UMI";
    readonly Uke: "UKE";
    readonly Ume: "UME";
    readonly Ube: "UBE";
};
export type UpdateShopRequestSizeTypeEnum = typeof UpdateShopRequestSizeTypeEnum[keyof typeof UpdateShopRequestSizeTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateShopRequestLoyaltyEnum: {
    readonly True: "true";
    readonly False: "false";
};
export type UpdateShopRequestLoyaltyEnum = typeof UpdateShopRequestLoyaltyEnum[keyof typeof UpdateShopRequestLoyaltyEnum] | '';
/**
 * @export
 */
export declare const UpdateShopRequestOwnerIdTypeEnum: {
    readonly Ktp: "KTP";
    readonly Sim: "SIM";
    readonly Passport: "PASSPORT";
    readonly Siup: "SIUP";
    readonly Nib: "NIB";
};
export type UpdateShopRequestOwnerIdTypeEnum = typeof UpdateShopRequestOwnerIdTypeEnum[keyof typeof UpdateShopRequestOwnerIdTypeEnum] | '';
/**
 * @export
 */
export declare const UpdateShopRequestBusinessEntityEnum: {
    readonly Pt: "pt";
    readonly Cv: "cv";
    readonly Individu: "individu";
    readonly UsahaDagang: "usaha_dagang";
    readonly Yayasan: "yayasan";
    readonly Koperasi: "koperasi";
};
export type UpdateShopRequestBusinessEntityEnum = typeof UpdateShopRequestBusinessEntityEnum[keyof typeof UpdateShopRequestBusinessEntityEnum] | '';
/**
 * @export
 */
export declare const UpdateShopRequestShopOwningEnum: {
    readonly DirectOwned: "DIRECT_OWNED";
    readonly Franchised: "FRANCHISED";
};
export type UpdateShopRequestShopOwningEnum = typeof UpdateShopRequestShopOwningEnum[keyof typeof UpdateShopRequestShopOwningEnum] | '';
/**
 * @export
 */
export declare const UpdateShopRequestShopBizTypeEnum: {
    readonly Online: "ONLINE";
    readonly Offline: "OFFLINE";
};
export type UpdateShopRequestShopBizTypeEnum = typeof UpdateShopRequestShopBizTypeEnum[keyof typeof UpdateShopRequestShopBizTypeEnum] | '';
/**
 * Check if a given object implements the UpdateShopRequest interface.
 */
export declare function instanceOfUpdateShopRequest(value: object): value is UpdateShopRequest;
export declare function UpdateShopRequestFromJSON(json: any): UpdateShopRequest;
export declare function UpdateShopRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateShopRequest;
export declare function UpdateShopRequestToJSON(json: any): UpdateShopRequest;
export declare function UpdateShopRequestToJSONTyped(value?: UpdateShopRequest | null, ignoreDiscriminator?: boolean): any;
export declare function validateUpdateShopRequest(value: UpdateShopRequest): ValidationErrorContext[];
