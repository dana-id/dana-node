"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryMerchantResourceResponse = instanceOfQueryMerchantResourceResponse;
exports.QueryMerchantResourceResponseFromJSON = QueryMerchantResourceResponseFromJSON;
exports.QueryMerchantResourceResponseFromJSONTyped = QueryMerchantResourceResponseFromJSONTyped;
exports.QueryMerchantResourceResponseToJSON = QueryMerchantResourceResponseToJSON;
exports.QueryMerchantResourceResponseToJSONTyped = QueryMerchantResourceResponseToJSONTyped;
exports.validateQueryMerchantResourceResponse = validateQueryMerchantResourceResponse;
const QueryMerchantResourceResponseResponse_1 = require("./QueryMerchantResourceResponseResponse");
/**
 * Check if a given object implements the QueryMerchantResourceResponse interface.
 */
function instanceOfQueryMerchantResourceResponse(value) {
    if (!('response' in value) || value['response'] === undefined)
        return false;
    return true;
}
function QueryMerchantResourceResponseFromJSON(json) {
    return QueryMerchantResourceResponseFromJSONTyped(json, false);
}
function QueryMerchantResourceResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'response': (0, QueryMerchantResourceResponseResponse_1.QueryMerchantResourceResponseResponseFromJSON)(json['response']),
    };
}
function QueryMerchantResourceResponseToJSON(json) {
    return QueryMerchantResourceResponseToJSONTyped(json, false);
}
function QueryMerchantResourceResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'response': (0, QueryMerchantResourceResponseResponse_1.QueryMerchantResourceResponseResponseToJSON)(value['response']),
    };
}
const propertyValidationAttributesMap = {};
function validateQueryMerchantResourceResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, QueryMerchantResourceResponseResponse_1.validateQueryMerchantResourceResponseResponse)(value.response));
    return validationErrorContexts;
}
