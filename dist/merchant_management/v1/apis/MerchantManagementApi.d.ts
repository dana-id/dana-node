/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import * as runtime from '../../../runtime';
import type { CreateDivisionRequest, CreateDivisionResponse, CreateShopRequest, CreateShopResponse, QueryDivisionRequest, QueryDivisionResponse, QueryMerchantResourceRequest, QueryMerchantResourceResponse, QueryShopRequest, QueryShopResponse, UpdateDivisionRequest, UpdateDivisionResponse, UpdateShopRequest, UpdateShopResponse } from '../models/index';
/**
 *
 */
export declare class MerchantManagementApi extends runtime.BaseAPI {
    partnerId: string;
    privateKey: string;
    origin: string;
    env: string;
    clientSecret: string;
    constructor({ partnerId, privateKey, origin, env, clientSecret }: {
        partnerId?: string;
        privateKey?: string;
        origin?: string;
        env?: string;
        clientSecret?: string;
    });
    /**
     * This API is used to create a new division
     * Create Division
     */
    createDivision(createDivisionRequest: CreateDivisionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateDivisionResponse>;
    /**
     * Create shop under merchant or division
     * Member – Create Shop
     */
    createShop(createShopRequest: CreateShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateShopResponse>;
    /**
     * This API is used to obtain information of division
     * Query Division
     */
    queryDivision(queryDivisionRequest: QueryDivisionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryDivisionResponse>;
    /**
     * The interface is check merchant resource info (account balance merchant)
     * Member – Merchant Open API Check Disbursement Account
     */
    queryMerchantResource(queryMerchantResourceRequest: QueryMerchantResourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryMerchantResourceResponse>;
    /**
     * This API is used to obtain information of shop information
     * Member – Query Shop
     */
    queryShop(queryShopRequest: QueryShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryShopResponse>;
    /**
     * This API is used to update the division information
     * Update Division
     */
    updateDivision(updateDivisionRequest: UpdateDivisionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateDivisionResponse>;
    /**
     * This API is used to update the shop information
     * Update Shop
     */
    updateShop(updateShopRequest: UpdateShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateShopResponse>;
}
