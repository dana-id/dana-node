/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Buyer } from './Buyer';
import type { Goods } from './Goods';
import type { ShippingInfo } from './ShippingInfo';
/**
 *
 * @export
 * @interface OrderApiObject
 */
export interface OrderApiObject {
    /**
     *
     * @type {string}
     * @memberof OrderApiObject
     */
    orderTitle: string;
    /**
     *
     * @type {string}
     * @memberof OrderApiObject
     */
    merchantTransType?: string;
    /**
     *
     * @type {Buyer}
     * @memberof OrderApiObject
     */
    buyer?: Buyer;
    /**
     *
     * @type {Array<Goods>}
     * @memberof OrderApiObject
     */
    goods?: Array<Goods>;
    /**
     *
     * @type {Array<ShippingInfo>}
     * @memberof OrderApiObject
     */
    shippingInfo?: Array<ShippingInfo>;
    /**
     *
     * @type {string}
     * @memberof OrderApiObject
     */
    extendInfo?: string;
    /**
     *
     * @type {string}
     * @memberof OrderApiObject
     */
    scenario?: OrderApiObjectScenarioEnum;
}
/**
 * @export
 */
export declare const OrderApiObjectScenarioEnum: {
    readonly Api: "API";
};
export type OrderApiObjectScenarioEnum = typeof OrderApiObjectScenarioEnum[keyof typeof OrderApiObjectScenarioEnum];
/**
 * Check if a given object implements the OrderApiObject interface.
 */
export declare function instanceOfOrderApiObject(value: object): value is OrderApiObject;
export declare function OrderApiObjectFromJSON(json: any): OrderApiObject;
export declare function OrderApiObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderApiObject;
export declare function OrderApiObjectToJSON(json: any): OrderApiObject;
export declare function OrderApiObjectToJSONTyped(value?: OrderApiObject | null, ignoreDiscriminator?: boolean): any;
export declare function validateOrderApiObject(value: OrderApiObject): ValidationErrorContext[];
