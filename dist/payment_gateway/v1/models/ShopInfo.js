"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfShopInfo = instanceOfShopInfo;
exports.ShopInfoFromJSON = ShopInfoFromJSON;
exports.ShopInfoFromJSONTyped = ShopInfoFromJSONTyped;
exports.ShopInfoToJSON = ShopInfoToJSON;
exports.ShopInfoToJSONTyped = ShopInfoToJSONTyped;
exports.validateShopInfo = validateShopInfo;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the ShopInfo interface.
 */
function instanceOfShopInfo(value) {
    return true;
}
function ShopInfoFromJSON(json) {
    return ShopInfoFromJSONTyped(json, false);
}
function ShopInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'shopId': json['shopId'] == null ? undefined : json['shopId'],
        'externalShopId': json['externalShopId'] == null ? undefined : json['externalShopId'],
        'operatorId': json['operatorId'] == null ? undefined : json['operatorId'],
        'shopAddress': json['shopAddress'] == null ? undefined : json['shopAddress'],
        'divisionId': json['divisionId'] == null ? undefined : json['divisionId'],
        'externalDivisionId': json['externalDivisionId'] == null ? undefined : json['externalDivisionId'],
        'divisionType': json['divisionType'] == null ? undefined : json['divisionType'],
        'shopName': json['shopName'] == null ? undefined : json['shopName'],
    };
}
function ShopInfoToJSON(json) {
    return ShopInfoToJSONTyped(json, false);
}
function ShopInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'shopId': value['shopId'],
        'externalShopId': value['externalShopId'],
        'operatorId': value['operatorId'],
        'shopAddress': value['shopAddress'],
        'divisionId': value['divisionId'],
        'externalDivisionId': value['externalDivisionId'],
        'divisionType': value['divisionType'],
        'shopName': value['shopName'],
    };
}
const propertyValidationAttributesMap = {
    shopId: {
        maxLength: 64,
    },
    externalShopId: {
        maxLength: 64,
    },
    operatorId: {
        maxLength: 32,
    },
    shopAddress: {
        maxLength: 256,
    },
    divisionId: {
        maxLength: 64,
    },
    externalDivisionId: {
        maxLength: 64,
    },
    divisionType: {
        maxLength: 32,
    },
    shopName: {
        maxLength: 128,
    },
};
function validateShopInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('shopId', value.shopId, propertyValidationAttributesMap['shopId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('externalShopId', value.externalShopId, propertyValidationAttributesMap['externalShopId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('operatorId', value.operatorId, propertyValidationAttributesMap['operatorId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('shopAddress', value.shopAddress, propertyValidationAttributesMap['shopAddress']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('divisionId', value.divisionId, propertyValidationAttributesMap['divisionId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('externalDivisionId', value.externalDivisionId, propertyValidationAttributesMap['externalDivisionId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('divisionType', value.divisionType, propertyValidationAttributesMap['divisionType']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('shopName', value.shopName, propertyValidationAttributesMap['shopName']));
    return validationErrorContexts;
}
