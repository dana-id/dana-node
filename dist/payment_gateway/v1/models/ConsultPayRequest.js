"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfConsultPayRequest = instanceOfConsultPayRequest;
exports.ConsultPayRequestFromJSON = ConsultPayRequestFromJSON;
exports.ConsultPayRequestFromJSONTyped = ConsultPayRequestFromJSONTyped;
exports.ConsultPayRequestToJSON = ConsultPayRequestToJSON;
exports.ConsultPayRequestToJSONTyped = ConsultPayRequestToJSONTyped;
exports.validateConsultPayRequest = validateConsultPayRequest;
const runtime_1 = require("../../../runtime");
const Money_1 = require("./Money");
const ConsultPayRequestAdditionalInfo_1 = require("./ConsultPayRequestAdditionalInfo");
/**
 * Check if a given object implements the ConsultPayRequest interface.
 */
function instanceOfConsultPayRequest(value) {
    if (!('merchantId' in value) || value['merchantId'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('additionalInfo' in value) || value['additionalInfo'] === undefined)
        return false;
    return true;
}
function ConsultPayRequestFromJSON(json) {
    return ConsultPayRequestFromJSONTyped(json, false);
}
function ConsultPayRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'merchantId': json['merchantId'],
        'amount': (0, Money_1.MoneyFromJSON)(json['amount']),
        'additionalInfo': (0, ConsultPayRequestAdditionalInfo_1.ConsultPayRequestAdditionalInfoFromJSON)(json['additionalInfo']),
    };
}
function ConsultPayRequestToJSON(json) {
    return ConsultPayRequestToJSONTyped(json, false);
}
function ConsultPayRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'merchantId': value['merchantId'],
        'amount': (0, Money_1.MoneyToJSON)(value['amount']),
        'additionalInfo': (0, ConsultPayRequestAdditionalInfo_1.ConsultPayRequestAdditionalInfoToJSON)(value['additionalInfo']),
    };
}
const propertyValidationAttributesMap = {
    merchantId: {
        maxLength: 64,
    },
};
function validateConsultPayRequest(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('merchantId', value.merchantId, propertyValidationAttributesMap['merchantId']));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.amount));
    validationErrorContexts.push(...(0, ConsultPayRequestAdditionalInfo_1.validateConsultPayRequestAdditionalInfo)(value.additionalInfo));
    return validationErrorContexts;
}
