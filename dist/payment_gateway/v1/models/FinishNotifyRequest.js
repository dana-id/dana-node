"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFinishNotifyRequest = instanceOfFinishNotifyRequest;
exports.FinishNotifyRequestFromJSON = FinishNotifyRequestFromJSON;
exports.FinishNotifyRequestFromJSONTyped = FinishNotifyRequestFromJSONTyped;
exports.FinishNotifyRequestToJSON = FinishNotifyRequestToJSON;
exports.FinishNotifyRequestToJSONTyped = FinishNotifyRequestToJSONTyped;
exports.validateFinishNotifyRequest = validateFinishNotifyRequest;
const runtime_1 = require("../../../runtime");
const Money_1 = require("./Money");
const FinishNotifyRequestAdditionalInfo_1 = require("./FinishNotifyRequestAdditionalInfo");
/**
 * Check if a given object implements the FinishNotifyRequest interface.
 */
function instanceOfFinishNotifyRequest(value) {
    if (!('originalPartnerReferenceNo' in value) || value['originalPartnerReferenceNo'] === undefined)
        return false;
    if (!('originalReferenceNo' in value) || value['originalReferenceNo'] === undefined)
        return false;
    if (!('merchantId' in value) || value['merchantId'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('latestTransactionStatus' in value) || value['latestTransactionStatus'] === undefined)
        return false;
    if (!('createdTime' in value) || value['createdTime'] === undefined)
        return false;
    if (!('finishedTime' in value) || value['finishedTime'] === undefined)
        return false;
    return true;
}
function FinishNotifyRequestFromJSON(json) {
    return FinishNotifyRequestFromJSONTyped(json, false);
}
function FinishNotifyRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'originalPartnerReferenceNo': json['originalPartnerReferenceNo'],
        'originalReferenceNo': json['originalReferenceNo'],
        'originalExternalId': json['originalExternalId'] == null ? undefined : json['originalExternalId'],
        'merchantId': json['merchantId'],
        'subMerchantId': json['subMerchantId'] == null ? undefined : json['subMerchantId'],
        'amount': (0, Money_1.MoneyFromJSON)(json['amount']),
        'latestTransactionStatus': json['latestTransactionStatus'],
        'transactionStatusDesc': json['transactionStatusDesc'] == null ? undefined : json['transactionStatusDesc'],
        'createdTime': json['createdTime'],
        'finishedTime': json['finishedTime'],
        'externalStoreId': json['externalStoreId'] == null ? undefined : json['externalStoreId'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : (0, FinishNotifyRequestAdditionalInfo_1.FinishNotifyRequestAdditionalInfoFromJSON)(json['additionalInfo']),
    };
}
function FinishNotifyRequestToJSON(json) {
    return FinishNotifyRequestToJSONTyped(json, false);
}
function FinishNotifyRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'originalPartnerReferenceNo': value['originalPartnerReferenceNo'],
        'originalReferenceNo': value['originalReferenceNo'],
        'originalExternalId': value['originalExternalId'],
        'merchantId': value['merchantId'],
        'subMerchantId': value['subMerchantId'],
        'amount': (0, Money_1.MoneyToJSON)(value['amount']),
        'latestTransactionStatus': value['latestTransactionStatus'],
        'transactionStatusDesc': value['transactionStatusDesc'],
        'createdTime': value['createdTime'],
        'finishedTime': value['finishedTime'],
        'externalStoreId': value['externalStoreId'],
        'additionalInfo': (0, FinishNotifyRequestAdditionalInfo_1.FinishNotifyRequestAdditionalInfoToJSON)(value['additionalInfo']),
    };
}
const propertyValidationAttributesMap = {
    originalPartnerReferenceNo: {
        maxLength: 64,
    },
    originalReferenceNo: {
        maxLength: 64,
    },
    originalExternalId: {
        maxLength: 36,
    },
    merchantId: {
        maxLength: 64,
    },
    subMerchantId: {
        maxLength: 32,
    },
    latestTransactionStatus: {
        maxLength: 2,
    },
    transactionStatusDesc: {
        maxLength: 50,
    },
    createdTime: {
        maxLength: 25,
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
    finishedTime: {
        maxLength: 25,
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
    externalStoreId: {
        maxLength: 64,
    },
};
function validateFinishNotifyRequest(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('originalPartnerReferenceNo', value.originalPartnerReferenceNo, propertyValidationAttributesMap['originalPartnerReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('originalReferenceNo', value.originalReferenceNo, propertyValidationAttributesMap['originalReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('originalExternalId', value.originalExternalId, propertyValidationAttributesMap['originalExternalId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('merchantId', value.merchantId, propertyValidationAttributesMap['merchantId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('subMerchantId', value.subMerchantId, propertyValidationAttributesMap['subMerchantId']));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.amount));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('latestTransactionStatus', value.latestTransactionStatus, propertyValidationAttributesMap['latestTransactionStatus']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('transactionStatusDesc', value.transactionStatusDesc, propertyValidationAttributesMap['transactionStatusDesc']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('createdTime', value.createdTime, propertyValidationAttributesMap['createdTime']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('finishedTime', value.finishedTime, propertyValidationAttributesMap['finishedTime']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('externalStoreId', value.externalStoreId, propertyValidationAttributesMap['externalStoreId']));
    validationErrorContexts.push(...(0, FinishNotifyRequestAdditionalInfo_1.validateFinishNotifyRequestAdditionalInfo)(value.additionalInfo));
    return validationErrorContexts;
}
