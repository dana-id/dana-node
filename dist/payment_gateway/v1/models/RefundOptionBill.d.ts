/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Money } from './Money';
/**
 *
 * @export
 * @interface RefundOptionBill
 */
export interface RefundOptionBill {
    /**
     * Payment method name. The enums:<br>
     *   * BALANCE - Payment method with balance<br>
     *   * COUPON - Payment method with coupon<br>
     *   * NET_BANKING - Payment method with internet banking<br>
     *   * CREDIT_CARD - Payment method with credit card<br>
     *   * DEBIT_CARD - Payment method with debit card<br>
     *   * VIRTUAL_ACCOUNT - Payment method with virtual account<br>
     *   * OTC - Payment method with OTC<br>
     *   * DIRECT_DEBIT_CREDIT_CARD - Payment method with direct debit of credit card<br>
     *   * DIRECT_DEBIT_DEBIT_CARD - Payment method with direct debit of debit card<br>
     *   * ONLINE_CREDIT - Payment method with online Credit<br>
     *   * LOAN_CREDIT - Payment method with DANA Cicil<br>
     *   * NETWORK_PAY - Payment method with e-wallet<br>
     *   * CARD - Payment method with card<br>
     *
     * @type {string}
     * @memberof RefundOptionBill
     */
    payMethod?: RefundOptionBillPayMethodEnum;
    /**
     * Trans amount. Contains two sub-fields:<br>
     * 1. Value: Transaction amount, including the cents<br>
     * 2. Currency: Currency code based on ISO<br>
     *
     * @type {Money}
     * @memberof RefundOptionBill
     */
    transAmount?: Money;
}
/**
 * @export
 */
export declare const RefundOptionBillPayMethodEnum: {
    readonly Balance: "BALANCE";
    readonly Coupon: "COUPON";
    readonly NetBanking: "NET_BANKING";
    readonly CreditCard: "CREDIT_CARD";
    readonly DebitCard: "DEBIT_CARD";
    readonly VirtualAccount: "VIRTUAL_ACCOUNT";
    readonly Otc: "OTC";
    readonly DirectDebitCreditCard: "DIRECT_DEBIT_CREDIT_CARD";
    readonly DirectDebitDebitCard: "DIRECT_DEBIT_DEBIT_CARD";
    readonly OnlineCredit: "ONLINE_CREDIT";
    readonly LoanCredit: "LOAN_CREDIT";
    readonly NetworkPay: "NETWORK_PAY";
    readonly Card: "CARD";
};
export type RefundOptionBillPayMethodEnum = typeof RefundOptionBillPayMethodEnum[keyof typeof RefundOptionBillPayMethodEnum] | '';
/**
 * Check if a given object implements the RefundOptionBill interface.
 */
export declare function instanceOfRefundOptionBill(value: object): value is RefundOptionBill;
export declare function RefundOptionBillFromJSON(json: any): RefundOptionBill;
export declare function RefundOptionBillFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundOptionBill;
export declare function RefundOptionBillToJSON(json: any): RefundOptionBill;
export declare function RefundOptionBillToJSONTyped(value?: RefundOptionBill | null, ignoreDiscriminator?: boolean): any;
export declare function validateRefundOptionBill(value: RefundOptionBill): ValidationErrorContext[];
