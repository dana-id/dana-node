/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Buyer } from './Buyer';
import type { Goods } from './Goods';
import type { ShippingInfo } from './ShippingInfo';
/**
 *
 * @export
 * @interface OrderBase
 */
export interface OrderBase {
    /**
     * Additional information of order title
     * @type {string}
     * @memberof OrderBase
     */
    orderTitle: string;
    /**
     * Additional information of merchant transaction type
     * @type {string}
     * @memberof OrderBase
     */
    merchantTransType?: string;
    /**
     * Additional information of buyer
     * @type {Buyer}
     * @memberof OrderBase
     */
    buyer?: Buyer;
    /**
     * Additional information of goods
     * @type {Array<Goods>}
     * @memberof OrderBase
     */
    goods?: Array<Goods>;
    /**
     * Additional information of shipping info
     * @type {Array<ShippingInfo>}
     * @memberof OrderBase
     */
    shippingInfo?: Array<ShippingInfo>;
    /**
     * Additional information of extend
     * @type {string}
     * @memberof OrderBase
     */
    extendInfo?: string;
}
/**
 * Check if a given object implements the OrderBase interface.
 */
export declare function instanceOfOrderBase(value: object): value is OrderBase;
export declare function OrderBaseFromJSON(json: any): OrderBase;
export declare function OrderBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderBase;
export declare function OrderBaseToJSON(json: any): OrderBase;
export declare function OrderBaseToJSONTyped(value?: OrderBase | null, ignoreDiscriminator?: boolean): any;
export declare function validateOrderBase(value: OrderBase): ValidationErrorContext[];
