"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreateOrderBaseRequest = instanceOfCreateOrderBaseRequest;
exports.CreateOrderBaseRequestFromJSON = CreateOrderBaseRequestFromJSON;
exports.CreateOrderBaseRequestFromJSONTyped = CreateOrderBaseRequestFromJSONTyped;
exports.CreateOrderBaseRequestToJSON = CreateOrderBaseRequestToJSON;
exports.CreateOrderBaseRequestToJSONTyped = CreateOrderBaseRequestToJSONTyped;
const Money_1 = require("./Money");
const UrlParam_1 = require("./UrlParam");
/**
 * Check if a given object implements the CreateOrderBaseRequest interface.
 */
function instanceOfCreateOrderBaseRequest(value) {
    if (!('partnerReferenceNo' in value) || value['partnerReferenceNo'] === undefined)
        return false;
    if (!('merchantId' in value) || value['merchantId'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('urlParams' in value) || value['urlParams'] === undefined)
        return false;
    return true;
}
function CreateOrderBaseRequestFromJSON(json) {
    return CreateOrderBaseRequestFromJSONTyped(json, false);
}
function CreateOrderBaseRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'partnerReferenceNo': json['partnerReferenceNo'],
        'merchantId': json['merchantId'],
        'amount': (0, Money_1.MoneyFromJSON)(json['amount']),
        'subMerchantId': json['subMerchantId'] == null ? undefined : json['subMerchantId'],
        'externalStoreId': json['externalStoreId'] == null ? undefined : json['externalStoreId'],
        'validUpTo': json['validUpTo'] == null ? undefined : json['validUpTo'],
        'disabledPayMethods': json['disabledPayMethods'] == null ? undefined : json['disabledPayMethods'],
        'urlParams': (json['urlParams'].map(UrlParam_1.UrlParamFromJSON)),
    };
}
function CreateOrderBaseRequestToJSON(json) {
    return CreateOrderBaseRequestToJSONTyped(json, false);
}
function CreateOrderBaseRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'partnerReferenceNo': value['partnerReferenceNo'],
        'merchantId': value['merchantId'],
        'amount': (0, Money_1.MoneyToJSON)(value['amount']),
        'subMerchantId': value['subMerchantId'],
        'externalStoreId': value['externalStoreId'],
        'validUpTo': value['validUpTo'],
        'disabledPayMethods': value['disabledPayMethods'],
        'urlParams': (value['urlParams'].map(UrlParam_1.UrlParamToJSON)),
    };
}
