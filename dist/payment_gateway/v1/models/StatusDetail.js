"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusDetailAcquirementStatusEnum = void 0;
exports.instanceOfStatusDetail = instanceOfStatusDetail;
exports.StatusDetailFromJSON = StatusDetailFromJSON;
exports.StatusDetailFromJSONTyped = StatusDetailFromJSONTyped;
exports.StatusDetailToJSON = StatusDetailToJSON;
exports.StatusDetailToJSONTyped = StatusDetailToJSONTyped;
exports.validateStatusDetail = validateStatusDetail;
const runtime_1 = require("../../../runtime");
/**
 * @export
 */
exports.StatusDetailAcquirementStatusEnum = {
    Init: 'INIT',
    Success: 'SUCCESS',
    Closed: 'CLOSED',
    Paying: 'PAYING',
    MerchantAccept: 'MERCHANT_ACCEPT',
    Cancelled: 'CANCELLED'
};
/**
 * Check if a given object implements the StatusDetail interface.
 */
function instanceOfStatusDetail(value) {
    if (!('acquirementStatus' in value) || value['acquirementStatus'] === undefined)
        return false;
    if (!('frozen' in value) || value['frozen'] === undefined)
        return false;
    if (!('cancelled' in value) || value['cancelled'] === undefined)
        return false;
    return true;
}
function StatusDetailFromJSON(json) {
    return StatusDetailFromJSONTyped(json, false);
}
function StatusDetailFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'acquirementStatus': json['acquirementStatus'],
        'frozen': json['frozen'],
        'cancelled': json['cancelled'],
    };
}
function StatusDetailToJSON(json) {
    return StatusDetailToJSONTyped(json, false);
}
function StatusDetailToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'acquirementStatus': value['acquirementStatus'],
        'frozen': value['frozen'],
        'cancelled': value['cancelled'],
    };
}
const propertyValidationAttributesMap = {
    acquirementStatus: {
        maxLength: 64,
    },
    frozen: {
        maxLength: 64,
    },
    cancelled: {
        maxLength: 64,
    },
};
function validateStatusDetail(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('acquirementStatus', value.acquirementStatus, propertyValidationAttributesMap['acquirementStatus']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('frozen', value.frozen, propertyValidationAttributesMap['frozen']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('cancelled', value.cancelled, propertyValidationAttributesMap['cancelled']));
    return validationErrorContexts;
}
