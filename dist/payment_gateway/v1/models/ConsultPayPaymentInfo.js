"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsultPayPaymentInfoPayOptionEnum = exports.ConsultPayPaymentInfoPayMethodEnum = void 0;
exports.instanceOfConsultPayPaymentInfo = instanceOfConsultPayPaymentInfo;
exports.ConsultPayPaymentInfoFromJSON = ConsultPayPaymentInfoFromJSON;
exports.ConsultPayPaymentInfoFromJSONTyped = ConsultPayPaymentInfoFromJSONTyped;
exports.ConsultPayPaymentInfoToJSON = ConsultPayPaymentInfoToJSON;
exports.ConsultPayPaymentInfoToJSONTyped = ConsultPayPaymentInfoToJSONTyped;
exports.validateConsultPayPaymentInfo = validateConsultPayPaymentInfo;
const runtime_1 = require("../../../runtime");
const PromoInfo_1 = require("./PromoInfo");
/**
 * @export
 */
exports.ConsultPayPaymentInfoPayMethodEnum = {
    Balance: 'BALANCE',
    Coupon: 'COUPON',
    NetBanking: 'NET_BANKING',
    CreditCard: 'CREDIT_CARD',
    DebitCard: 'DEBIT_CARD',
    VirtualAccount: 'VIRTUAL_ACCOUNT',
    Otc: 'OTC',
    DirectDebitCreditCard: 'DIRECT_DEBIT_CREDIT_CARD',
    DirectDebitDebitCard: 'DIRECT_DEBIT_DEBIT_CARD',
    OnlineCredit: 'ONLINE_CREDIT',
    LoanCredit: 'LOAN_CREDIT',
    NetworkPay: 'NETWORK_PAY',
    Card: 'CARD'
};
/**
 * @export
 */
exports.ConsultPayPaymentInfoPayOptionEnum = {
    NetworkPayPgSpay: 'NETWORK_PAY_PG_SPAY',
    NetworkPayPgOvo: 'NETWORK_PAY_PG_OVO',
    NetworkPayPgGopay: 'NETWORK_PAY_PG_GOPAY',
    NetworkPayPgLinkaja: 'NETWORK_PAY_PG_LINKAJA',
    NetworkPayPgCard: 'NETWORK_PAY_PG_CARD',
    NetworkPayPcIndomaret: 'NETWORK_PAY_PC_INDOMARET',
    NetworkPayPgQris: 'NETWORK_PAY_PG_QRIS',
    VirtualAccountBca: 'VIRTUAL_ACCOUNT_BCA',
    VirtualAccountBni: 'VIRTUAL_ACCOUNT_BNI',
    VirtualAccountMandiri: 'VIRTUAL_ACCOUNT_MANDIRI',
    VirtualAccountBri: 'VIRTUAL_ACCOUNT_BRI',
    VirtualAccountBtpn: 'VIRTUAL_ACCOUNT_BTPN',
    VirtualAccountCimb: 'VIRTUAL_ACCOUNT_CIMB',
    VirtualAccountPermata: 'VIRTUAL_ACCOUNT_PERMATA',
    VirtualAccountPanin: 'VIRTUAL_ACCOUNT_PANIN'
};
/**
 * Check if a given object implements the ConsultPayPaymentInfo interface.
 */
function instanceOfConsultPayPaymentInfo(value) {
    if (!('payMethod' in value) || value['payMethod'] === undefined)
        return false;
    return true;
}
function ConsultPayPaymentInfoFromJSON(json) {
    return ConsultPayPaymentInfoFromJSONTyped(json, false);
}
function ConsultPayPaymentInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'payMethod': json['payMethod'],
        'payOption': json['payOption'] == null ? undefined : json['payOption'],
        'promoInfos': json['promoInfos'] == null ? undefined : (json['promoInfos'].map(PromoInfo_1.PromoInfoFromJSON)),
    };
}
function ConsultPayPaymentInfoToJSON(json) {
    return ConsultPayPaymentInfoToJSONTyped(json, false);
}
function ConsultPayPaymentInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'payMethod': value['payMethod'],
        'payOption': value['payOption'],
        'promoInfos': value['promoInfos'] == null ? undefined : (value['promoInfos'].map(PromoInfo_1.PromoInfoToJSON)),
    };
}
const propertyValidationAttributesMap = {
    payMethod: {
        maxLength: 64,
    },
    payOption: {
        maxLength: 128,
    },
};
function validateConsultPayPaymentInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('payMethod', value.payMethod, propertyValidationAttributesMap['payMethod']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('payOption', value.payOption, propertyValidationAttributesMap['payOption']));
    return validationErrorContexts;
}
