"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefundOrderRequestAdditionalInfoActorTypeEnum = void 0;
exports.instanceOfRefundOrderRequestAdditionalInfo = instanceOfRefundOrderRequestAdditionalInfo;
exports.RefundOrderRequestAdditionalInfoFromJSON = RefundOrderRequestAdditionalInfoFromJSON;
exports.RefundOrderRequestAdditionalInfoFromJSONTyped = RefundOrderRequestAdditionalInfoFromJSONTyped;
exports.RefundOrderRequestAdditionalInfoToJSON = RefundOrderRequestAdditionalInfoToJSON;
exports.RefundOrderRequestAdditionalInfoToJSONTyped = RefundOrderRequestAdditionalInfoToJSONTyped;
exports.validateRefundOrderRequestAdditionalInfo = validateRefundOrderRequestAdditionalInfo;
const runtime_1 = require("../../../runtime");
const AuditInfo_1 = require("./AuditInfo");
const RefundOptionBill_1 = require("./RefundOptionBill");
const ActorContext_1 = require("./ActorContext");
const EnvInfo_1 = require("./EnvInfo");
/**
 * @export
 */
exports.RefundOrderRequestAdditionalInfoActorTypeEnum = {
    User: 'USER',
    Merchant: 'MERCHANT',
    MerchantOperator: 'MERCHANT_OPERATOR',
    BackOffice: 'BACK_OFFICE',
    System: 'SYSTEM'
};
/**
 * Check if a given object implements the RefundOrderRequestAdditionalInfo interface.
 */
function instanceOfRefundOrderRequestAdditionalInfo(value) {
    return true;
}
function RefundOrderRequestAdditionalInfoFromJSON(json) {
    return RefundOrderRequestAdditionalInfoFromJSONTyped(json, false);
}
function RefundOrderRequestAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'payoutAccountNo': json['payoutAccountNo'] == null ? undefined : json['payoutAccountNo'],
        'refundAppliedTime': json['refundAppliedTime'] == null ? undefined : json['refundAppliedTime'],
        'actorType': json['actorType'] == null ? undefined : json['actorType'],
        'returnChargeToPayer': json['returnChargeToPayer'] == null ? undefined : json['returnChargeToPayer'],
        'destination': json['destination'] == null ? undefined : json['destination'],
        'envInfo': json['envInfo'] == null ? undefined : (0, EnvInfo_1.EnvInfoFromJSON)(json['envInfo']),
        'auditInfo': json['auditInfo'] == null ? undefined : (0, AuditInfo_1.AuditInfoFromJSON)(json['auditInfo']),
        'actorContext': json['actorContext'] == null ? undefined : (0, ActorContext_1.ActorContextFromJSON)(json['actorContext']),
        'refundOptionBill': json['refundOptionBill'] == null ? undefined : (json['refundOptionBill'].map(RefundOptionBill_1.RefundOptionBillFromJSON)),
        'extendInfo': json['extendInfo'] == null ? undefined : json['extendInfo'],
        'asyncRefund': json['asyncRefund'] == null ? undefined : json['asyncRefund'],
    };
}
function RefundOrderRequestAdditionalInfoToJSON(json) {
    return RefundOrderRequestAdditionalInfoToJSONTyped(json, false);
}
function RefundOrderRequestAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'payoutAccountNo': value['payoutAccountNo'],
        'refundAppliedTime': value['refundAppliedTime'],
        'actorType': value['actorType'],
        'returnChargeToPayer': value['returnChargeToPayer'],
        'destination': value['destination'],
        'envInfo': (0, EnvInfo_1.EnvInfoToJSON)(value['envInfo']),
        'auditInfo': (0, AuditInfo_1.AuditInfoToJSON)(value['auditInfo']),
        'actorContext': (0, ActorContext_1.ActorContextToJSON)(value['actorContext']),
        'refundOptionBill': value['refundOptionBill'] == null ? undefined : (value['refundOptionBill'].map(RefundOptionBill_1.RefundOptionBillToJSON)),
        'extendInfo': value['extendInfo'],
        'asyncRefund': value['asyncRefund'],
    };
}
const propertyValidationAttributesMap = {
    payoutAccountNo: {
        maxLength: 64,
    },
    refundAppliedTime: {
        maxLength: 25,
    },
    actorType: {
        maxLength: 64,
    },
    returnChargeToPayer: {
        maxLength: 64,
    },
    destination: {
        maxLength: 64,
    },
    extendInfo: {
        maxLength: 4096,
    },
    asyncRefund: {
        maxLength: 5,
    },
};
function validateRefundOrderRequestAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('payoutAccountNo', value.payoutAccountNo, propertyValidationAttributesMap['payoutAccountNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('refundAppliedTime', value.refundAppliedTime, propertyValidationAttributesMap['refundAppliedTime']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('actorType', value.actorType, propertyValidationAttributesMap['actorType']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('returnChargeToPayer', value.returnChargeToPayer, propertyValidationAttributesMap['returnChargeToPayer']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('destination', value.destination, propertyValidationAttributesMap['destination']));
    validationErrorContexts.push(...(0, EnvInfo_1.validateEnvInfo)(value.envInfo));
    validationErrorContexts.push(...(0, AuditInfo_1.validateAuditInfo)(value.auditInfo));
    validationErrorContexts.push(...(0, ActorContext_1.validateActorContext)(value.actorContext));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('extendInfo', value.extendInfo, propertyValidationAttributesMap['extendInfo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('asyncRefund', value.asyncRefund, propertyValidationAttributesMap['asyncRefund']));
    return validationErrorContexts;
}
