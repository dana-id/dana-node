"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfRefundOrderRequestAdditionalInfo = instanceOfRefundOrderRequestAdditionalInfo;
exports.RefundOrderRequestAdditionalInfoFromJSON = RefundOrderRequestAdditionalInfoFromJSON;
exports.RefundOrderRequestAdditionalInfoFromJSONTyped = RefundOrderRequestAdditionalInfoFromJSONTyped;
exports.RefundOrderRequestAdditionalInfoToJSON = RefundOrderRequestAdditionalInfoToJSON;
exports.RefundOrderRequestAdditionalInfoToJSONTyped = RefundOrderRequestAdditionalInfoToJSONTyped;
/**
 * Check if a given object implements the RefundOrderRequestAdditionalInfo interface.
 */
function instanceOfRefundOrderRequestAdditionalInfo(value) {
    return true;
}
function RefundOrderRequestAdditionalInfoFromJSON(json) {
    return RefundOrderRequestAdditionalInfoFromJSONTyped(json, false);
}
function RefundOrderRequestAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'payoutAccountNo': json['payoutAccountNo'] == null ? undefined : json['payoutAccountNo'],
        'refundAppliedTime': json['refundAppliedTime'] == null ? undefined : json['refundAppliedTime'],
        'actorType': json['actorType'] == null ? undefined : json['actorType'],
        'returnChargeToPayer': json['returnChargeToPayer'] == null ? undefined : json['returnChargeToPayer'],
        'destination': json['destination'] == null ? undefined : json['destination'],
        'envInfo': json['envInfo'] == null ? undefined : json['envInfo'],
        'auditInfo': json['auditInfo'] == null ? undefined : json['auditInfo'],
        'actorContext': json['actorContext'] == null ? undefined : json['actorContext'],
        'refundOptionBill': json['refundOptionBill'] == null ? undefined : json['refundOptionBill'],
        'extendInfo': json['extendInfo'] == null ? undefined : json['extendInfo'],
        'asyncRefund': json['asyncRefund'] == null ? undefined : json['asyncRefund'],
    };
}
function RefundOrderRequestAdditionalInfoToJSON(json) {
    return RefundOrderRequestAdditionalInfoToJSONTyped(json, false);
}
function RefundOrderRequestAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'payoutAccountNo': value['payoutAccountNo'],
        'refundAppliedTime': value['refundAppliedTime'],
        'actorType': value['actorType'],
        'returnChargeToPayer': value['returnChargeToPayer'],
        'destination': value['destination'],
        'envInfo': value['envInfo'],
        'auditInfo': value['auditInfo'],
        'actorContext': value['actorContext'],
        'refundOptionBill': value['refundOptionBill'],
        'extendInfo': value['extendInfo'],
        'asyncRefund': value['asyncRefund'],
    };
}
