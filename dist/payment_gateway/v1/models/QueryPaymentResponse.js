"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryPaymentResponse = instanceOfQueryPaymentResponse;
exports.QueryPaymentResponseFromJSON = QueryPaymentResponseFromJSON;
exports.QueryPaymentResponseFromJSONTyped = QueryPaymentResponseFromJSONTyped;
exports.QueryPaymentResponseToJSON = QueryPaymentResponseToJSON;
exports.QueryPaymentResponseToJSONTyped = QueryPaymentResponseToJSONTyped;
const QueryPaymentResponseAdditionalInfo_1 = require("./QueryPaymentResponseAdditionalInfo");
const Money_1 = require("./Money");
/**
 * Check if a given object implements the QueryPaymentResponse interface.
 */
function instanceOfQueryPaymentResponse(value) {
    if (!('responseCode' in value) || value['responseCode'] === undefined)
        return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined)
        return false;
    if (!('serviceCode' in value) || value['serviceCode'] === undefined)
        return false;
    if (!('latestTransactionStatus' in value) || value['latestTransactionStatus'] === undefined)
        return false;
    return true;
}
function QueryPaymentResponseFromJSON(json) {
    return QueryPaymentResponseFromJSONTyped(json, false);
}
function QueryPaymentResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'originalPartnerReferenceNo': json['originalPartnerReferenceNo'] == null ? undefined : json['originalPartnerReferenceNo'],
        'originalReferenceNo': json['originalReferenceNo'] == null ? undefined : json['originalReferenceNo'],
        'originalExternalId': json['originalExternalId'] == null ? undefined : json['originalExternalId'],
        'serviceCode': json['serviceCode'],
        'latestTransactionStatus': json['latestTransactionStatus'],
        'transactionStatusDesc': json['transactionStatusDesc'] == null ? undefined : json['transactionStatusDesc'],
        'originalResponseCode': json['originalResponseCode'] == null ? undefined : json['originalResponseCode'],
        'originalResponseMessage': json['originalResponseMessage'] == null ? undefined : json['originalResponseMessage'],
        'sessionId': json['sessionId'] == null ? undefined : json['sessionId'],
        'requestID': json['requestID'] == null ? undefined : json['requestID'],
        'transAmount': json['transAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['transAmount']),
        'amount': json['amount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['amount']),
        'feeAmount': json['feeAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['feeAmount']),
        'paidTime': json['paidTime'] == null ? undefined : json['paidTime'],
        'title': json['title'] == null ? undefined : json['title'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : (0, QueryPaymentResponseAdditionalInfo_1.QueryPaymentResponseAdditionalInfoFromJSON)(json['additionalInfo']),
    };
}
function QueryPaymentResponseToJSON(json) {
    return QueryPaymentResponseToJSONTyped(json, false);
}
function QueryPaymentResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'originalPartnerReferenceNo': value['originalPartnerReferenceNo'],
        'originalReferenceNo': value['originalReferenceNo'],
        'originalExternalId': value['originalExternalId'],
        'serviceCode': value['serviceCode'],
        'latestTransactionStatus': value['latestTransactionStatus'],
        'transactionStatusDesc': value['transactionStatusDesc'],
        'originalResponseCode': value['originalResponseCode'],
        'originalResponseMessage': value['originalResponseMessage'],
        'sessionId': value['sessionId'],
        'requestID': value['requestID'],
        'transAmount': (0, Money_1.MoneyToJSON)(value['transAmount']),
        'amount': (0, Money_1.MoneyToJSON)(value['amount']),
        'feeAmount': (0, Money_1.MoneyToJSON)(value['feeAmount']),
        'paidTime': value['paidTime'],
        'title': value['title'],
        'additionalInfo': (0, QueryPaymentResponseAdditionalInfo_1.QueryPaymentResponseAdditionalInfoToJSON)(value['additionalInfo']),
    };
}
