"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryPaymentResponseAdditionalInfo = instanceOfQueryPaymentResponseAdditionalInfo;
exports.QueryPaymentResponseAdditionalInfoFromJSON = QueryPaymentResponseAdditionalInfoFromJSON;
exports.QueryPaymentResponseAdditionalInfoFromJSONTyped = QueryPaymentResponseAdditionalInfoFromJSONTyped;
exports.QueryPaymentResponseAdditionalInfoToJSON = QueryPaymentResponseAdditionalInfoToJSON;
exports.QueryPaymentResponseAdditionalInfoToJSONTyped = QueryPaymentResponseAdditionalInfoToJSONTyped;
exports.validateQueryPaymentResponseAdditionalInfo = validateQueryPaymentResponseAdditionalInfo;
const runtime_1 = require("../../../runtime");
const PaymentView_1 = require("./PaymentView");
const TimeDetail_1 = require("./TimeDetail");
const AmountDetail_1 = require("./AmountDetail");
const StatusDetail_1 = require("./StatusDetail");
const VirtualAccountInfo_1 = require("./VirtualAccountInfo");
const Buyer_1 = require("./Buyer");
const Goods_1 = require("./Goods");
const ShippingInfo_1 = require("./ShippingInfo");
const Seller_1 = require("./Seller");
/**
 * Check if a given object implements the QueryPaymentResponseAdditionalInfo interface.
 */
function instanceOfQueryPaymentResponseAdditionalInfo(value) {
    return true;
}
function QueryPaymentResponseAdditionalInfoFromJSON(json) {
    return QueryPaymentResponseAdditionalInfoFromJSONTyped(json, false);
}
function QueryPaymentResponseAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'buyer': json['buyer'] == null ? undefined : (0, Buyer_1.BuyerFromJSON)(json['buyer']),
        'seller': json['seller'] == null ? undefined : (0, Seller_1.SellerFromJSON)(json['seller']),
        'amountDetail': json['amountDetail'] == null ? undefined : (0, AmountDetail_1.AmountDetailFromJSON)(json['amountDetail']),
        'timeDetail': json['timeDetail'] == null ? undefined : (0, TimeDetail_1.TimeDetailFromJSON)(json['timeDetail']),
        'goods': json['goods'] == null ? undefined : (json['goods'].map(Goods_1.GoodsFromJSON)),
        'shippingInfo': json['shippingInfo'] == null ? undefined : (json['shippingInfo'].map(ShippingInfo_1.ShippingInfoFromJSON)),
        'orderMemo': json['orderMemo'] == null ? undefined : json['orderMemo'],
        'paymentViews': json['paymentViews'] == null ? undefined : (json['paymentViews'].map(PaymentView_1.PaymentViewFromJSON)),
        'extendInfo': json['extendInfo'] == null ? undefined : json['extendInfo'],
        'statusDetail': json['statusDetail'] == null ? undefined : (0, StatusDetail_1.StatusDetailFromJSON)(json['statusDetail']),
        'closeReason': json['closeReason'] == null ? undefined : json['closeReason'],
        'virtualAccountInfo': json['virtualAccountInfo'] == null ? undefined : (0, VirtualAccountInfo_1.VirtualAccountInfoFromJSON)(json['virtualAccountInfo']),
        'merchantId': json['merchantId'] == null ? undefined : json['merchantId'],
    };
}
function QueryPaymentResponseAdditionalInfoToJSON(json) {
    return QueryPaymentResponseAdditionalInfoToJSONTyped(json, false);
}
function QueryPaymentResponseAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'buyer': (0, Buyer_1.BuyerToJSON)(value['buyer']),
        'seller': (0, Seller_1.SellerToJSON)(value['seller']),
        'amountDetail': (0, AmountDetail_1.AmountDetailToJSON)(value['amountDetail']),
        'timeDetail': (0, TimeDetail_1.TimeDetailToJSON)(value['timeDetail']),
        'goods': value['goods'] == null ? undefined : (value['goods'].map(Goods_1.GoodsToJSON)),
        'shippingInfo': value['shippingInfo'] == null ? undefined : (value['shippingInfo'].map(ShippingInfo_1.ShippingInfoToJSON)),
        'orderMemo': value['orderMemo'],
        'paymentViews': value['paymentViews'] == null ? undefined : (value['paymentViews'].map(PaymentView_1.PaymentViewToJSON)),
        'extendInfo': value['extendInfo'],
        'statusDetail': (0, StatusDetail_1.StatusDetailToJSON)(value['statusDetail']),
        'closeReason': value['closeReason'],
        'virtualAccountInfo': (0, VirtualAccountInfo_1.VirtualAccountInfoToJSON)(value['virtualAccountInfo']),
        'merchantId': value['merchantId'],
    };
}
const propertyValidationAttributesMap = {
    orderMemo: {
        maxLength: 64,
    },
    extendInfo: {
        maxLength: 4096,
    },
    closeReason: {
        maxLength: 128,
    },
};
function validateQueryPaymentResponseAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, Buyer_1.validateBuyer)(value.buyer));
    validationErrorContexts.push(...(0, Seller_1.validateSeller)(value.seller));
    validationErrorContexts.push(...(0, AmountDetail_1.validateAmountDetail)(value.amountDetail));
    validationErrorContexts.push(...(0, TimeDetail_1.validateTimeDetail)(value.timeDetail));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('orderMemo', value.orderMemo, propertyValidationAttributesMap['orderMemo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('extendInfo', value.extendInfo, propertyValidationAttributesMap['extendInfo']));
    validationErrorContexts.push(...(0, StatusDetail_1.validateStatusDetail)(value.statusDetail));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('closeReason', value.closeReason, propertyValidationAttributesMap['closeReason']));
    validationErrorContexts.push(...(0, VirtualAccountInfo_1.validateVirtualAccountInfo)(value.virtualAccountInfo));
    return validationErrorContexts;
}
