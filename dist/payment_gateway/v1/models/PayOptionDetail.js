"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPayOptionDetail = instanceOfPayOptionDetail;
exports.PayOptionDetailFromJSON = PayOptionDetailFromJSON;
exports.PayOptionDetailFromJSONTyped = PayOptionDetailFromJSONTyped;
exports.PayOptionDetailToJSON = PayOptionDetailToJSON;
exports.PayOptionDetailToJSONTyped = PayOptionDetailToJSONTyped;
const Money_1 = require("./Money");
const PayOptionAdditionalInfo_1 = require("./PayOptionAdditionalInfo");
/**
 * Check if a given object implements the PayOptionDetail interface.
 */
function instanceOfPayOptionDetail(value) {
    if (!('payMethod' in value) || value['payMethod'] === undefined)
        return false;
    if (!('payOption' in value) || value['payOption'] === undefined)
        return false;
    if (!('transAmount' in value) || value['transAmount'] === undefined)
        return false;
    return true;
}
function PayOptionDetailFromJSON(json) {
    return PayOptionDetailFromJSONTyped(json, false);
}
function PayOptionDetailFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'payMethod': json['payMethod'],
        'payOption': json['payOption'],
        'transAmount': (0, Money_1.MoneyFromJSON)(json['transAmount']),
        'feeAmount': json['feeAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['feeAmount']),
        'cardToken': json['cardToken'] == null ? undefined : json['cardToken'],
        'merchantToken': json['merchantToken'] == null ? undefined : json['merchantToken'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : (0, PayOptionAdditionalInfo_1.PayOptionAdditionalInfoFromJSON)(json['additionalInfo']),
    };
}
function PayOptionDetailToJSON(json) {
    return PayOptionDetailToJSONTyped(json, false);
}
function PayOptionDetailToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'payMethod': value['payMethod'],
        'payOption': value['payOption'],
        'transAmount': (0, Money_1.MoneyToJSON)(value['transAmount']),
        'feeAmount': (0, Money_1.MoneyToJSON)(value['feeAmount']),
        'cardToken': value['cardToken'],
        'merchantToken': value['merchantToken'],
        'additionalInfo': (0, PayOptionAdditionalInfo_1.PayOptionAdditionalInfoToJSON)(value['additionalInfo']),
    };
}
