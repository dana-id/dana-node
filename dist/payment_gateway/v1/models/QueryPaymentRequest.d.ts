/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Money } from './Money';
/**
 *
 * @export
 * @interface QueryPaymentRequest
 */
export interface QueryPaymentRequest {
    /**
     * Original transaction identifier on partner system. Required if originalReferenceNo is not filled
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    originalPartnerReferenceNo?: string;
    /**
     * Original transaction identifier on DANA system. Required if originalPartnerReferenceNo is not filled
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    originalReferenceNo?: string;
    /**
     * Original external identifier on header message
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    originalExternalId?: string;
    /**
     * Transaction type indicator is based on the service code of the original transaction request:<br>
     * - IPG Cashier Pay - SNAP: 54<br>
     * - QRIS CPM (Acquirer) - SNAP: 60<br>
     * - QRIS MPM (Acquirer) - SNAP: 47<br>
     * - Payment Gateway: 54<br>
     *
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    serviceCode: string;
    /**
     * Transaction date, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    transactionDate?: string;
    /**
     * Amount. Contains two sub-fields:<br>
     * 1. Value: Transaction amount, including the cents<br>
     * 2. Currency: Currency code based on ISO<br>
     *
     * @type {Money}
     * @memberof QueryPaymentRequest
     */
    amount?: Money;
    /**
     * Merchant identifier that is unique per each merchant
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    merchantId: string;
    /**
     * Information of sub merchant identifier
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    subMerchantId?: string;
    /**
     * Store identifier to indicate to which store this payment belongs to
     * @type {string}
     * @memberof QueryPaymentRequest
     */
    externalStoreId?: string;
    /**
     * Additional information
     * @type {object}
     * @memberof QueryPaymentRequest
     */
    additionalInfo?: object;
}
/**
 * Check if a given object implements the QueryPaymentRequest interface.
 */
export declare function instanceOfQueryPaymentRequest(value: object): value is QueryPaymentRequest;
export declare function QueryPaymentRequestFromJSON(json: any): QueryPaymentRequest;
export declare function QueryPaymentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryPaymentRequest;
export declare function QueryPaymentRequestToJSON(json: any): QueryPaymentRequest;
export declare function QueryPaymentRequestToJSONTyped(value?: QueryPaymentRequest | null, ignoreDiscriminator?: boolean): any;
export declare function validateQueryPaymentRequest(value: QueryPaymentRequest): ValidationErrorContext[];
