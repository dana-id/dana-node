"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfRefundOrderRequest = instanceOfRefundOrderRequest;
exports.RefundOrderRequestFromJSON = RefundOrderRequestFromJSON;
exports.RefundOrderRequestFromJSONTyped = RefundOrderRequestFromJSONTyped;
exports.RefundOrderRequestToJSON = RefundOrderRequestToJSON;
exports.RefundOrderRequestToJSONTyped = RefundOrderRequestToJSONTyped;
const Money_1 = require("./Money");
const RefundOrderRequestAdditionalInfo_1 = require("./RefundOrderRequestAdditionalInfo");
/**
 * Check if a given object implements the RefundOrderRequest interface.
 */
function instanceOfRefundOrderRequest(value) {
    if (!('merchantId' in value) || value['merchantId'] === undefined)
        return false;
    if (!('originalPartnerReferenceNo' in value) || value['originalPartnerReferenceNo'] === undefined)
        return false;
    if (!('partnerRefundNo' in value) || value['partnerRefundNo'] === undefined)
        return false;
    if (!('refundAmount' in value) || value['refundAmount'] === undefined)
        return false;
    return true;
}
function RefundOrderRequestFromJSON(json) {
    return RefundOrderRequestFromJSONTyped(json, false);
}
function RefundOrderRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'merchantId': json['merchantId'],
        'subMerchantId': json['subMerchantId'] == null ? undefined : json['subMerchantId'],
        'originalReferenceNo': json['originalReferenceNo'] == null ? undefined : json['originalReferenceNo'],
        'originalPartnerReferenceNo': json['originalPartnerReferenceNo'],
        'originalExternalId': json['originalExternalId'] == null ? undefined : json['originalExternalId'],
        'originalCaptureNo': json['originalCaptureNo'] == null ? undefined : json['originalCaptureNo'],
        'partnerRefundNo': json['partnerRefundNo'],
        'refundAmount': (0, Money_1.MoneyFromJSON)(json['refundAmount']),
        'externalStoreId': json['externalStoreId'] == null ? undefined : json['externalStoreId'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : (0, RefundOrderRequestAdditionalInfo_1.RefundOrderRequestAdditionalInfoFromJSON)(json['additionalInfo']),
    };
}
function RefundOrderRequestToJSON(json) {
    return RefundOrderRequestToJSONTyped(json, false);
}
function RefundOrderRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'merchantId': value['merchantId'],
        'subMerchantId': value['subMerchantId'],
        'originalReferenceNo': value['originalReferenceNo'],
        'originalPartnerReferenceNo': value['originalPartnerReferenceNo'],
        'originalExternalId': value['originalExternalId'],
        'originalCaptureNo': value['originalCaptureNo'],
        'partnerRefundNo': value['partnerRefundNo'],
        'refundAmount': (0, Money_1.MoneyToJSON)(value['refundAmount']),
        'externalStoreId': value['externalStoreId'],
        'reason': value['reason'],
        'additionalInfo': (0, RefundOrderRequestAdditionalInfo_1.RefundOrderRequestAdditionalInfoToJSON)(value['additionalInfo']),
    };
}
