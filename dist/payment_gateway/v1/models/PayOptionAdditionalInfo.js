"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPayOptionAdditionalInfo = instanceOfPayOptionAdditionalInfo;
exports.PayOptionAdditionalInfoFromJSON = PayOptionAdditionalInfoFromJSON;
exports.PayOptionAdditionalInfoFromJSONTyped = PayOptionAdditionalInfoFromJSONTyped;
exports.PayOptionAdditionalInfoToJSON = PayOptionAdditionalInfoToJSON;
exports.PayOptionAdditionalInfoToJSONTyped = PayOptionAdditionalInfoToJSONTyped;
exports.validatePayOptionAdditionalInfo = validatePayOptionAdditionalInfo;
const runtime_1 = require("../../../runtime");
const PromoInfo_1 = require("./PromoInfo");
/**
 * Check if a given object implements the PayOptionAdditionalInfo interface.
 */
function instanceOfPayOptionAdditionalInfo(value) {
    return true;
}
function PayOptionAdditionalInfoFromJSON(json) {
    return PayOptionAdditionalInfoFromJSONTyped(json, false);
}
function PayOptionAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'paymentCode': json['paymentCode'] == null ? undefined : json['paymentCode'],
        'promoInfos': json['promoInfos'] == null ? undefined : (json['promoInfos'].map(PromoInfo_1.PromoInfoFromJSON)),
    };
}
function PayOptionAdditionalInfoToJSON(json) {
    return PayOptionAdditionalInfoToJSONTyped(json, false);
}
function PayOptionAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'phoneNumber': value['phoneNumber'],
        'paymentCode': value['paymentCode'],
        'promoInfos': value['promoInfos'] == null ? undefined : (value['promoInfos'].map(PromoInfo_1.PromoInfoToJSON)),
    };
}
const propertyValidationAttributesMap = {
    phoneNumber: {
        maxLength: 15,
    },
};
function validatePayOptionAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('phoneNumber', value.phoneNumber, propertyValidationAttributesMap['phoneNumber']));
    return validationErrorContexts;
}
