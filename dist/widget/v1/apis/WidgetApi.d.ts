/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import * as runtime from '../../../runtime';
import type { AccountUnbindingRequest, AccountUnbindingResponse, ApplyOTTRequest, ApplyOTTResponse, ApplyTokenRequest, ApplyTokenResponse, BalanceInquiryRequest, BalanceInquiryResponse, CancelOrderRequest, CancelOrderResponse, QueryPaymentRequest, QueryPaymentResponse, QueryUserProfileRequest, QueryUserProfileResponse, RefundOrderRequest, RefundOrderResponse, WidgetPaymentRequest, WidgetPaymentResponse } from '../models/index';
/**
 *
 */
export declare class WidgetApi extends runtime.BaseAPI {
    partnerId: string;
    privateKey: string;
    origin: string;
    env: string;
    clientSecret: string;
    constructor({ partnerId, privateKey, origin, env, clientSecret }: {
        partnerId?: string;
        privateKey?: string;
        origin?: string;
        env?: string;
        clientSecret?: string;
    });
    /**
     * This API is used to reverses the account binding process by revoking the accessToken and refreshToken
     * Account unbinding - Binding
     */
    accountUnbinding(accountUnbindingRequest: AccountUnbindingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountUnbindingResponse>;
    /**
     * This API is used to get one time token that will be used as authorization parameter upon redirecting to DANA
     * Apply OTT - Widget
     */
    applyOTT(applyOTTRequest: ApplyOTTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApplyOTTResponse>;
    /**
     * This API is used to finalized account binding process by exchanging the authCode into accessToken that can be used as user authorization
     * Apply Token, required by Apply OTT - Binding
     */
    applyToken(applyTokenRequest: ApplyTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApplyTokenResponse>;
    /**
     * This API is used to query user\'s DANA account balance via merchant
     * Balance Inquiry
     */
    balanceInquiry(balanceInquiryRequest: BalanceInquiryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BalanceInquiryResponse>;
    /**
     * This API is used to cancel the order from merchant\'s platform to DANA
     * Cancel Order - Widget
     */
    cancelOrder(cancelOrderRequest: CancelOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CancelOrderResponse>;
    /**
     * This API is used to inquiry payment status and information from merchant\'s platform to DANA
     * Query Payment - Widget
     */
    queryPayment(queryPaymentRequest: QueryPaymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryPaymentResponse>;
    /**
     * The API is used to query user profile such as DANA balance (unit in IDR), masked DANA phone number, KYC or OTT (one time token) between merchant server and DANA\'s server
     * Query User Profile
     */
    queryUserProfile(queryUserProfileRequest: QueryUserProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryUserProfileResponse>;
    /**
     * This API is used to refund the order from merchant\'s platform to DANA
     * Refund Order - Widget
     */
    refundOrder(refundOrderRequest: RefundOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RefundOrderResponse>;
    /**
     * This API is used to initiate payment from merchant\'s platform to DANA
     * Widget Payment - Widget
     */
    widgetPayment(widgetPaymentRequest: WidgetPaymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WidgetPaymentResponse>;
}
