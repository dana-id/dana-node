"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfOrder = instanceOfOrder;
exports.OrderFromJSON = OrderFromJSON;
exports.OrderFromJSONTyped = OrderFromJSONTyped;
exports.OrderToJSON = OrderToJSON;
exports.OrderToJSONTyped = OrderToJSONTyped;
exports.validateOrder = validateOrder;
const runtime_1 = require("../../../runtime");
const Buyer_1 = require("./Buyer");
const Goods_1 = require("./Goods");
const InternationalOrderInfo_1 = require("./InternationalOrderInfo");
const ShippingInfo_1 = require("./ShippingInfo");
const Seller_1 = require("./Seller");
/**
 * Check if a given object implements the Order interface.
 */
function instanceOfOrder(value) {
    if (!('orderTitle' in value) || value['orderTitle'] === undefined)
        return false;
    return true;
}
function OrderFromJSON(json) {
    return OrderFromJSONTyped(json, false);
}
function OrderFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'buyer': json['buyer'] == null ? undefined : (0, Buyer_1.BuyerFromJSON)(json['buyer']),
        'seller': json['seller'] == null ? undefined : (0, Seller_1.SellerFromJSON)(json['seller']),
        'orderTitle': json['orderTitle'],
        'merchantTransType': json['merchantTransType'] == null ? undefined : json['merchantTransType'],
        'orderMemo': json['orderMemo'] == null ? undefined : json['orderMemo'],
        'createdTime': json['createdTime'] == null ? undefined : json['createdTime'],
        'goods': json['goods'] == null ? undefined : (json['goods'].map(Goods_1.GoodsFromJSON)),
        'shippingInfo': json['shippingInfo'] == null ? undefined : (json['shippingInfo'].map(ShippingInfo_1.ShippingInfoFromJSON)),
        'internationalOrderInfo': json['internationalOrderInfo'] == null ? undefined : (0, InternationalOrderInfo_1.InternationalOrderInfoFromJSON)(json['internationalOrderInfo']),
        'extendInfo': json['extendInfo'] == null ? undefined : json['extendInfo'],
    };
}
function OrderToJSON(json) {
    return OrderToJSONTyped(json, false);
}
function OrderToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'buyer': (0, Buyer_1.BuyerToJSON)(value['buyer']),
        'seller': (0, Seller_1.SellerToJSON)(value['seller']),
        'orderTitle': value['orderTitle'],
        'merchantTransType': value['merchantTransType'],
        'orderMemo': value['orderMemo'],
        'createdTime': value['createdTime'],
        'goods': value['goods'] == null ? undefined : (value['goods'].map(Goods_1.GoodsToJSON)),
        'shippingInfo': value['shippingInfo'] == null ? undefined : (value['shippingInfo'].map(ShippingInfo_1.ShippingInfoToJSON)),
        'internationalOrderInfo': (0, InternationalOrderInfo_1.InternationalOrderInfoToJSON)(value['internationalOrderInfo']),
        'extendInfo': value['extendInfo'],
    };
}
const propertyValidationAttributesMap = {
    orderTitle: {
        maxLength: 64,
    },
    merchantTransType: {
        maxLength: 64,
    },
    orderMemo: {
        maxLength: 64,
    },
    createdTime: {
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
    extendInfo: {
        maxLength: 4096,
    },
};
function validateOrder(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, Buyer_1.validateBuyer)(value.buyer));
    validationErrorContexts.push(...(0, Seller_1.validateSeller)(value.seller));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('orderTitle', value.orderTitle, propertyValidationAttributesMap['orderTitle']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('merchantTransType', value.merchantTransType, propertyValidationAttributesMap['merchantTransType']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('orderMemo', value.orderMemo, propertyValidationAttributesMap['orderMemo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('createdTime', value.createdTime, propertyValidationAttributesMap['createdTime']));
    validationErrorContexts.push(...(0, InternationalOrderInfo_1.validateInternationalOrderInfo)(value.internationalOrderInfo));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('extendInfo', value.extendInfo, propertyValidationAttributesMap['extendInfo']));
    return validationErrorContexts;
}
