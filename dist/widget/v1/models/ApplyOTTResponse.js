"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfApplyOTTResponse = instanceOfApplyOTTResponse;
exports.ApplyOTTResponseFromJSON = ApplyOTTResponseFromJSON;
exports.ApplyOTTResponseFromJSONTyped = ApplyOTTResponseFromJSONTyped;
exports.ApplyOTTResponseToJSON = ApplyOTTResponseToJSON;
exports.ApplyOTTResponseToJSONTyped = ApplyOTTResponseToJSONTyped;
exports.validateApplyOTTResponse = validateApplyOTTResponse;
const runtime_1 = require("../../../runtime");
const ApplyOTTResponseUserResourcesInner_1 = require("./ApplyOTTResponseUserResourcesInner");
/**
 * Check if a given object implements the ApplyOTTResponse interface.
 */
function instanceOfApplyOTTResponse(value) {
    if (!('responseCode' in value) || value['responseCode'] === undefined)
        return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined)
        return false;
    if (!('userResources' in value) || value['userResources'] === undefined)
        return false;
    return true;
}
function ApplyOTTResponseFromJSON(json) {
    return ApplyOTTResponseFromJSONTyped(json, false);
}
function ApplyOTTResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'userResources': (json['userResources'].map(ApplyOTTResponseUserResourcesInner_1.ApplyOTTResponseUserResourcesInnerFromJSON)),
        'additionalInfo': json['additionalInfo'] == null ? undefined : json['additionalInfo'],
    };
}
function ApplyOTTResponseToJSON(json) {
    return ApplyOTTResponseToJSONTyped(json, false);
}
function ApplyOTTResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'userResources': (value['userResources'].map(ApplyOTTResponseUserResourcesInner_1.ApplyOTTResponseUserResourcesInnerToJSON)),
        'additionalInfo': value['additionalInfo'],
    };
}
const propertyValidationAttributesMap = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
};
function validateApplyOTTResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));
    return validationErrorContexts;
}
