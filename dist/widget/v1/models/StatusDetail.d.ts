/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
/**
 *
 * @export
 * @interface StatusDetail
 */
export interface StatusDetail {
    /**
     * The status of acquirement
     * @type {string}
     * @memberof StatusDetail
     */
    acquirementStatus: StatusDetailAcquirementStatusEnum;
    /**
     * Whether the frozen is true or not
     * @type {string}
     * @memberof StatusDetail
     */
    frozen?: string;
    /**
     * Whether the cancelled is true or not
     * @type {string}
     * @memberof StatusDetail
     */
    cancelled?: string;
}
/**
 * @export
 */
export declare const StatusDetailAcquirementStatusEnum: {
    readonly Init: "INIT";
    readonly Success: "SUCCESS";
    readonly Closed: "CLOSED";
    readonly Paying: "PAYING";
    readonly MerchantAccept: "MERCHANT_ACCEPT";
    readonly Cancelled: "CANCELLED";
};
export type StatusDetailAcquirementStatusEnum = typeof StatusDetailAcquirementStatusEnum[keyof typeof StatusDetailAcquirementStatusEnum] | '';
/**
 * Check if a given object implements the StatusDetail interface.
 */
export declare function instanceOfStatusDetail(value: object): value is StatusDetail;
export declare function StatusDetailFromJSON(json: any): StatusDetail;
export declare function StatusDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatusDetail;
export declare function StatusDetailToJSON(json: any): StatusDetail;
export declare function StatusDetailToJSONTyped(value?: StatusDetail | null, ignoreDiscriminator?: boolean): any;
export declare function validateStatusDetail(value: StatusDetail): ValidationErrorContext[];
