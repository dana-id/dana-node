"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMoney = instanceOfMoney;
exports.MoneyFromJSON = MoneyFromJSON;
exports.MoneyFromJSONTyped = MoneyFromJSONTyped;
exports.MoneyToJSON = MoneyToJSON;
exports.MoneyToJSONTyped = MoneyToJSONTyped;
exports.validateMoney = validateMoney;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the Money interface.
 */
function instanceOfMoney(value) {
    if (!('value' in value) || value['value'] === undefined)
        return false;
    if (!('currency' in value) || value['currency'] === undefined)
        return false;
    return true;
}
function MoneyFromJSON(json) {
    return MoneyFromJSONTyped(json, false);
}
function MoneyFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'value': json['value'],
        'currency': json['currency'],
    };
}
function MoneyToJSON(json) {
    return MoneyToJSONTyped(json, false);
}
function MoneyToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'value': value['value'],
        'currency': value['currency'],
    };
}
const propertyValidationAttributesMap = {
    value: {
        maxLength: 19,
    },
    currency: {
        maxLength: 3,
    },
};
function validateMoney(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('value', value.value, propertyValidationAttributesMap['value']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('currency', value.currency, propertyValidationAttributesMap['currency']));
    return validationErrorContexts;
}
