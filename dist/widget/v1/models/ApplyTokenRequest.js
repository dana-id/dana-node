"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplyTokenRequestFromJSON = ApplyTokenRequestFromJSON;
exports.ApplyTokenRequestFromJSONTyped = ApplyTokenRequestFromJSONTyped;
exports.ApplyTokenRequestToJSON = ApplyTokenRequestToJSON;
exports.ApplyTokenRequestToJSONTyped = ApplyTokenRequestToJSONTyped;
exports.validateApplyTokenRequest = validateApplyTokenRequest;
const ApplyTokenAuthorizationCodeRequest_1 = require("./ApplyTokenAuthorizationCodeRequest");
const ApplyTokenRefreshTokenRequest_1 = require("./ApplyTokenRefreshTokenRequest");
function ApplyTokenRequestFromJSON(json) {
    return ApplyTokenRequestFromJSONTyped(json, false);
}
function ApplyTokenRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    if ((0, ApplyTokenAuthorizationCodeRequest_1.instanceOfApplyTokenAuthorizationCodeRequest)(json)) {
        return (0, ApplyTokenAuthorizationCodeRequest_1.ApplyTokenAuthorizationCodeRequestFromJSONTyped)(json, true);
    }
    if ((0, ApplyTokenRefreshTokenRequest_1.instanceOfApplyTokenRefreshTokenRequest)(json)) {
        return (0, ApplyTokenRefreshTokenRequest_1.ApplyTokenRefreshTokenRequestFromJSONTyped)(json, true);
    }
    return {};
}
function ApplyTokenRequestToJSON(json) {
    return ApplyTokenRequestToJSONTyped(json, false);
}
function ApplyTokenRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    if ((0, ApplyTokenAuthorizationCodeRequest_1.instanceOfApplyTokenAuthorizationCodeRequest)(value)) {
        return (0, ApplyTokenAuthorizationCodeRequest_1.ApplyTokenAuthorizationCodeRequestToJSON)(value);
    }
    if ((0, ApplyTokenRefreshTokenRequest_1.instanceOfApplyTokenRefreshTokenRequest)(value)) {
        return (0, ApplyTokenRefreshTokenRequest_1.ApplyTokenRefreshTokenRequestToJSON)(value);
    }
    return {};
}
function validateApplyTokenRequest(value) {
    if (value == null) {
        return [];
    }
    if ((0, ApplyTokenAuthorizationCodeRequest_1.instanceOfApplyTokenAuthorizationCodeRequest)(value)) {
        return (0, ApplyTokenAuthorizationCodeRequest_1.validateApplyTokenAuthorizationCodeRequest)(value);
    }
    if ((0, ApplyTokenRefreshTokenRequest_1.instanceOfApplyTokenRefreshTokenRequest)(value)) {
        return (0, ApplyTokenRefreshTokenRequest_1.validateApplyTokenRefreshTokenRequest)(value);
    }
    return [];
}
