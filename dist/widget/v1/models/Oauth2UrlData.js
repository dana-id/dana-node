"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfOauth2UrlData = instanceOfOauth2UrlData;
exports.Oauth2UrlDataFromJSON = Oauth2UrlDataFromJSON;
exports.Oauth2UrlDataFromJSONTyped = Oauth2UrlDataFromJSONTyped;
exports.Oauth2UrlDataToJSON = Oauth2UrlDataToJSON;
exports.Oauth2UrlDataToJSONTyped = Oauth2UrlDataToJSONTyped;
exports.validateOauth2UrlData = validateOauth2UrlData;
const runtime_1 = require("../../../runtime");
const Oauth2UrlDataSeamlessData_1 = require("./Oauth2UrlDataSeamlessData");
/**
 * Check if a given object implements the Oauth2UrlData interface.
 */
function instanceOfOauth2UrlData(value) {
    if (!('externalId' in value) || value['externalId'] === undefined)
        return false;
    if (!('merchantId' in value) || value['merchantId'] === undefined)
        return false;
    if (!('redirectUrl' in value) || value['redirectUrl'] === undefined)
        return false;
    return true;
}
function Oauth2UrlDataFromJSON(json) {
    return Oauth2UrlDataFromJSONTyped(json, false);
}
function Oauth2UrlDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'externalId': json['externalId'],
        'merchantId': json['merchantId'],
        'subMerchantId': json['subMerchantId'] == null ? undefined : json['subMerchantId'],
        'seamlessData': json['seamlessData'] == null ? undefined : (0, Oauth2UrlDataSeamlessData_1.Oauth2UrlDataSeamlessDataFromJSON)(json['seamlessData']),
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'redirectUrl': json['redirectUrl'],
        'state': json['state'] == null ? undefined : json['state'],
        'lang': json['lang'] == null ? undefined : json['lang'],
        'allowRegistration': json['allowRegistration'] == null ? undefined : json['allowRegistration'],
    };
}
function Oauth2UrlDataToJSON(json) {
    return Oauth2UrlDataToJSONTyped(json, false);
}
function Oauth2UrlDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'externalId': value['externalId'],
        'merchantId': value['merchantId'],
        'subMerchantId': value['subMerchantId'],
        'seamlessData': (0, Oauth2UrlDataSeamlessData_1.Oauth2UrlDataSeamlessDataToJSON)(value['seamlessData']),
        'scopes': value['scopes'],
        'redirectUrl': value['redirectUrl'],
        'state': value['state'],
        'lang': value['lang'],
        'allowRegistration': value['allowRegistration'],
    };
}
const propertyValidationAttributesMap = {
    externalId: {
        maxLength: 64,
    },
    merchantId: {
        maxLength: 64,
    },
    subMerchantId: {
        maxLength: 64,
    },
};
function validateOauth2UrlData(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('externalId', value.externalId, propertyValidationAttributesMap['externalId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('merchantId', value.merchantId, propertyValidationAttributesMap['merchantId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('subMerchantId', value.subMerchantId, propertyValidationAttributesMap['subMerchantId']));
    validationErrorContexts.push(...(0, Oauth2UrlDataSeamlessData_1.validateOauth2UrlDataSeamlessData)(value.seamlessData));
    return validationErrorContexts;
}
