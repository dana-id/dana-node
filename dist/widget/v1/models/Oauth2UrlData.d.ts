/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Oauth2UrlDataSeamlessData } from './Oauth2UrlDataSeamlessData';
/**
 * Data needed to construct Oauth2Url
 * @export
 * @interface Oauth2UrlData
 */
export interface Oauth2UrlData {
    /**
     * Identifier from merchant
     * @type {string}
     * @memberof Oauth2UrlData
     */
    externalId: string;
    /**
     * Merchant identifier that is unique per each merchant
     * @type {string}
     * @memberof Oauth2UrlData
     */
    merchantId: string;
    /**
     * Information of sub merchant identifier
     * @type {string}
     * @memberof Oauth2UrlData
     */
    subMerchantId?: string;
    /**
     *
     * @type {Oauth2UrlDataSeamlessData}
     * @memberof Oauth2UrlData
     */
    seamlessData?: Oauth2UrlDataSeamlessData;
    /**
     * The scopes of the authorization
     * @type {Array<string>}
     * @memberof Oauth2UrlData
     */
    scopes?: Array<string>;
    /**
     * When user authorization is success, the user will be redirected to this URL
     * @type {string}
     * @memberof Oauth2UrlData
     */
    redirectUrl: string;
    /**
     * Random string for CSRF protection purposes
     * @type {string}
     * @memberof Oauth2UrlData
     */
    state?: string;
    /**
     * Service language code. ISO 639-1
     * @type {string}
     * @memberof Oauth2UrlData
     */
    lang?: string;
    /**
     * If value equals true, provider may enable registration process during binding. Default true
     * @type {string}
     * @memberof Oauth2UrlData
     */
    allowRegistration?: string;
    /**
     * Mode of the authorization. The possible values are API or DEEPLINK
     * @type {string}
     * @memberof Oauth2UrlData
     */
    mode?: Oauth2UrlDataModeEnum;
}
/**
 * @export
 */
export declare const Oauth2UrlDataModeEnum: {
    readonly Api: "API";
    readonly Deeplink: "DEEPLINK";
};
export type Oauth2UrlDataModeEnum = typeof Oauth2UrlDataModeEnum[keyof typeof Oauth2UrlDataModeEnum] | '';
/**
 * Check if a given object implements the Oauth2UrlData interface.
 */
export declare function instanceOfOauth2UrlData(value: object): value is Oauth2UrlData;
export declare function Oauth2UrlDataFromJSON(json: any): Oauth2UrlData;
export declare function Oauth2UrlDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): Oauth2UrlData;
export declare function Oauth2UrlDataToJSON(json: any): Oauth2UrlData;
export declare function Oauth2UrlDataToJSONTyped(value?: Oauth2UrlData | null, ignoreDiscriminator?: boolean): any;
export declare function validateOauth2UrlData(value: Oauth2UrlData): ValidationErrorContext[];
