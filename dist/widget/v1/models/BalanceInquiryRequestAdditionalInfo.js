"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBalanceInquiryRequestAdditionalInfo = instanceOfBalanceInquiryRequestAdditionalInfo;
exports.BalanceInquiryRequestAdditionalInfoFromJSON = BalanceInquiryRequestAdditionalInfoFromJSON;
exports.BalanceInquiryRequestAdditionalInfoFromJSONTyped = BalanceInquiryRequestAdditionalInfoFromJSONTyped;
exports.BalanceInquiryRequestAdditionalInfoToJSON = BalanceInquiryRequestAdditionalInfoToJSON;
exports.BalanceInquiryRequestAdditionalInfoToJSONTyped = BalanceInquiryRequestAdditionalInfoToJSONTyped;
exports.validateBalanceInquiryRequestAdditionalInfo = validateBalanceInquiryRequestAdditionalInfo;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the BalanceInquiryRequestAdditionalInfo interface.
 */
function instanceOfBalanceInquiryRequestAdditionalInfo(value) {
    if (!('accessToken' in value) || value['accessToken'] === undefined)
        return false;
    return true;
}
function BalanceInquiryRequestAdditionalInfoFromJSON(json) {
    return BalanceInquiryRequestAdditionalInfoFromJSONTyped(json, false);
}
function BalanceInquiryRequestAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accessToken': json['accessToken'],
    };
}
function BalanceInquiryRequestAdditionalInfoToJSON(json) {
    return BalanceInquiryRequestAdditionalInfoToJSONTyped(json, false);
}
function BalanceInquiryRequestAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'accessToken': value['accessToken'],
    };
}
const propertyValidationAttributesMap = {
    accessToken: {
        maxLength: 512,
    },
};
function validateBalanceInquiryRequestAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('accessToken', value.accessToken, propertyValidationAttributesMap['accessToken']));
    return validationErrorContexts;
}
