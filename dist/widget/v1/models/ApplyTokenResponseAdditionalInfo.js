"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfApplyTokenResponseAdditionalInfo = instanceOfApplyTokenResponseAdditionalInfo;
exports.ApplyTokenResponseAdditionalInfoFromJSON = ApplyTokenResponseAdditionalInfoFromJSON;
exports.ApplyTokenResponseAdditionalInfoFromJSONTyped = ApplyTokenResponseAdditionalInfoFromJSONTyped;
exports.ApplyTokenResponseAdditionalInfoToJSON = ApplyTokenResponseAdditionalInfoToJSON;
exports.ApplyTokenResponseAdditionalInfoToJSONTyped = ApplyTokenResponseAdditionalInfoToJSONTyped;
exports.validateApplyTokenResponseAdditionalInfo = validateApplyTokenResponseAdditionalInfo;
const ApplyTokenResponseAdditionalInfoUserInfo_1 = require("./ApplyTokenResponseAdditionalInfoUserInfo");
/**
 * Check if a given object implements the ApplyTokenResponseAdditionalInfo interface.
 */
function instanceOfApplyTokenResponseAdditionalInfo(value) {
    return true;
}
function ApplyTokenResponseAdditionalInfoFromJSON(json) {
    return ApplyTokenResponseAdditionalInfoFromJSONTyped(json, false);
}
function ApplyTokenResponseAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'userInfo': json['userInfo'] == null ? undefined : (0, ApplyTokenResponseAdditionalInfoUserInfo_1.ApplyTokenResponseAdditionalInfoUserInfoFromJSON)(json['userInfo']),
    };
}
function ApplyTokenResponseAdditionalInfoToJSON(json) {
    return ApplyTokenResponseAdditionalInfoToJSONTyped(json, false);
}
function ApplyTokenResponseAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'userInfo': (0, ApplyTokenResponseAdditionalInfoUserInfo_1.ApplyTokenResponseAdditionalInfoUserInfoToJSON)(value['userInfo']),
    };
}
const propertyValidationAttributesMap = {};
function validateApplyTokenResponseAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, ApplyTokenResponseAdditionalInfoUserInfo_1.validateApplyTokenResponseAdditionalInfoUserInfo)(value.userInfo));
    return validationErrorContexts;
}
