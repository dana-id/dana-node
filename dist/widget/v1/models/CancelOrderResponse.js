"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCancelOrderResponse = instanceOfCancelOrderResponse;
exports.CancelOrderResponseFromJSON = CancelOrderResponseFromJSON;
exports.CancelOrderResponseFromJSONTyped = CancelOrderResponseFromJSONTyped;
exports.CancelOrderResponseToJSON = CancelOrderResponseToJSON;
exports.CancelOrderResponseToJSONTyped = CancelOrderResponseToJSONTyped;
exports.validateCancelOrderResponse = validateCancelOrderResponse;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the CancelOrderResponse interface.
 */
function instanceOfCancelOrderResponse(value) {
    if (!('responseCode' in value) || value['responseCode'] === undefined)
        return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined)
        return false;
    if (!('originalPartnerReferenceNo' in value) || value['originalPartnerReferenceNo'] === undefined)
        return false;
    return true;
}
function CancelOrderResponseFromJSON(json) {
    return CancelOrderResponseFromJSONTyped(json, false);
}
function CancelOrderResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'originalReferenceNo': json['originalReferenceNo'] == null ? undefined : json['originalReferenceNo'],
        'originalPartnerReferenceNo': json['originalPartnerReferenceNo'],
        'originalExternalId': json['originalExternalId'] == null ? undefined : json['originalExternalId'],
        'cancelTime': json['cancelTime'] == null ? undefined : json['cancelTime'],
        'transactionDate': json['transactionDate'] == null ? undefined : json['transactionDate'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : json['additionalInfo'],
    };
}
function CancelOrderResponseToJSON(json) {
    return CancelOrderResponseToJSONTyped(json, false);
}
function CancelOrderResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'originalReferenceNo': value['originalReferenceNo'],
        'originalPartnerReferenceNo': value['originalPartnerReferenceNo'],
        'originalExternalId': value['originalExternalId'],
        'cancelTime': value['cancelTime'],
        'transactionDate': value['transactionDate'],
        'additionalInfo': value['additionalInfo'],
    };
}
const propertyValidationAttributesMap = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
    originalReferenceNo: {
        maxLength: 64,
    },
    originalPartnerReferenceNo: {
        maxLength: 64,
    },
    originalExternalId: {
        maxLength: 36,
    },
    cancelTime: {
        maxLength: 25,
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
    transactionDate: {
        maxLength: 25,
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
};
function validateCancelOrderResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('originalReferenceNo', value.originalReferenceNo, propertyValidationAttributesMap['originalReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('originalPartnerReferenceNo', value.originalPartnerReferenceNo, propertyValidationAttributesMap['originalPartnerReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('originalExternalId', value.originalExternalId, propertyValidationAttributesMap['originalExternalId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('cancelTime', value.cancelTime, propertyValidationAttributesMap['cancelTime']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('transactionDate', value.transactionDate, propertyValidationAttributesMap['transactionDate']));
    return validationErrorContexts;
}
