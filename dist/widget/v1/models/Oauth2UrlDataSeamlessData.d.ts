/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
/**
 * Option for binding process.Please refer sample below to know how to include seamlessData
 * @export
 * @interface Oauth2UrlDataSeamlessData
 */
export interface Oauth2UrlDataSeamlessData {
    /**
     * Userâ€™s bizScenario
     * @type {string}
     * @memberof Oauth2UrlDataSeamlessData
     */
    bizScenario?: string;
    /**
     * User's phone number. If this field is filled in, the user must log in with the number that has been included
     * @type {string}
     * @memberof Oauth2UrlDataSeamlessData
     */
    mobileNumber?: string;
    /**
     * Value which states that the mobile number that has been included in seamlessData has verified ownership and does not require OTP verification by the provider, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)
     * @type {string}
     * @memberof Oauth2UrlDataSeamlessData
     */
    verifiedTime?: string;
    /**
     * User identifier on partner application
     * @type {string}
     * @memberof Oauth2UrlDataSeamlessData
     */
    externalUid?: string;
    /**
     * User's device identifier
     * @type {string}
     * @memberof Oauth2UrlDataSeamlessData
     */
    deviceId?: string;
    /**
     * Identifier to differentiate seamless registration flow. The possible values are true or false
     * @type {boolean}
     * @memberof Oauth2UrlDataSeamlessData
     */
    skipRegisterConsult?: boolean;
}
/**
 * Check if a given object implements the Oauth2UrlDataSeamlessData interface.
 */
export declare function instanceOfOauth2UrlDataSeamlessData(value: object): value is Oauth2UrlDataSeamlessData;
export declare function Oauth2UrlDataSeamlessDataFromJSON(json: any): Oauth2UrlDataSeamlessData;
export declare function Oauth2UrlDataSeamlessDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): Oauth2UrlDataSeamlessData;
export declare function Oauth2UrlDataSeamlessDataToJSON(json: any): Oauth2UrlDataSeamlessData;
export declare function Oauth2UrlDataSeamlessDataToJSONTyped(value?: Oauth2UrlDataSeamlessData | null, ignoreDiscriminator?: boolean): any;
export declare function validateOauth2UrlDataSeamlessData(value: Oauth2UrlDataSeamlessData): ValidationErrorContext[];
