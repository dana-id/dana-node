/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { ApplyTokenResponseAdditionalInfo } from './ApplyTokenResponseAdditionalInfo';
/**
 *
 * @export
 * @interface ApplyTokenResponse
 */
export interface ApplyTokenResponse {
    /**
     * Response code. Refer to https://dashboard.dana.id/api-docs/read/110#HTML-ApplyToken-ResponseCodeandMessage
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    responseCode: string;
    /**
     * Response message. Refer to https://dashboard.dana.id/api-docs/read/110#HTML-ApplyToken-ResponseCodeandMessage
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    responseMessage: string;
    /**
     * Token type. Present if successfully processed
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    tokenType?: string;
    /**
     * This token is called Customer Token that will be used as a parameter on header in other API “Authorization-Customer”. Present if successfully processed
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    accessToken: string;
    /**
     * Expiry time for access token was given to user, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time). Present if successfully processed
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    accessTokenExpiryTime?: string;
    /**
     * This token is used for refresh session if existing token has been expired. Present if successfully processed
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    refreshToken?: string;
    /**
     * Expiry time for refresh token was given to user, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time). Present if successfully processed
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    refreshTokenExpiryTime?: string;
    /**
     * Additional information
     * @type {ApplyTokenResponseAdditionalInfo}
     * @memberof ApplyTokenResponse
     */
    additionalInfo?: ApplyTokenResponseAdditionalInfo;
}
/**
 * Check if a given object implements the ApplyTokenResponse interface.
 */
export declare function instanceOfApplyTokenResponse(value: object): value is ApplyTokenResponse;
export declare function ApplyTokenResponseFromJSON(json: any): ApplyTokenResponse;
export declare function ApplyTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplyTokenResponse;
export declare function ApplyTokenResponseToJSON(json: any): ApplyTokenResponse;
export declare function ApplyTokenResponseToJSONTyped(value?: ApplyTokenResponse | null, ignoreDiscriminator?: boolean): any;
export declare function validateApplyTokenResponse(value: ApplyTokenResponse): ValidationErrorContext[];
