"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfTransferToBankResponse = instanceOfTransferToBankResponse;
exports.TransferToBankResponseFromJSON = TransferToBankResponseFromJSON;
exports.TransferToBankResponseFromJSONTyped = TransferToBankResponseFromJSONTyped;
exports.TransferToBankResponseToJSON = TransferToBankResponseToJSON;
exports.TransferToBankResponseToJSONTyped = TransferToBankResponseToJSONTyped;
exports.validateTransferToBankResponse = validateTransferToBankResponse;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the TransferToBankResponse interface.
 */
function instanceOfTransferToBankResponse(value) {
    if (!('responseCode' in value) || value['responseCode'] === undefined)
        return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined)
        return false;
    return true;
}
function TransferToBankResponseFromJSON(json) {
    return TransferToBankResponseFromJSONTyped(json, false);
}
function TransferToBankResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'referenceNo': json['referenceNo'] == null ? undefined : json['referenceNo'],
        'partnerReferenceNo': json['partnerReferenceNo'] == null ? undefined : json['partnerReferenceNo'],
        'transactionDate': json['transactionDate'] == null ? undefined : json['transactionDate'],
        'referenceNumber': json['referenceNumber'] == null ? undefined : json['referenceNumber'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : json['additionalInfo'],
    };
}
function TransferToBankResponseToJSON(json) {
    return TransferToBankResponseToJSONTyped(json, false);
}
function TransferToBankResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'referenceNo': value['referenceNo'],
        'partnerReferenceNo': value['partnerReferenceNo'],
        'transactionDate': value['transactionDate'],
        'referenceNumber': value['referenceNumber'],
        'additionalInfo': value['additionalInfo'],
    };
}
const propertyValidationAttributesMap = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
    referenceNo: {
        maxLength: 64,
    },
    partnerReferenceNo: {
        maxLength: 64,
    },
    transactionDate: {
        maxLength: 25,
        pattern: new RegExp('/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+07:00$/'.slice(1, -1)),
    },
    referenceNumber: {
        maxLength: 64,
    },
};
function validateTransferToBankResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('referenceNo', value.referenceNo, propertyValidationAttributesMap['referenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('partnerReferenceNo', value.partnerReferenceNo, propertyValidationAttributesMap['partnerReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('transactionDate', value.transactionDate, propertyValidationAttributesMap['transactionDate']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('referenceNumber', value.referenceNumber, propertyValidationAttributesMap['referenceNumber']));
    return validationErrorContexts;
}
