/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { BankAccountInquiryResponseAdditionalInfo } from './BankAccountInquiryResponseAdditionalInfo';
import type { Money } from './Money';
/**
 *
 * @export
 * @interface BankAccountInquiryResponse
 */
export interface BankAccountInquiryResponse {
    /**
     * Refer to response code list
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    responseCode: string;
    /**
     * Refer to response code list
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    responseMessage: string;
    /**
     * Transaction identifier on DANA system
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    referenceNo?: string;
    /**
     * Unique transaction identifier on partner system which assigned to each transaction<br>
     * Notes:<br>
     * If the partner receives a timeout or an unexpected response from DANA and partner expects to perform retry request to DANA, please use the partnerReferenceNo that is the same as the one used in the transaction request process before
     *
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    partnerReferenceNo?: string;
    /**
     * Customer account type
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    accountType?: string;
    /**
     * Beneficiary account number
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    beneficiaryAccountNumber: string;
    /**
     * Beneficiary account name
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    beneficiaryAccountName: string;
    /**
     * Beneficiary Bank code
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    beneficiaryBankCode?: string;
    /**
     * Beneficiary Bank short name
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    beneficiaryBankShortName?: string;
    /**
     * Beneficiary Bank name
     * @type {string}
     * @memberof BankAccountInquiryResponse
     */
    beneficiaryBankName?: string;
    /**
     * Amount. Contains two sub-fields:<br>
     * 1. Value: Transaction amount, including the cents<br>
     * 2. Currency: Currency code based on ISO
     *
     * @type {Money}
     * @memberof BankAccountInquiryResponse
     */
    amount: Money;
    /**
     *
     * @type {BankAccountInquiryResponseAdditionalInfo}
     * @memberof BankAccountInquiryResponse
     */
    additionalInfo?: BankAccountInquiryResponseAdditionalInfo;
}
/**
 * Check if a given object implements the BankAccountInquiryResponse interface.
 */
export declare function instanceOfBankAccountInquiryResponse(value: object): value is BankAccountInquiryResponse;
export declare function BankAccountInquiryResponseFromJSON(json: any): BankAccountInquiryResponse;
export declare function BankAccountInquiryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccountInquiryResponse;
export declare function BankAccountInquiryResponseToJSON(json: any): BankAccountInquiryResponse;
export declare function BankAccountInquiryResponseToJSONTyped(value?: BankAccountInquiryResponse | null, ignoreDiscriminator?: boolean): any;
export declare function validateBankAccountInquiryResponse(value: BankAccountInquiryResponse): ValidationErrorContext[];
