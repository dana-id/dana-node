/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Money } from './Money';
/**
 *
 * @export
 * @interface TransferToDanaResponse
 */
export interface TransferToDanaResponse {
    /**
     * Refer to response code list
     * @type {string}
     * @memberof TransferToDanaResponse
     */
    responseCode: string;
    /**
     * Refer to response code list
     * @type {string}
     * @memberof TransferToDanaResponse
     */
    responseMessage: string;
    /**
     * Transaction identifier on DANA system
     * @type {string}
     * @memberof TransferToDanaResponse
     */
    referenceNo?: string;
    /**
     * Unique transaction identifier on partner system which assigned to each transaction<br>
     * Notes:<br>
     * If the partner receives a timeout or an unexpected response from DANA and partner expects to perform retry request to DANA, please use the partnerReferenceNo that is the same as the one used in the transaction request process before
     *
     * @type {string}
     * @memberof TransferToDanaResponse
     */
    partnerReferenceNo: string;
    /**
     * Session identifier
     * @type {string}
     * @memberof TransferToDanaResponse
     */
    sessionId?: string;
    /**
     * Customer account number, in format 628xxx
     * @type {string}
     * @memberof TransferToDanaResponse
     */
    customerNumber?: string;
    /**
     * Amount. Contains two sub-fields:<br>
     * 1. Value: Transaction amount, including the cents<br>
     * 2. Currency: Currency code based on ISO
     *
     * @type {Money}
     * @memberof TransferToDanaResponse
     */
    amount: Money;
    /**
     * Additional information
     * @type {object}
     * @memberof TransferToDanaResponse
     */
    additionalInfo?: object;
}
/**
 * Check if a given object implements the TransferToDanaResponse interface.
 */
export declare function instanceOfTransferToDanaResponse(value: object): value is TransferToDanaResponse;
export declare function TransferToDanaResponseFromJSON(json: any): TransferToDanaResponse;
export declare function TransferToDanaResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferToDanaResponse;
export declare function TransferToDanaResponseToJSON(json: any): TransferToDanaResponse;
export declare function TransferToDanaResponseToJSONTyped(value?: TransferToDanaResponse | null, ignoreDiscriminator?: boolean): any;
export declare function validateTransferToDanaResponse(value: TransferToDanaResponse): ValidationErrorContext[];
