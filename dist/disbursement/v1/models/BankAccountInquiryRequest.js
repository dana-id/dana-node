"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBankAccountInquiryRequest = instanceOfBankAccountInquiryRequest;
exports.BankAccountInquiryRequestFromJSON = BankAccountInquiryRequestFromJSON;
exports.BankAccountInquiryRequestFromJSONTyped = BankAccountInquiryRequestFromJSONTyped;
exports.BankAccountInquiryRequestToJSON = BankAccountInquiryRequestToJSON;
exports.BankAccountInquiryRequestToJSONTyped = BankAccountInquiryRequestToJSONTyped;
exports.validateBankAccountInquiryRequest = validateBankAccountInquiryRequest;
const runtime_1 = require("../../../runtime");
const BankAccountInquiryRequestAdditionalInfo_1 = require("./BankAccountInquiryRequestAdditionalInfo");
const Money_1 = require("./Money");
/**
 * Check if a given object implements the BankAccountInquiryRequest interface.
 */
function instanceOfBankAccountInquiryRequest(value) {
    if (!('customerNumber' in value) || value['customerNumber'] === undefined)
        return false;
    if (!('beneficiaryAccountNumber' in value) || value['beneficiaryAccountNumber'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('additionalInfo' in value) || value['additionalInfo'] === undefined)
        return false;
    return true;
}
function BankAccountInquiryRequestFromJSON(json) {
    return BankAccountInquiryRequestFromJSONTyped(json, false);
}
function BankAccountInquiryRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'partnerReferenceNo': json['partnerReferenceNo'] == null ? undefined : json['partnerReferenceNo'],
        'customerNumber': json['customerNumber'],
        'beneficiaryAccountNumber': json['beneficiaryAccountNumber'],
        'amount': (0, Money_1.MoneyFromJSON)(json['amount']),
        'additionalInfo': (0, BankAccountInquiryRequestAdditionalInfo_1.BankAccountInquiryRequestAdditionalInfoFromJSON)(json['additionalInfo']),
    };
}
function BankAccountInquiryRequestToJSON(json) {
    return BankAccountInquiryRequestToJSONTyped(json, false);
}
function BankAccountInquiryRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'partnerReferenceNo': value['partnerReferenceNo'],
        'customerNumber': value['customerNumber'],
        'beneficiaryAccountNumber': value['beneficiaryAccountNumber'],
        'amount': (0, Money_1.MoneyToJSON)(value['amount']),
        'additionalInfo': (0, BankAccountInquiryRequestAdditionalInfo_1.BankAccountInquiryRequestAdditionalInfoToJSON)(value['additionalInfo']),
    };
}
const propertyValidationAttributesMap = {
    partnerReferenceNo: {
        maxLength: 64,
    },
    customerNumber: {
        maxLength: 32,
    },
    beneficiaryAccountNumber: {
        maxLength: 32,
    },
};
function validateBankAccountInquiryRequest(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('partnerReferenceNo', value.partnerReferenceNo, propertyValidationAttributesMap['partnerReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('customerNumber', value.customerNumber, propertyValidationAttributesMap['customerNumber']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('beneficiaryAccountNumber', value.beneficiaryAccountNumber, propertyValidationAttributesMap['beneficiaryAccountNumber']));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.amount));
    validationErrorContexts.push(...(0, BankAccountInquiryRequestAdditionalInfo_1.validateBankAccountInquiryRequestAdditionalInfo)(value.additionalInfo));
    return validationErrorContexts;
}
