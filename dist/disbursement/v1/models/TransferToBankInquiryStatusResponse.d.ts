/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Money } from './Money';
/**
 *
 * @export
 * @interface TransferToBankInquiryStatusResponse
 */
export interface TransferToBankInquiryStatusResponse {
    /**
     * Refer to response code list
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    responseCode: string;
    /**
     * Refer to response code list
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    responseMessage: string;
    /**
     * Original transaction identifier on partner system
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    originalPartnerReferenceNo?: string;
    /**
     * Original transaction identifier on DANA system
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    originalReferenceNo?: string;
    /**
     * Original external identifier on header message
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    originalExternalId?: string;
    /**
     * Transaction type indicator is based on the service code of the original transaction request, value always 00
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    serviceCode: string;
    /**
     * Amount. Contains two sub-fields:<br>
     * 1. Value: Transaction amount, including the cents<br>
     * 2. Currency: Currency code based on ISO
     *
     * @type {Money}
     * @memberof TransferToBankInquiryStatusResponse
     */
    amount?: Money;
    /**
     * Status of latest transaction:<br>
     * 00 - Success<br>
     * 01 - Initiated<br>
     * 02 - Paying<br>
     * 03 - Pending<br>
     * 04 - Refunded<br>
     * 05 - Canceled<br>
     * 06 - Failed<br>
     * 07 - Not found
     *
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    latestTransactionStatus: TransferToBankInquiryStatusResponseLatestTransactionStatusEnum;
    /**
     * Description of transaction status
     * @type {string}
     * @memberof TransferToBankInquiryStatusResponse
     */
    transactionStatusDesc?: string;
    /**
     * Additional information
     * @type {object}
     * @memberof TransferToBankInquiryStatusResponse
     */
    additionalInfo?: object;
}
/**
 * @export
 */
export declare const TransferToBankInquiryStatusResponseLatestTransactionStatusEnum: {
    readonly _00: "00";
    readonly _01: "01";
    readonly _02: "02";
    readonly _03: "03";
    readonly _04: "04";
    readonly _05: "05";
    readonly _06: "06";
    readonly _07: "07";
};
export type TransferToBankInquiryStatusResponseLatestTransactionStatusEnum = typeof TransferToBankInquiryStatusResponseLatestTransactionStatusEnum[keyof typeof TransferToBankInquiryStatusResponseLatestTransactionStatusEnum] | '';
/**
 * Check if a given object implements the TransferToBankInquiryStatusResponse interface.
 */
export declare function instanceOfTransferToBankInquiryStatusResponse(value: object): value is TransferToBankInquiryStatusResponse;
export declare function TransferToBankInquiryStatusResponseFromJSON(json: any): TransferToBankInquiryStatusResponse;
export declare function TransferToBankInquiryStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferToBankInquiryStatusResponse;
export declare function TransferToBankInquiryStatusResponseToJSON(json: any): TransferToBankInquiryStatusResponse;
export declare function TransferToBankInquiryStatusResponseToJSONTyped(value?: TransferToBankInquiryStatusResponse | null, ignoreDiscriminator?: boolean): any;
export declare function validateTransferToBankInquiryStatusResponse(value: TransferToBankInquiryStatusResponse): ValidationErrorContext[];
