"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBankAccountInquiryResponseAdditionalInfo = instanceOfBankAccountInquiryResponseAdditionalInfo;
exports.BankAccountInquiryResponseAdditionalInfoFromJSON = BankAccountInquiryResponseAdditionalInfoFromJSON;
exports.BankAccountInquiryResponseAdditionalInfoFromJSONTyped = BankAccountInquiryResponseAdditionalInfoFromJSONTyped;
exports.BankAccountInquiryResponseAdditionalInfoToJSON = BankAccountInquiryResponseAdditionalInfoToJSON;
exports.BankAccountInquiryResponseAdditionalInfoToJSONTyped = BankAccountInquiryResponseAdditionalInfoToJSONTyped;
exports.validateBankAccountInquiryResponseAdditionalInfo = validateBankAccountInquiryResponseAdditionalInfo;
const Money_1 = require("./Money");
/**
 * Check if a given object implements the BankAccountInquiryResponseAdditionalInfo interface.
 */
function instanceOfBankAccountInquiryResponseAdditionalInfo(value) {
    if (!('feeAmount' in value) || value['feeAmount'] === undefined)
        return false;
    return true;
}
function BankAccountInquiryResponseAdditionalInfoFromJSON(json) {
    return BankAccountInquiryResponseAdditionalInfoFromJSONTyped(json, false);
}
function BankAccountInquiryResponseAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'feeAmount': (0, Money_1.MoneyFromJSON)(json['feeAmount']),
    };
}
function BankAccountInquiryResponseAdditionalInfoToJSON(json) {
    return BankAccountInquiryResponseAdditionalInfoToJSONTyped(json, false);
}
function BankAccountInquiryResponseAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'feeAmount': (0, Money_1.MoneyToJSON)(value['feeAmount']),
    };
}
const propertyValidationAttributesMap = {};
function validateBankAccountInquiryResponseAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.feeAmount));
    return validationErrorContexts;
}
