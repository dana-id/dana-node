/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Money } from './Money';
/**
 *
 * @export
 * @interface TransferToDanaInquiryStatusResponse
 */
export interface TransferToDanaInquiryStatusResponse {
    /**
     * Refer to response code list
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    responseCode: string;
    /**
     * Refer to response code list
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    responseMessage: string;
    /**
     * Original transaction identifier on partner system
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    originalPartnerReferenceNo: string;
    /**
     * Original transaction identifier on DANA system
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    originalReferenceNo?: string;
    /**
     * Original external identifier on header message
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    originalExternalId?: string;
    /**
     * Transaction type indicator is based on the service code of the original transaction request, value always 38
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    serviceCode: string;
    /**
     * Amount. Contains two sub-fields:<br>
     * 1. Value: Transaction amount, including the cents<br>
     * 2. Currency: Currency code based on ISO
     *
     * @type {Money}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    amount: Money;
    /**
     * Status of latest transaction:<br>
     * 00 - Success<br>
     * 01 - Initiated<br>
     * 02 - Paying<br>
     * 03 - Pending<br>
     * 04 - Refunded<br>
     * 05 - Cancelled<br>
     * 06 - Failed<br>
     * 07 - Not found
     *
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    latestTransactionStatus: TransferToDanaInquiryStatusResponseLatestTransactionStatusEnum;
    /**
     * Description of transaction status
     * @type {string}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    transactionStatusDesc: string;
    /**
     * Additional information
     * @type {object}
     * @memberof TransferToDanaInquiryStatusResponse
     */
    additionalInfo?: object;
}
/**
 * @export
 */
export declare const TransferToDanaInquiryStatusResponseLatestTransactionStatusEnum: {
    readonly _00: "00";
    readonly _01: "01";
    readonly _02: "02";
    readonly _03: "03";
    readonly _04: "04";
    readonly _05: "05";
    readonly _06: "06";
    readonly _07: "07";
};
export type TransferToDanaInquiryStatusResponseLatestTransactionStatusEnum = typeof TransferToDanaInquiryStatusResponseLatestTransactionStatusEnum[keyof typeof TransferToDanaInquiryStatusResponseLatestTransactionStatusEnum] | '';
/**
 * Check if a given object implements the TransferToDanaInquiryStatusResponse interface.
 */
export declare function instanceOfTransferToDanaInquiryStatusResponse(value: object): value is TransferToDanaInquiryStatusResponse;
export declare function TransferToDanaInquiryStatusResponseFromJSON(json: any): TransferToDanaInquiryStatusResponse;
export declare function TransferToDanaInquiryStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferToDanaInquiryStatusResponse;
export declare function TransferToDanaInquiryStatusResponseToJSON(json: any): TransferToDanaInquiryStatusResponse;
export declare function TransferToDanaInquiryStatusResponseToJSONTyped(value?: TransferToDanaInquiryStatusResponse | null, ignoreDiscriminator?: boolean): any;
export declare function validateTransferToDanaInquiryStatusResponse(value: TransferToDanaInquiryStatusResponse): ValidationErrorContext[];
