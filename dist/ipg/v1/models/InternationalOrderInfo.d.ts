/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { Money } from './Money';
import type { PaymentPromoInfo } from './PaymentPromoInfo';
import type { InternationalOrderInfoExchangeRate } from './InternationalOrderInfoExchangeRate';
import type { RefundPromoInfo } from './RefundPromoInfo';
/**
 * Additional information for international orders (non-IDR currency transactions)
 * @export
 * @interface InternationalOrderInfo
 */
export interface InternationalOrderInfo {
    /**
     * Origin order amount in the original currency. Contains value (amount including cents) and currency (code based on ISO)
     * @type {Money}
     * @memberof InternationalOrderInfo
     */
    originOrderAmount?: Money;
    /**
     *
     * @type {InternationalOrderInfoExchangeRate}
     * @memberof InternationalOrderInfo
     */
    exchangeRate?: InternationalOrderInfoExchangeRate;
    /**
     * Total amount after conversion. Contains value (amount including cents) and currency (code based on ISO)
     * @type {Money}
     * @memberof InternationalOrderInfo
     */
    totalAmount?: Money;
    /**
     * Define the detail of payment promo information, contains promotion that handled and set by merchant
     * @type {PaymentPromoInfo}
     * @memberof InternationalOrderInfo
     */
    paymentPromoInfo?: PaymentPromoInfo;
    /**
     * Define the detail of refund promo information
     * @type {RefundPromoInfo}
     * @memberof InternationalOrderInfo
     */
    refundPromoInfo?: RefundPromoInfo;
}
/**
 * Check if a given object implements the InternationalOrderInfo interface.
 */
export declare function instanceOfInternationalOrderInfo(value: object): value is InternationalOrderInfo;
export declare function InternationalOrderInfoFromJSON(json: any): InternationalOrderInfo;
export declare function InternationalOrderInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternationalOrderInfo;
export declare function InternationalOrderInfoToJSON(json: any): InternationalOrderInfo;
export declare function InternationalOrderInfoToJSONTyped(value?: InternationalOrderInfo | null, ignoreDiscriminator?: boolean): any;
export declare function validateInternationalOrderInfo(value: InternationalOrderInfo): ValidationErrorContext[];
