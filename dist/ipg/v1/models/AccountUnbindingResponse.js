"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAccountUnbindingResponse = instanceOfAccountUnbindingResponse;
exports.AccountUnbindingResponseFromJSON = AccountUnbindingResponseFromJSON;
exports.AccountUnbindingResponseFromJSONTyped = AccountUnbindingResponseFromJSONTyped;
exports.AccountUnbindingResponseToJSON = AccountUnbindingResponseToJSON;
exports.AccountUnbindingResponseToJSONTyped = AccountUnbindingResponseToJSONTyped;
exports.validateAccountUnbindingResponse = validateAccountUnbindingResponse;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the AccountUnbindingResponse interface.
 */
function instanceOfAccountUnbindingResponse(value) {
    if (!('responseCode' in value) || value['responseCode'] === undefined)
        return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined)
        return false;
    return true;
}
function AccountUnbindingResponseFromJSON(json) {
    return AccountUnbindingResponseFromJSONTyped(json, false);
}
function AccountUnbindingResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'referenceNo': json['referenceNo'] == null ? undefined : json['referenceNo'],
        'partnerReferenceNo': json['partnerReferenceNo'] == null ? undefined : json['partnerReferenceNo'],
        'merchantId': json['merchantId'] == null ? undefined : json['merchantId'],
        'subMerchantId': json['subMerchantId'] == null ? undefined : json['subMerchantId'],
        'linkId': json['linkId'] == null ? undefined : json['linkId'],
        'unlinkResult': json['unlinkResult'] == null ? undefined : json['unlinkResult'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : json['additionalInfo'],
    };
}
function AccountUnbindingResponseToJSON(json) {
    return AccountUnbindingResponseToJSONTyped(json, false);
}
function AccountUnbindingResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'referenceNo': value['referenceNo'],
        'partnerReferenceNo': value['partnerReferenceNo'],
        'merchantId': value['merchantId'],
        'subMerchantId': value['subMerchantId'],
        'linkId': value['linkId'],
        'unlinkResult': value['unlinkResult'],
        'additionalInfo': value['additionalInfo'],
    };
}
const propertyValidationAttributesMap = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
    referenceNo: {
        maxLength: 64,
    },
    partnerReferenceNo: {
        maxLength: 64,
    },
    merchantId: {
        maxLength: 64,
    },
    subMerchantId: {
        maxLength: 32,
    },
    linkId: {
        maxLength: 24,
    },
    unlinkResult: {
        maxLength: 64,
    },
};
function validateAccountUnbindingResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('referenceNo', value.referenceNo, propertyValidationAttributesMap['referenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('partnerReferenceNo', value.partnerReferenceNo, propertyValidationAttributesMap['partnerReferenceNo']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('merchantId', value.merchantId, propertyValidationAttributesMap['merchantId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('subMerchantId', value.subMerchantId, propertyValidationAttributesMap['subMerchantId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('linkId', value.linkId, propertyValidationAttributesMap['linkId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('unlinkResult', value.unlinkResult, propertyValidationAttributesMap['unlinkResult']));
    return validationErrorContexts;
}
