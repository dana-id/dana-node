"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfApplyOTTResponseUserResourcesInner = instanceOfApplyOTTResponseUserResourcesInner;
exports.ApplyOTTResponseUserResourcesInnerFromJSON = ApplyOTTResponseUserResourcesInnerFromJSON;
exports.ApplyOTTResponseUserResourcesInnerFromJSONTyped = ApplyOTTResponseUserResourcesInnerFromJSONTyped;
exports.ApplyOTTResponseUserResourcesInnerToJSON = ApplyOTTResponseUserResourcesInnerToJSON;
exports.ApplyOTTResponseUserResourcesInnerToJSONTyped = ApplyOTTResponseUserResourcesInnerToJSONTyped;
exports.validateApplyOTTResponseUserResourcesInner = validateApplyOTTResponseUserResourcesInner;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the ApplyOTTResponseUserResourcesInner interface.
 */
function instanceOfApplyOTTResponseUserResourcesInner(value) {
    return true;
}
function ApplyOTTResponseUserResourcesInnerFromJSON(json) {
    return ApplyOTTResponseUserResourcesInnerFromJSONTyped(json, false);
}
function ApplyOTTResponseUserResourcesInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'resourceType': json['resourceType'] == null ? undefined : json['resourceType'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}
function ApplyOTTResponseUserResourcesInnerToJSON(json) {
    return ApplyOTTResponseUserResourcesInnerToJSONTyped(json, false);
}
function ApplyOTTResponseUserResourcesInnerToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'resourceType': value['resourceType'],
        'value': value['value'],
    };
}
const propertyValidationAttributesMap = {
    resourceType: {
        maxLength: 32,
    },
    value: {
        maxLength: 64,
    },
};
function validateApplyOTTResponseUserResourcesInner(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('resourceType', value.resourceType, propertyValidationAttributesMap['resourceType']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('value', value.value, propertyValidationAttributesMap['value']));
    return validationErrorContexts;
}
