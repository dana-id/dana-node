"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAmountDetail = instanceOfAmountDetail;
exports.AmountDetailFromJSON = AmountDetailFromJSON;
exports.AmountDetailFromJSONTyped = AmountDetailFromJSONTyped;
exports.AmountDetailToJSON = AmountDetailToJSON;
exports.AmountDetailToJSONTyped = AmountDetailToJSONTyped;
exports.validateAmountDetail = validateAmountDetail;
const Money_1 = require("./Money");
/**
 * Check if a given object implements the AmountDetail interface.
 */
function instanceOfAmountDetail(value) {
    if (!('orderAmount' in value) || value['orderAmount'] === undefined)
        return false;
    return true;
}
function AmountDetailFromJSON(json) {
    return AmountDetailFromJSONTyped(json, false);
}
function AmountDetailFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'orderAmount': (0, Money_1.MoneyFromJSON)(json['orderAmount']),
        'payAmount': json['payAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['payAmount']),
        'voidAmount': json['voidAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['voidAmount']),
        'confirmAmount': json['confirmAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['confirmAmount']),
        'refundAmount': json['refundAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['refundAmount']),
        'chargebackAmount': json['chargebackAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['chargebackAmount']),
        'chargeAmount': json['chargeAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['chargeAmount']),
    };
}
function AmountDetailToJSON(json) {
    return AmountDetailToJSONTyped(json, false);
}
function AmountDetailToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'orderAmount': (0, Money_1.MoneyToJSON)(value['orderAmount']),
        'payAmount': (0, Money_1.MoneyToJSON)(value['payAmount']),
        'voidAmount': (0, Money_1.MoneyToJSON)(value['voidAmount']),
        'confirmAmount': (0, Money_1.MoneyToJSON)(value['confirmAmount']),
        'refundAmount': (0, Money_1.MoneyToJSON)(value['refundAmount']),
        'chargebackAmount': (0, Money_1.MoneyToJSON)(value['chargebackAmount']),
        'chargeAmount': (0, Money_1.MoneyToJSON)(value['chargeAmount']),
    };
}
const propertyValidationAttributesMap = {};
function validateAmountDetail(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.orderAmount));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.payAmount));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.voidAmount));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.confirmAmount));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.refundAmount));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.chargebackAmount));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.chargeAmount));
    return validationErrorContexts;
}
