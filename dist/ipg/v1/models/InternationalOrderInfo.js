"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfInternationalOrderInfo = instanceOfInternationalOrderInfo;
exports.InternationalOrderInfoFromJSON = InternationalOrderInfoFromJSON;
exports.InternationalOrderInfoFromJSONTyped = InternationalOrderInfoFromJSONTyped;
exports.InternationalOrderInfoToJSON = InternationalOrderInfoToJSON;
exports.InternationalOrderInfoToJSONTyped = InternationalOrderInfoToJSONTyped;
exports.validateInternationalOrderInfo = validateInternationalOrderInfo;
const Money_1 = require("./Money");
const PaymentPromoInfo_1 = require("./PaymentPromoInfo");
const InternationalOrderInfoExchangeRate_1 = require("./InternationalOrderInfoExchangeRate");
const RefundPromoInfo_1 = require("./RefundPromoInfo");
/**
 * Check if a given object implements the InternationalOrderInfo interface.
 */
function instanceOfInternationalOrderInfo(value) {
    return true;
}
function InternationalOrderInfoFromJSON(json) {
    return InternationalOrderInfoFromJSONTyped(json, false);
}
function InternationalOrderInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'originOrderAmount': json['originOrderAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['originOrderAmount']),
        'exchangeRate': json['exchangeRate'] == null ? undefined : (0, InternationalOrderInfoExchangeRate_1.InternationalOrderInfoExchangeRateFromJSON)(json['exchangeRate']),
        'totalAmount': json['totalAmount'] == null ? undefined : (0, Money_1.MoneyFromJSON)(json['totalAmount']),
        'paymentPromoInfo': json['paymentPromoInfo'] == null ? undefined : (0, PaymentPromoInfo_1.PaymentPromoInfoFromJSON)(json['paymentPromoInfo']),
        'refundPromoInfo': json['refundPromoInfo'] == null ? undefined : (0, RefundPromoInfo_1.RefundPromoInfoFromJSON)(json['refundPromoInfo']),
    };
}
function InternationalOrderInfoToJSON(json) {
    return InternationalOrderInfoToJSONTyped(json, false);
}
function InternationalOrderInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'originOrderAmount': (0, Money_1.MoneyToJSON)(value['originOrderAmount']),
        'exchangeRate': (0, InternationalOrderInfoExchangeRate_1.InternationalOrderInfoExchangeRateToJSON)(value['exchangeRate']),
        'totalAmount': (0, Money_1.MoneyToJSON)(value['totalAmount']),
        'paymentPromoInfo': (0, PaymentPromoInfo_1.PaymentPromoInfoToJSON)(value['paymentPromoInfo']),
        'refundPromoInfo': (0, RefundPromoInfo_1.RefundPromoInfoToJSON)(value['refundPromoInfo']),
    };
}
const propertyValidationAttributesMap = {};
function validateInternationalOrderInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.originOrderAmount));
    validationErrorContexts.push(...(0, InternationalOrderInfoExchangeRate_1.validateInternationalOrderInfoExchangeRate)(value.exchangeRate));
    validationErrorContexts.push(...(0, Money_1.validateMoney)(value.totalAmount));
    validationErrorContexts.push(...(0, PaymentPromoInfo_1.validatePaymentPromoInfo)(value.paymentPromoInfo));
    validationErrorContexts.push(...(0, RefundPromoInfo_1.validateRefundPromoInfo)(value.refundPromoInfo));
    return validationErrorContexts;
}
