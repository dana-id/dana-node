/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
import type { ApplyTokenResponseAdditionalInfo } from './ApplyTokenResponseAdditionalInfo';
/**
 *
 * @export
 * @interface ApplyTokenResponse
 */
export interface ApplyTokenResponse {
    /**
     * Refer to response code list:<br>
     * * 2007400 - Successful<br>
     * * 4007400 - Bad Request - Retry request with proper parameter<br>
     * * 4007401 - Invalid Field Format - Retry request with proper parameter<br>
     * * 4007402 - Invalid Mandatory Field - Retry request with proper parameter<br>
     * * 4017400 - Unauthorized. [reason] - Retry request with proper parameter<br>
     * * 4297400 - Too Many Requests - Retry request periodically by sending same request payload<br>
     * * 5007400 - General Error - Retry request periodically<br>
     * * 5007401 - Internal Server Error - Retry request periodically by sending same request payload<br>
     *
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    responseCode: string;
    /**
     * Refer to response code list
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    responseMessage: string;
    /**
     * Token type
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    tokenType?: string;
    /**
     * Access token that can be used as user authorization
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    accessToken: string;
    /**
     * Access token expiry time
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    accessTokenExpiryTime?: string;
    /**
     * Token that can be used to refresh the accessToken when it expires
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    refreshToken?: string;
    /**
     * Refresh token expiry time
     * @type {string}
     * @memberof ApplyTokenResponse
     */
    refreshTokenExpiryTime?: string;
    /**
     *
     * @type {ApplyTokenResponseAdditionalInfo}
     * @memberof ApplyTokenResponse
     */
    additionalInfo?: ApplyTokenResponseAdditionalInfo;
}
/**
 * Check if a given object implements the ApplyTokenResponse interface.
 */
export declare function instanceOfApplyTokenResponse(value: object): value is ApplyTokenResponse;
export declare function ApplyTokenResponseFromJSON(json: any): ApplyTokenResponse;
export declare function ApplyTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplyTokenResponse;
export declare function ApplyTokenResponseToJSON(json: any): ApplyTokenResponse;
export declare function ApplyTokenResponseToJSONTyped(value?: ApplyTokenResponse | null, ignoreDiscriminator?: boolean): any;
export declare function validateApplyTokenResponse(value: ApplyTokenResponse): ValidationErrorContext[];
