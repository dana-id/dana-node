/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
import type { ValidationErrorContext } from '../../../runtime';
/**
 * Schema that documents the fields that can be included in the seamlessData JSON object (which is sent as a URL-encoded string)
 * @export
 * @interface SeamlessData
 */
export interface SeamlessData {
    /**
     * External user identifier
     * @type {string}
     * @memberof SeamlessData
     */
    externalUid?: string;
    /**
     * User mobile number
     * @type {string}
     * @memberof SeamlessData
     */
    mobile?: string;
    /**
     * Alternative field name for mobile number
     * @type {string}
     * @memberof SeamlessData
     */
    mobileNumber?: string;
    /**
     * Request timestamp
     * @type {Date}
     * @memberof SeamlessData
     */
    reqTime?: Date;
    /**
     * Verification timestamp
     * @type {string}
     * @memberof SeamlessData
     */
    verifiedTime?: string;
    /**
     * Request message ID
     * @type {string}
     * @memberof SeamlessData
     */
    reqMsgId?: string;
    /**
     * Whether to skip consultation registration
     * @type {boolean}
     * @memberof SeamlessData
     */
    skipConsultRegister?: boolean;
    /**
     * Business scenario
     * @type {string}
     * @memberof SeamlessData
     */
    bizScenario?: string;
}
/**
 * Check if a given object implements the SeamlessData interface.
 */
export declare function instanceOfSeamlessData(value: object): value is SeamlessData;
export declare function SeamlessDataFromJSON(json: any): SeamlessData;
export declare function SeamlessDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeamlessData;
export declare function SeamlessDataToJSON(json: any): SeamlessData;
export declare function SeamlessDataToJSONTyped(value?: SeamlessData | null, ignoreDiscriminator?: boolean): any;
export declare function validateSeamlessData(value: SeamlessData): ValidationErrorContext[];
