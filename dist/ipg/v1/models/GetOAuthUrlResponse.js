"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGetOAuthUrlResponse = instanceOfGetOAuthUrlResponse;
exports.GetOAuthUrlResponseFromJSON = GetOAuthUrlResponseFromJSON;
exports.GetOAuthUrlResponseFromJSONTyped = GetOAuthUrlResponseFromJSONTyped;
exports.GetOAuthUrlResponseToJSON = GetOAuthUrlResponseToJSON;
exports.GetOAuthUrlResponseToJSONTyped = GetOAuthUrlResponseToJSONTyped;
exports.validateGetOAuthUrlResponse = validateGetOAuthUrlResponse;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the GetOAuthUrlResponse interface.
 */
function instanceOfGetOAuthUrlResponse(value) {
    if (!('responseCode' in value) || value['responseCode'] === undefined)
        return false;
    if (!('responseMessage' in value) || value['responseMessage'] === undefined)
        return false;
    if (!('state' in value) || value['state'] === undefined)
        return false;
    if (!('authCode' in value) || value['authCode'] === undefined)
        return false;
    return true;
}
function GetOAuthUrlResponseFromJSON(json) {
    return GetOAuthUrlResponseFromJSONTyped(json, false);
}
function GetOAuthUrlResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'responseCode': json['responseCode'],
        'responseMessage': json['responseMessage'],
        'state': json['state'],
        'authCode': json['authCode'],
    };
}
function GetOAuthUrlResponseToJSON(json) {
    return GetOAuthUrlResponseToJSONTyped(json, false);
}
function GetOAuthUrlResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'responseCode': value['responseCode'],
        'responseMessage': value['responseMessage'],
        'state': value['state'],
        'authCode': value['authCode'],
    };
}
const propertyValidationAttributesMap = {
    responseCode: {
        maxLength: 7,
    },
    responseMessage: {
        maxLength: 150,
    },
    state: {
        maxLength: 32,
    },
    authCode: {
        maxLength: 256,
    },
};
function validateGetOAuthUrlResponse(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseCode', value.responseCode, propertyValidationAttributesMap['responseCode']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('responseMessage', value.responseMessage, propertyValidationAttributesMap['responseMessage']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('state', value.state, propertyValidationAttributesMap['state']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('authCode', value.authCode, propertyValidationAttributesMap['authCode']));
    return validationErrorContexts;
}
