"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfApplyOTTRequestAdditionalInfo = instanceOfApplyOTTRequestAdditionalInfo;
exports.ApplyOTTRequestAdditionalInfoFromJSON = ApplyOTTRequestAdditionalInfoFromJSON;
exports.ApplyOTTRequestAdditionalInfoFromJSONTyped = ApplyOTTRequestAdditionalInfoFromJSONTyped;
exports.ApplyOTTRequestAdditionalInfoToJSON = ApplyOTTRequestAdditionalInfoToJSON;
exports.ApplyOTTRequestAdditionalInfoToJSONTyped = ApplyOTTRequestAdditionalInfoToJSONTyped;
exports.validateApplyOTTRequestAdditionalInfo = validateApplyOTTRequestAdditionalInfo;
const runtime_1 = require("../../../runtime");
/**
 * Check if a given object implements the ApplyOTTRequestAdditionalInfo interface.
 */
function instanceOfApplyOTTRequestAdditionalInfo(value) {
    if (!('accessToken' in value) || value['accessToken'] === undefined)
        return false;
    return true;
}
function ApplyOTTRequestAdditionalInfoFromJSON(json) {
    return ApplyOTTRequestAdditionalInfoFromJSONTyped(json, false);
}
function ApplyOTTRequestAdditionalInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accessToken': json['accessToken'],
        'endUserIpAddress': json['endUserIpAddress'] == null ? undefined : json['endUserIpAddress'],
        'deviceId': json['deviceId'] == null ? undefined : json['deviceId'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
    };
}
function ApplyOTTRequestAdditionalInfoToJSON(json) {
    return ApplyOTTRequestAdditionalInfoToJSONTyped(json, false);
}
function ApplyOTTRequestAdditionalInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'accessToken': value['accessToken'],
        'endUserIpAddress': value['endUserIpAddress'],
        'deviceId': value['deviceId'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
    };
}
const propertyValidationAttributesMap = {
    accessToken: {
        maxLength: 512,
    },
    endUserIpAddress: {
        maxLength: 15,
    },
    deviceId: {
        maxLength: 400,
    },
    latitude: {
        maxLength: 10,
        pattern: new RegExp('/^[-+]?[0-9]{1,2}([.][0-9]{1,4})?$/'.slice(1, -1)),
    },
    longitude: {
        maxLength: 10,
        pattern: new RegExp('/^[-+]?[0-9]{1,2}([.][0-9]{1,4})?$/'.slice(1, -1)),
    },
};
function validateApplyOTTRequestAdditionalInfo(value) {
    const validationErrorContexts = [];
    if (value == null) {
        return validationErrorContexts;
    }
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('accessToken', value.accessToken, propertyValidationAttributesMap['accessToken']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('endUserIpAddress', value.endUserIpAddress, propertyValidationAttributesMap['endUserIpAddress']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('deviceId', value.deviceId, propertyValidationAttributesMap['deviceId']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('latitude', value.latitude, propertyValidationAttributesMap['latitude']));
    validationErrorContexts.push(...runtime_1.ValidationUtil.validateProperty('longitude', value.longitude, propertyValidationAttributesMap['longitude']));
    return validationErrorContexts;
}
